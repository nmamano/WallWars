{"version":3,"sources":["shared/utils.js","shared/colorThemes.js","shared/globalSettings.js","shared/showToastNotification.js","shared/TextButton.js","shared/FormSlider.js","shared/gameLogicUtils.js","shared/CoordinateSlider.js","shared/BoardSizeSlider.js","lobby/LobbyForm.js","lobby/ChallengeList.js","lobby/RecentGameList.js","lobby/LobbyTabs.js","game/gameState.js","game/Board.js","shared/IconButton.js","shared/Header.js","shared/Dialog.js","game/StatusHeader.js","game/TimerHeader.js","game/gameHelp.js","game/MoveHistory.js","game/ControlPanel.js","game/GamePage.js","lobby/GameShowcase.js","lobby/lobbyHelp.js","lobby/LobbyPage.js","App.js","index.js","shared/hoverHighlight.module.css","static/blueBgDark.jfif","static/blueBgLight.jfif","static/moveSound.mp3"],"names":["roundNum","num","Math","round","Number","EPSILON","prettyDate","date","longFormat","curTime","Date","getTime","dateTime","seconds","floor","months","days","hours","minutes","randPlayerName","maxPlayerNameLen","uniqueNamesGenerator","dictionaries","names","length","slice","C","white","black","redLighten4","redLighten3","redLighten2","redLighten1","red","redDarken1","redDarken2","redDarken3","redDarken4","tealLighten2","tealLighten1","teal","tealDarken1","tealDarken2","tealDarken4","indigoLighten4","indigoLighten3","indigoLighten2","indigoLighten1","indigo","indigoDarken2","indigoDarken3","indigoDarken4","amberLighten3","amberLighten2","amberLighten1","amber","amberDarken1","amberDarken2","orangeLighten2","yellowLighten5","yellowLighten4","yellowLighten2","yellowLighten1","yellowDarken1","yellowDarken2","yellowDarken4","customBlueLighten1","customBlue","customBlueDarken1","customBlueDarken2","customBlueDarken3","customGrayLighten1","customGray","customGrayDarken1","customGrayDarken2","customGrayDarken3","customGrayDarken4","customGrayDarken5","lightOrange","customLightYellow","customDarkYellow","chessSquareLight","chessSquareDark","greenMenuTheme","background","backgroundImage","container","containerAlternate","button","importantButton","header","headerButton","recentGamesBackground","recentGamesAlternate","selectedTab","tab","tealDarken3","disabledTab","disabledTabText","blueMenuTheme","monochromeBoardTheme","ground","emptyWall","pillar","hoveredGround","hoveredWall","player1","player2","timer1","timer2","lowTime","wall1","wall2","goalBackground1","goalBackground2","combinedGoalBackground","goalToken","ghost1","ghost2","ghostWall1","ghostWall2","traceGround","lastMoveTokenBorder","lastMoveWallBorder","coord","move1","move2","currentMove","getThemeColor","theme","elem","isDarkModeOn","undefined","console","error","lightColor","darkColor","invert","getColor","themeName","corners","dims","defaultInitialPlayerPos","c","defaultGoalPos","defaultBoardDims","defaultBoardSettings","startPos","goalPos","maxBoardDims","cellSizes","showToastNotification","text","duration","toast","autoClose","hideProgressBar","transition","Slide","pauseOnFocusLoss","TextButton","tooltip","onClick","menuTheme","style","backgroundColor","color","node","waves","FormSlider","label","min","max","value","onChange","internalToDisplay","displayToInternal","fontSize","marginBottom","range","start","step","tooltips","wNumb","decimals","cellEnum","wall","internalToClassicBoardSize","internalDim","classicToInternalBoardSize","classicDim","internalToClassicCoord","internalCoord","classicToInternalCoord","classicCoord","boardPixelHeight","groundSize","wallWidth","boardPixelWidth","emptyBoardDistance","goal","abs","emptyBoardDistances","boardSettings","timeControlToString","timeControl","increment","cellTypeByPos","pos","posEq","pos1","pos2","emptyGrid","grid","r","inBounds","isWallBuilt","accessibleNeighbors","dimensions","dirs","res","pr","pc","k","dr","dc","adjWall","adjGround","push","distance","target","posToKey","queue","i","dist","Map","set","nbrs","nbr","has","get","isDistanceAtMost","maxDistance","dis","canReach","canBuildWall","playerPos","goals","isValidBoard","rowNotation","columnNotation","String","fromCharCode","actionNotation","CoordinateSlider","BoardSizeSlider","tokens","LobbyForm","clientParams","isLargeScreen","handlePlayerName","handleDuration","handleIncrement","handleIsPublic","handleNumRows","handleNumCols","handleShowMoreOptions","handleStartPos","handleGoalPos","handleJoinCode","handleCreateGame","handleJoinGame","handleRefreshName","handleToken","showMoreOptions","BS","useEffect","window","addEventListener","downHandler","removeEventListener","key","joinCode","defaultToken","className","height","marginTop","s","m","id","playerName","props","small","floating","icon","token","options","alignment","autoTrigger","closeOnClick","constrainWidth","coverTrigger","hover","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","trigger","map","width","display","flexDirection","justifyContent","padding","paddingRight","paddingLeft","filledIn","checked","isPublic","offLabel","onLabel","title","val","placeholder","log","ChallengeList","challenges","handleAcceptChallenge","col1","col2","headEntryStyle","position","top","paddingTop","paddingBottom","borderRadius","entryStyle","overflowY","centered","game","cursor","hoverHighlight","hoveredGame","playerNames","dists","creationDate","winnerToString","serverGame","winner","cachedFinalDists","RecentGameList","recentGames","handleViewGame","size","clear","_id","cloneDeep","idxToMove","creatorStarts","moveHistory","actions","k2","g1","g2","d1","d2","finalDists","startDate","LobbyTabs","socket","useImmer","needToRequestChallenges","showChallenges","state","updateState","draftState","emit","once","on","challenge","splice","off","canHover","useMediaQuery","query","useState","hoveredTab","setHoveredTab","handleMouseEnter","handleMouseLeave","tabStyle","alignSelf","justifySelf","alignItems","borderBottom","fontWeight","recentGamesStyle","challengesStyle","liveGamesStyle","selectedTabColor","margin","border","gridTemplateRows","gridTemplateColumns","alignContent","onMouseEnter","onMouseLeave","roleEnum","turnCount","creatorToMove","creatorToMoveAtIndex","viewIndex","indexToMove","ghostType","isOpponentPresent","arePlayersPresent","clientRole","countActions","selectedPos","posActor","posOther","goalActor","goalOther","extraWalls","gridCopy","W","applyCookieSettings","cookies","isVolumeOn","zoomLevel","zoomVal","parseInt","applyAddCreator","name","lifeCycleStage","totalTimeInSeconds","timeLeft","distances","applyAddJoiner","applyCreatedOnServer","applyJoinedOnServer","creatorName","creatorToken","creatorPresent","startSeconds","applyJoinerJoined","joinerName","joinerToken","applyMove","timeLeftAfterMove","moveIndex","tc","otherIdx","newPlayerPos","newGrid","newTimeLeft","wallCounts","aPos","aType","pToMoveStarted","otherIsWithinOneMove","matchScore","finishReason","index","ghostAction","premoveActions","acts","applySelectedCell","clientToMove","selectedType","idx","gType","curPos","actCount","fullMoveActions","newGhostAction","tLeft","shouldPlaySound","moveToSend","remainingTime","applySelectedCellPremove","premoveWalls","premoveGround","act","premoveGroundDist","premoveState","premoveEnum","newPremoveActions","W2","closeDialogs","showRematchDialog","showDrawDialog","showTakebackDialog","applyDrawGame","applyResignGame","resignerIsCreator","applyTakeback","requesterIsCreator","numMovesToUndo","pop","applySetupRematch","applyAddExtraTime","playerIndex","applyWonOnTime","winnerIndex","Board","lastActions","tracePos","p1","p2","handleClick","boardTheme","hoveredCell","setHoveredCell","getCol","borderStyle","color1","color2","defaultTokens","token1","token2","allPos","repRows","repCols","tokenSize","coordColor","isOneOf","gridArea","MozUserSelect","WebkitUserSelect","msUserSelect","userSelect","player1Here","player2Here","goal1Here","goal2Here","playerHere","goalHere","ghostHere","premoveHere","traceHere","lastMoveHere","shadowHere","shadow1Here","shadow2Here","lastMove1Here","lastMove2Here","coordFits","letterCoordHere","numberCoordHere","coordHere","hoveredHere","cellType","solidWallHere","borderTop","borderLeft","borderRight","lastMoveTextShadow","clickableGroundStyle","left","textShadow","marginLeft","marginRight","IconButton","modalTitle","modalBody","modalConfirmButtonText","bgColor","disabled","flat","modal","bottomSheet","fixedFooter","open","dismissible","endingTop","opacity","preventScrolling","startingTop","contextEnum","Header","mainText","context","helpText","aboutText","handleLeaveGame","handleToggleDarkMode","handleToggleTheme","onCopy","buttonCol","columnGap","rowGap","Dialog","body","acceptButtonText","rejectButtonText","isOpen","callback","StatusHeader","msg","nameToMove","agreement","time","resign","abandon","firstMoveName","dot","isPresentDot","isPresent","TimerHeader","scores","min1","min2","sec1","sec2","timesAsStrings","pToMove","isLowOnTime","sep","showScores","childStyle","timerBg","lowTimeCol","gameHelp","moveToString","move","a1","a2","moveNotation","tdStyle","MoveHistory","handleViewMove","colBg","colSelected","hoveredMode","GameControlPanel","handleResign","handleOfferDraw","handleRequestTakeback","handleGiveExtraTime","handleSeeFirstMove","handleSeePreviousMove","handleSeeNextMove","handleSeeLastMove","handleToggleVolume","handleIncreaseBoardSize","handleDecreaseBoardSize","controlPanelHeight","moveHistoryHeight","buttonHeight","gapHeight","takebackEnabled","isSpectator","gridColumnStart","gridColumnEnd","moveSound","UIfx","moveSoundAudio","GamePage","handleReturnToLobby","handleSetCookieId","useCookies","setCookie","opponentAbandoned","isKeyPressed","waitingForPing","createInitialState","cookieId","playerTokens","applyReceivedGame","ongoingGame","cookieIds","applyReturnToGame","abandonerIsCreator","applyAbandonGame","removeAllListeners","gameId","watchGameId","play","interval","setInterval","applyClockTick","clearInterval","handleSelectedCell","upHandler","p","moveHistoryDiv","document","getElementById","scrollTop","scrollHeight","displayTime1","displayTime2","path","onBackButtonEvent","e","preventDefault","history","pushState","location","pathname","gridTemplateAreas","gSize","wWidth","scalingFactor","pow","scaledGroundSize","scaledWallWidth","groundWallRatio","maxGroundRows","maxGroundCols","maxWallRows","maxWallCols","groundRows","groundCols","wallRows","wallCols","boardWidthWithMaxCols","maxGroundSizeWithCurRows","maxGroundSizeWithCurCols","newScaledGroundSize","newScaledWallWidth","boardHeight","boardWidth","gapSize","timersWidth","prevPos","getTracePos","clickedPos","ControlPanel","receiverIndex","large","accepted","nextMove","GameShowcase","needToRequestGame","finishedGameWait","groud","cToMove","lobbyHelpText","LobbyPage","nr","parseFloat","numRows","isNaN","nc","numCols","isGamePageOpen","hasOngoingGame","games","numGamesToRequest","initalLobbyState","newTheme","newSetting","validateName","validateDuration","dur","validateIncrement","inc","validateBoardSettings","bs","blueBgDark","blueBgLight","count","gridTemplAreas","gridTemplRows","gridTemplCols","sideBySideLayout","boardPixelDims","bHeight","bWidth","comboHeight","gridStyle","gameShowcaseHeader","returnToGameButton","curNr","pRow","gRow","curNc","pCol","gCol","player","code","App","process","socketIoClient","StrictMode","CookiesProvider","exact","to","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.4378cd3c.chunk.js","sourcesContent":["import { uniqueNamesGenerator, names } from \"unique-names-generator\";\r\n\r\nexport const roundNum = (num) => Math.round((num + Number.EPSILON) * 100) / 100;\r\n\r\nexport const prettyDate = (date, longFormat) => {\r\n  if (!date) return \"-\";\r\n  const curTime = new Date().getTime();\r\n  const dateTime = new Date(date).getTime();\r\n  const seconds = Math.floor((curTime - dateTime) / 1000);\r\n  const secondsIn30Days = 30 * 24 * 60 * 60;\r\n  const months = Math.floor(seconds / secondsIn30Days);\r\n  if (months > 1) return months + (longFormat ? \" months\" : \"mo\") + \" ago\";\r\n  if (months === 1) return \"1\" + (longFormat ? \" month\" : \"mo\") + \" ago\";\r\n  const secondsInADay = 24 * 60 * 60;\r\n  const days = Math.floor(seconds / secondsInADay);\r\n  if (days > 1) return days + (longFormat ? \" days\" : \"d\") + \" ago\";\r\n  if (days === 1) return \"1\" + (longFormat ? \" day\" : \"d\") + \" ago\";\r\n  const hours = Math.floor(seconds / 3600);\r\n  if (hours > 1) return hours + (longFormat ? \" hours\" : \"h\") + \" ago\";\r\n  if (hours === 1) return \"1\" + (longFormat ? \" hour\" : \"h\") + \" ago\";\r\n  const minutes = Math.floor(seconds / 60);\r\n  if (minutes > 1) return minutes + (longFormat ? \" minutes\" : \"m\") + \" ago\";\r\n  if (minutes === 1) return \"1\" + (longFormat ? \" minute\" : \"m\") + \" ago\";\r\n  if (seconds > 1) return seconds + (longFormat ? \" seconds\" : \"s\") + \" ago\";\r\n  if (seconds === 1) return seconds + (longFormat ? \" second\" : \"s\") + \" ago\";\r\n  return \"Just now\";\r\n};\r\n\r\nexport const randPlayerName = (maxPlayerNameLen) =>\r\n  uniqueNamesGenerator({\r\n    dictionaries: [names],\r\n    length: 1,\r\n  }).slice(0, maxPlayerNameLen);\r\n","import invert from \"invert-color\";\r\n\r\nconst C = {\r\n  white: \"#ffffff\",\r\n  black: \"#000000\",\r\n\r\n  //colors from materialize\r\n  //https://materializecss.com/color.html\r\n  redLighten4: \"#ffcdd2\",\r\n  redLighten3: \"#ef9a9a\",\r\n  redLighten2: \"#e57373\",\r\n  redLighten1: \"#ef5350\",\r\n  red: \"#f44336\",\r\n  redDarken1: \"#e53935\",\r\n  redDarken2: \"#d32f2f\",\r\n  redDarken3: \"#c62828\",\r\n  redDarken4: \"#b71c1c\",\r\n  tealLighten2: \"#4db6ac\",\r\n  tealLighten1: \"#26a69a\",\r\n  teal: \"#009688\",\r\n  tealDarken1: \"#00897b\",\r\n  tealDarken2: \"#00796b\",\r\n  tealDarken4: \"#004d40\",\r\n  indigoLighten4: \"#c5cae9\",\r\n  indigoLighten3: \"#9fa8da\",\r\n  indigoLighten2: \"#7986cb\",\r\n  indigoLighten1: \"#5c6bc0\",\r\n  indigo: \"#3f51b5\",\r\n  indigoDarken2: \"#303f9f\",\r\n  indigoDarken3: \"#283593\",\r\n  indigoDarken4: \"#1a237e\",\r\n  amberLighten3: \"#ffe082\",\r\n  amberLighten2: \"#ffd54f\",\r\n  amberLighten1: \"#ffca28\",\r\n  amber: \"#ffc107\",\r\n  amberDarken1: \"#ffb300\",\r\n  amberDarken2: \"#ffa000\",\r\n  orangeLighten2: \"#ffb74d\",\r\n  yellowLighten5: \"#fffde7\",\r\n  yellowLighten4: \"#fff9c4\",\r\n  yellowLighten2: \"#fff176\",\r\n  yellowLighten1: \"#ffc176\",\r\n  yellowDarken1: \"#fdd835\",\r\n  yellowDarken2: \"#fbc02d\",\r\n  yellowDarken4: \"#f57f17\",\r\n\r\n  //custom colors\r\n  customBlueLighten1: \"#6583C3\",\r\n  customBlue: \"#5876B6\",\r\n  customBlueDarken1: \"#4866A6\",\r\n  customBlueDarken2: \"#153373\",\r\n  customBlueDarken3: \"#355393\",\r\n  customGrayLighten1: \"#eaeaea\",\r\n  customGray: \"#d2d2d2\",\r\n  customGrayDarken1: \"#cccccc\",\r\n  customGrayDarken2: \"#999999\",\r\n  customGrayDarken3: \"#666666\",\r\n  customGrayDarken4: \"#454545\",\r\n  customGrayDarken5: \"#313131\",\r\n  lightOrange: \"#fbe4D6\",\r\n  customLightYellow: \"rgb(240,240,170)\",\r\n  customDarkYellow: \"#656505\",\r\n  //for a potential future board theme, unused atm\r\n  chessSquareLight: \"#f0d9b5\",\r\n  chessSquareDark: \"#b58863\",\r\n};\r\n\r\nconst greenMenuTheme = {\r\n  background: [C.teal, C.tealDarken4],\r\n  backgroundImage: [\"none\", \"none\"],\r\n  container: [C.tealDarken2, \"keep\"],\r\n  containerAlternate: [C.teal, C.tealDarken4],\r\n  button: [C.tealLighten2, \"keep\"],\r\n  importantButton: [C.red, \"keep\"],\r\n  header: [C.redLighten1, C.redDarken4],\r\n  headerButton: [C.redDarken1, \"keep\"],\r\n  recentGamesBackground: [C.redLighten2, C.redDarken2],\r\n  recentGamesAlternate: [C.redLighten1, C.redDarken1],\r\n  selectedTab: [C.tealDarken2, \"keep\"],\r\n  tab: [C.tealDarken1, C.tealDarken3],\r\n  disabledTab: [C.customGrayDarken1, C.customGrayDarken2],\r\n  disabledTabText: [C.customGrayDarken2, C.customGrayDarken3],\r\n  // hoveredGame: [C.amberDarken1, \"keep\"] (this is in hoverHighlight.module.css)\r\n};\r\n\r\nconst blueMenuTheme = {\r\n  background: [C.customBlueDarken3, \"keep\"],\r\n  backgroundImage: [\"blueBgLight\", \"blueBgDark\"],\r\n  container: [C.customBlueDarken3, C.customBlueDarken2],\r\n  containerAlternate: [C.customBlueDarken1, \"keep\"],\r\n  button: [C.customBlueLighten1, \"keep\"],\r\n  importantButton: [C.red, \"keep\"],\r\n  header: [C.customBlueDarken3, C.customBlueDarken2],\r\n  headerButton: [C.customBlueLighten1, \"keep\"],\r\n  recentGamesBackground: [C.customBlueLighten1, C.customBlueDarken1],\r\n  recentGamesAlternate: [C.customBlue, \"keep\"],\r\n  selectedTab: [C.customBlueDarken3, C.customBlueDarken2],\r\n  tab: [C.customBlue, C.customBlueDarken1],\r\n  disabledTab: [C.customGrayDarken1, C.customGrayDarken2],\r\n  disabledTabText: [C.customGrayDarken2, C.customGrayDarken3],\r\n  // hoveredGame: [C.amber, \"keep\"] (this is in hoverHighlight.module.css)\r\n};\r\n\r\n//different board themes can be combined with different main themes\r\n//but for now there is a single board theme\r\nconst monochromeBoardTheme = {\r\n  ground: [C.customGray, C.customGrayDarken4],\r\n  emptyWall: [C.customGrayLighten1, C.customGrayDarken5],\r\n  pillar: [C.customGrayDarken1, C.customGrayDarken4],\r\n  hoveredGround: [C.lightOrange, \"flip\"],\r\n  hoveredWall: [\"#f1bfa0\", \"flip\"],\r\n  player1: [C.red, C.redLighten1],\r\n  player2: [C.indigo, C.indigoLighten1],\r\n  timer1: [C.redLighten1, \"keep\"],\r\n  timer2: [C.indigoLighten1, \"keep\"],\r\n  lowTime: [C.orangeLighten2, \"keep\"],\r\n  wall1: [C.red, C.redLighten1],\r\n  wall2: [C.indigo, C.indigoLighten1],\r\n  goalBackground1: [C.redLighten4, C.redDarken2],\r\n  goalBackground2: [C.indigoLighten4, C.indigoDarken2],\r\n  combinedGoalBackground: [C.yellowLighten1, C.yellowDarken1],\r\n  goalToken: [C.customGrayLighten1, C.customGrayDarken5],\r\n  ghost1: [C.redLighten4, C.redLighten4],\r\n  ghost2: [C.indigoLighten4, C.indigoLighten4],\r\n  ghostWall1: [C.redLighten3, C.redLighten2],\r\n  ghostWall2: [C.indigoLighten3, C.indigoLighten4],\r\n  traceGround: [C.customLightYellow, C.customDarkYellow],\r\n  lastMoveTokenBorder: [C.customLightYellow, \"yellow\"],\r\n  lastMoveWallBorder: [C.customLightYellow, C.yellowDarken1],\r\n  coord: [C.white, C.black],\r\n\r\n  //for the move history\r\n  move1: [C.redLighten2, \"keep\"],\r\n  move2: [C.indigoLighten2, \"keep\"],\r\n  currentMove: [C.amberDarken1, \"keep\"],\r\n  // hoveredMove: [C.amber, \"keep\"] (this is in hoverHighlight.module.css)\r\n};\r\n\r\nconst getThemeColor = (theme, elem, isDarkModeOn) => {\r\n  if (theme[elem] === undefined)\r\n    console.error(`theme ${theme} does not have element ${elem}`);\r\n  const lightColor = theme[elem][0];\r\n  if (!isDarkModeOn) return lightColor;\r\n  const darkColor = theme[elem][1];\r\n  if (darkColor === \"keep\") return lightColor;\r\n  if (darkColor === \"flip\") return invert(lightColor);\r\n  return darkColor;\r\n};\r\n\r\nexport const getColor = (themeName, elem, isDarkModeOn) => {\r\n  if (themeName === \"green\") {\r\n    return getThemeColor(greenMenuTheme, elem, isDarkModeOn);\r\n  } else if (themeName === \"blue\") {\r\n    return getThemeColor(blueMenuTheme, elem, isDarkModeOn);\r\n  } else if (themeName === \"monochromeBoard\") {\r\n    return getThemeColor(monochromeBoardTheme, elem, isDarkModeOn);\r\n  }\r\n  console.error(\"unknown theme \" + themeName);\r\n  return \"#00FF00\";\r\n};\r\n","//settings that are fixed\r\n\r\nfunction corners(dims) {\r\n  return [\r\n    [0, 0],\r\n    [0, dims[1] - 1],\r\n    [dims[0] - 1, dims[1] - 1],\r\n    [dims[0] - 1, 0],\r\n  ];\r\n}\r\nexport const defaultInitialPlayerPos = (dims) => {\r\n  const c = corners(dims);\r\n  return [c[0], c[1]];\r\n};\r\nexport const defaultGoalPos = (dims) => {\r\n  const c = corners(dims);\r\n  return [c[2], c[3]];\r\n};\r\nconst defaultBoardDims = [15, 19];\r\n\r\nexport const defaultBoardSettings = {\r\n  dims: defaultBoardDims,\r\n  startPos: defaultInitialPlayerPos(defaultBoardDims),\r\n  goalPos: defaultGoalPos(defaultBoardDims),\r\n};\r\n\r\nexport const maxBoardDims = [19, 23];\r\nexport const cellSizes = {\r\n  groundSize: 37, //in pixels\r\n  wallWidth: 12, //in pixels\r\n  smallScreenGroundSize: 23, //in pixels\r\n  smallScreenWallWidth: 10, //in pixels\r\n};\r\n","import { toast, Slide } from \"react-toastify\";\r\n\r\nconst showToastNotification = (text, duration) => {\r\n  if (!duration || duration === 0) duration = 2500;\r\n  toast(text, {\r\n    autoClose: duration,\r\n    hideProgressBar: true,\r\n    transition: Slide,\r\n    pauseOnFocusLoss: false,\r\n  });\r\n};\r\n\r\nexport default showToastNotification;\r\n","import React from \"react\";\r\nimport { Button } from \"react-materialize\";\r\nimport { getColor } from \"./colorThemes\";\r\n\r\nconst TextButton = ({ text, tooltip, onClick, menuTheme, isDarkModeOn }) => {\r\n  return (\r\n    <Button\r\n      style={{\r\n        backgroundColor: getColor(menuTheme, \"button\", isDarkModeOn),\r\n        color: \"#FFFFFF\",\r\n      }}\r\n      node=\"button\"\r\n      waves=\"light\"\r\n      onClick={onClick}\r\n      tooltip={tooltip}\r\n    >\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default TextButton;\r\n","import React from \"react\";\r\nimport Nouislider from \"nouislider-react\";\r\nimport \"nouislider/distribute/nouislider.css\";\r\nimport wNumb from \"wnumb\";\r\n// import { getColor } from \"./colorThemes\";\r\n\r\nconst FormSlider = ({\r\n  label,\r\n  min,\r\n  max,\r\n  value,\r\n  onChange,\r\n  internalToDisplay,\r\n  displayToInternal,\r\n  menuTheme,\r\n  isDarkModeOn,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <span style={{ fontSize: \"15px\" }}>{label}</span>\r\n      <Nouislider\r\n        style={{\r\n          marginBottom: \"12px\",\r\n        }}\r\n        range={{\r\n          min: internalToDisplay(min),\r\n          max: internalToDisplay(max),\r\n        }}\r\n        start={[internalToDisplay(value)]}\r\n        step={1}\r\n        tooltips={[wNumb({ decimals: 0 })]}\r\n        // connect=\"lower\" //removed until we can change the color\r\n        onChange={(value) => {\r\n          onChange(displayToInternal(value));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSlider;\r\n","//pure functions that compute things related to the game's logic\r\n\r\nimport { roundNum } from \"../shared/utils\";\r\n\r\n/* Internal coordinate system:\r\nWalls and junctions between four \"walkable\" cells (called pillars) also count as cells for the coordinate\r\nsystem, so the number of rows/columns with \"walkable\" cells (called ground cells) is\r\nactually half of the board's size (rounding up). Both dimensions of the board should\r\nbe odd, as they start and end with a row / column of walkable cells.\r\nThe first coordinate is the row (y-axis / height).\r\nThe second coordinate is the column (x-axis / width).\r\n\r\nIn the \"classic\" coordinate system, rows/columns with walls and pillar do not count.\r\nThe \"classic\" coordinate system is only ever used in the UI to interact with humans.\r\n*/\r\n\r\nexport const cellEnum = {\r\n  ground: 0,\r\n  wall: 1,\r\n  pillar: 2,\r\n};\r\n\r\n//maps 1->1, 3->2, 5->3, ...\r\nexport const internalToClassicBoardSize = (internalDim) => {\r\n  return (internalDim + 1) / 2;\r\n};\r\nexport const classicToInternalBoardSize = (classicDim) => {\r\n  return 2 * classicDim - 1;\r\n};\r\n\r\n//maps 0->1, 2->2, 4->3, ...\r\nexport const internalToClassicCoord = (internalCoord) => {\r\n  return internalCoord / 2 + 1;\r\n};\r\nexport const classicToInternalCoord = (classicCoord) => {\r\n  return 2 * (classicCoord - 1);\r\n};\r\n\r\nconst boardPixelHeight = (dims, groundSize, wallWidth) =>\r\n  (wallWidth * (dims[0] - 1)) / 2 + (groundSize * (dims[0] + 1)) / 2;\r\nconst boardPixelWidth = (dims, groundSize, wallWidth) =>\r\n  (wallWidth * (dims[1] - 1)) / 2 + (groundSize * (dims[1] + 1)) / 2;\r\nexport const boardPixelDims = (dims, groundSize, wallWidth) => [\r\n  boardPixelHeight(dims, groundSize, wallWidth),\r\n  boardPixelWidth(dims, groundSize, wallWidth),\r\n];\r\n\r\nconst emptyBoardDistance = (start, goal) => {\r\n  const [rowDiff, colDiff] = [\r\n    Math.abs(start[0] - goal[0]),\r\n    Math.abs(start[1] - goal[1]),\r\n  ];\r\n  return (rowDiff + colDiff) / 2;\r\n};\r\nexport const emptyBoardDistances = (boardSettings) => {\r\n  return [\r\n    emptyBoardDistance(boardSettings.startPos[0], boardSettings.goalPos[0]),\r\n    emptyBoardDistance(boardSettings.startPos[1], boardSettings.goalPos[1]),\r\n  ];\r\n};\r\nexport const timeControlToString = (timeControl) => {\r\n  return roundNum(timeControl.duration) + \"+\" + roundNum(timeControl.increment);\r\n};\r\nexport function cellTypeByPos(pos) {\r\n  if (pos[0] % 2 === 0 && pos[1] % 2 === 0) return cellEnum.ground;\r\n  if (pos[0] % 2 !== pos[1] % 2) return cellEnum.wall;\r\n  return cellEnum.pillar; //case i%2 === 1 && j%2 === 1\r\n}\r\n\r\nexport function posEq(pos1, pos2) {\r\n  return pos1[0] === pos2[0] && pos1[1] === pos2[1];\r\n}\r\n\r\nfunction dimensions(grid) {\r\n  return [grid.length, grid[0].length];\r\n}\r\n\r\nexport function emptyGrid(dims) {\r\n  let grid = [];\r\n  for (let r = 0; r < dims[0]; r++) {\r\n    grid[r] = [];\r\n    for (let c = 0; c < dims[1]; c++) grid[r][c] = 0;\r\n  }\r\n  return grid;\r\n}\r\n\r\nfunction inBounds(pos, dims) {\r\n  return pos[0] >= 0 && pos[0] < dims[0] && pos[1] >= 0 && pos[1] < dims[1];\r\n}\r\n\r\nfunction isWallBuilt(grid, pos) {\r\n  const cellType = cellTypeByPos(pos);\r\n  if (cellType !== cellEnum.wall) return false; //cannot check for wall here\r\n  return grid[pos[0]][pos[1]] !== 0;\r\n}\r\n\r\nfunction accessibleNeighbors(grid, pos) {\r\n  const dims = dimensions(grid);\r\n  if (cellTypeByPos(pos) !== cellEnum.ground) {\r\n    return []; //only ground coords can access neighbors\r\n  }\r\n  const dirs = [\r\n    [0, 1],\r\n    [0, -1],\r\n    [1, 0],\r\n    [-1, 0],\r\n  ];\r\n  const res = [];\r\n  const [pr, pc] = [pos[0], pos[1]];\r\n  for (let k = 0; k < dirs.length; k++) {\r\n    const [dr, dc] = [dirs[k][0], dirs[k][1]];\r\n    const adjWall = [pr + dr, pc + dc];\r\n    const adjGround = [pr + 2 * dr, pc + 2 * dc];\r\n    if (inBounds(adjGround, dims) && !isWallBuilt(grid, adjWall)) {\r\n      res.push(adjGround);\r\n    }\r\n  }\r\n  return res;\r\n}\r\n\r\nexport function distance(grid, start, target) {\r\n  //implements bfs algorithm\r\n  if (posEq(start, target)) return 0;\r\n  const C = grid[0].length;\r\n  const posToKey = (pos) => pos[0] * C + pos[1];\r\n\r\n  const queue = [];\r\n  let i = 0;\r\n  queue.push(start);\r\n  const dist = new Map();\r\n  dist.set(posToKey(start), 0);\r\n  while (i < queue.length) {\r\n    const pos = queue[i];\r\n    i += 1;\r\n    const nbrs = accessibleNeighbors(grid, pos);\r\n    for (let k = 0; k < nbrs.length; k++) {\r\n      let nbr = nbrs[k];\r\n      if (!dist.has(posToKey(nbr))) {\r\n        dist.set(posToKey(nbr), dist.get(posToKey(pos)) + 1);\r\n        if (posEq(nbr, target)) return dist.get(posToKey(nbr));\r\n        queue.push(nbr);\r\n      }\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\n//same as distance, but with early termination\r\nexport function isDistanceAtMost(grid, start, target, maxDistance) {\r\n  //implements bfs algorithm\r\n  if (posEq(start, target)) return 0;\r\n  const C = grid[0].length;\r\n  const posToKey = (pos) => pos[0] * C + pos[1];\r\n\r\n  const queue = [];\r\n  let i = 0;\r\n  queue.push(start);\r\n  const dist = new Map();\r\n  dist.set(posToKey(start), 0);\r\n  while (i < queue.length) {\r\n    const pos = queue[i];\r\n    i += 1;\r\n    const dis = dist.get(posToKey(pos));\r\n    if (dis > maxDistance) return false;\r\n    const nbrs = accessibleNeighbors(grid, pos);\r\n    for (let k = 0; k < nbrs.length; k++) {\r\n      let nbr = nbrs[k];\r\n      if (!dist.has(posToKey(nbr))) {\r\n        if (posEq(nbr, target)) return dis + 1 <= maxDistance;\r\n        dist.set(posToKey(nbr), dis + 1);\r\n        queue.push(nbr);\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction canReach(grid, start, target) {\r\n  return distance(grid, start, target) !== -1;\r\n}\r\n\r\n//can handle more than 2 players, which is not used for now\r\nfunction isValidBoard(grid, playerPos, goals) {\r\n  for (let k = 0; k < playerPos.length; k++) {\r\n    if (!canReach(grid, playerPos[k], goals[k])) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function canBuildWall(grid, playerPos, goals, pos) {\r\n  if (isWallBuilt(grid, pos)) return false;\r\n  grid[pos[0]][pos[1]] = 1; //grid parameter is only modified in this scope\r\n  var res = isValidBoard(grid, playerPos, goals);\r\n  grid[pos[0]][pos[1]] = 0;\r\n  return res;\r\n}\r\n\r\nexport function rowNotation(pos) {\r\n  if (pos[0] === 18) return \"X\";\r\n  return \"\" + (2 + pos[0]) / 2;\r\n}\r\n\r\nexport function columnNotation(pos) {\r\n  return String.fromCharCode(97 + pos[1] / 2);\r\n}\r\n\r\nexport function actionNotation(pos) {\r\n  if (cellTypeByPos(pos) === cellEnum.ground)\r\n    return columnNotation(pos) + rowNotation(pos);\r\n  else {\r\n    const isVWall = pos[1] % 2 === 1;\r\n    if (isVWall)\r\n      return (\r\n        columnNotation([pos[0], pos[1] - 1]) +\r\n        columnNotation([pos[0], pos[1] + 1]) +\r\n        rowNotation(pos)\r\n      );\r\n    else\r\n      return (\r\n        columnNotation(pos) +\r\n        rowNotation([pos[0] + 1, pos[1]]) +\r\n        rowNotation([pos[0] - 1, pos[1]])\r\n      );\r\n  }\r\n}\r\n\r\nexport function moveNotation(actions) {\r\n  if (actions.length === 1) return actionNotation(actions[0]);\r\n  const [a1, a2] = actions;\r\n  //canonical order: ground moves first, then sorted by increasing columns,\r\n  //then sorted by decreasing rows\r\n  const a1First =\r\n    cellTypeByPos(a1) === cellEnum.ground ||\r\n    cellTypeByPos(a1) !== cellEnum.ground ||\r\n    a1[1] < a2[1] ||\r\n    (a1[1] === a2[1] && a1[0] > a2[0]);\r\n  return a1First\r\n    ? actionNotation(a1) + \" \" + actionNotation(a2)\r\n    : actionNotation(a2) + \" \" + actionNotation(a1);\r\n}\r\n","import React from \"react\";\r\nimport FormSlider from \"../shared/FormSlider\";\r\nimport {\r\n  internalToClassicCoord,\r\n  classicToInternalCoord,\r\n} from \"../shared/gameLogicUtils\";\r\n\r\nconst CoordinateSlider = ({\r\n  label,\r\n  min,\r\n  max,\r\n  value,\r\n  onChange,\r\n  menuTheme,\r\n  isDarkModeOn,\r\n}) => {\r\n  return (\r\n    <FormSlider\r\n      label={label}\r\n      min={min}\r\n      max={max}\r\n      value={value}\r\n      onChange={onChange}\r\n      internalToDisplay={internalToClassicCoord}\r\n      displayToInternal={classicToInternalCoord}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CoordinateSlider;\r\n","import React from \"react\";\r\nimport FormSlider from \"../shared/FormSlider\";\r\nimport {\r\n  internalToClassicBoardSize,\r\n  classicToInternalBoardSize,\r\n} from \"../shared/gameLogicUtils\";\r\n\r\nconst BoardSizeSlider = ({\r\n  label,\r\n  min,\r\n  max,\r\n  value,\r\n  onChange,\r\n  menuTheme,\r\n  isDarkModeOn,\r\n}) => {\r\n  return (\r\n    <FormSlider\r\n      label={label}\r\n      min={min}\r\n      max={max}\r\n      value={value}\r\n      onChange={onChange}\r\n      internalToDisplay={internalToClassicBoardSize}\r\n      displayToInternal={classicToInternalBoardSize}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BoardSizeSlider;\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  TextInput,\r\n  Button,\r\n  Icon,\r\n  Dropdown,\r\n  Checkbox,\r\n  Switch,\r\n} from \"react-materialize\";\r\nimport { getColor } from \"../shared/colorThemes\";\r\nimport showToastNotification from \"../shared/showToastNotification\";\r\nimport TextButton from \"../shared/TextButton\";\r\nimport { maxBoardDims } from \"../shared/globalSettings\";\r\nimport CoordinateSlider from \"../shared/CoordinateSlider\";\r\nimport BoardSizeSlider from \"../shared/BoardSizeSlider\";\r\n\r\n//random icons until I find a nicer set to use\r\nconst tokens = [\r\n  \"school\",\r\n  \"default\",\r\n  \"face\",\r\n  \"outlet\",\r\n  \"mood\",\r\n  \"mood_bad\",\r\n  \"child_care\",\r\n  \"pets\",\r\n  \"whatshot\",\r\n  \"toys\",\r\n  \"spa\",\r\n  \"stop\",\r\n  \"star\",\r\n  \"lens\",\r\n  \"favorite\",\r\n  \"visibility\",\r\n  \"group_work\",\r\n  \"flare\",\r\n  \"ac_unit\",\r\n  \"camera\",\r\n  \"casino\",\r\n  \"directions_boat\",\r\n  \"directions_bus\",\r\n  \"directions_car\",\r\n  \"event_seat\",\r\n  \"adb\",\r\n  \"bug_report\",\r\n];\r\n\r\nconst LobbyForm = ({\r\n  clientParams,\r\n  isLargeScreen,\r\n  handlePlayerName,\r\n  handleDuration,\r\n  handleIncrement,\r\n  handleIsPublic,\r\n  handleNumRows,\r\n  handleNumCols,\r\n  handleShowMoreOptions,\r\n  handleStartPos,\r\n  handleGoalPos,\r\n  handleJoinCode,\r\n  handleCreateGame,\r\n  handleJoinGame,\r\n  handleRefreshName,\r\n  handleToken,\r\n}) => {\r\n  const menuTheme = clientParams.menuTheme;\r\n  const isDarkModeOn = clientParams.isDarkModeOn;\r\n  const showMoreOptions = clientParams.showMoreOptions;\r\n  const BS = clientParams.boardSettings;\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", downHandler);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", downHandler);\r\n    };\r\n  });\r\n  const downHandler = ({ key }) => {\r\n    if (key !== \"Enter\") return;\r\n    if (clientParams.joinCode.length > 0) handleJoinGame();\r\n    else {\r\n      showToastNotification(\"Created new game\", 5000);\r\n      handleCreateGame();\r\n    }\r\n  };\r\n\r\n  const defaultToken = (\r\n    <div style={{ fontSize: \"30px\" }}>\r\n      <i className={`material-icons white-text`} style={{ height: `100%` }}>\r\n        face\r\n      </i>\r\n      {isLargeScreen ? \" / \" : \"/\"}\r\n      <i className={`material-icons white-text`} style={{ height: `100%` }}>\r\n        outlet\r\n      </i>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className=\"container\"\r\n      style={{\r\n        marginTop: \"2rem\",\r\n        backgroundColor: getColor(menuTheme, \"container\", isDarkModeOn),\r\n      }}\r\n    >\r\n      <Row className=\"valign-wrapper\">\r\n        <Col className=\"center\" s={4} m={4}>\r\n          <span style={{ fontSize: \"23px\" }}>\r\n            {isLargeScreen ? \"Your name:\" : \"Name:\"}\r\n          </span>\r\n        </Col>\r\n        <Col s={6} m={3}>\r\n          <TextInput\r\n            id=\"nameInput\"\r\n            value={clientParams.playerName}\r\n            onChange={(props) => {\r\n              handlePlayerName(props.target.value);\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col s={1} m={1}>\r\n          <Button\r\n            node=\"button\"\r\n            waves=\"light\"\r\n            small\r\n            floating\r\n            style={{\r\n              color: \"white\",\r\n              backgroundColor: getColor(menuTheme, \"button\", isDarkModeOn),\r\n            }}\r\n            icon={<Icon>refresh</Icon>}\r\n            onClick={handleRefreshName}\r\n            tooltip={\"Get a new name\"}\r\n          />\r\n        </Col>\r\n        <Col s={1} m={4}></Col>\r\n      </Row>\r\n      <Row className=\"valign-wrapper\">\r\n        <Col className=\"center\" s={4} m={4}>\r\n          <span style={{ fontSize: \"23px\" }}>\r\n            {isLargeScreen ? \"Your token:\" : \"Token:\"}\r\n          </span>\r\n        </Col>\r\n        <Col s={3} m={2} className=\"center\">\r\n          {clientParams.token === \"default\" ? (\r\n            defaultToken\r\n          ) : (\r\n            <div className={\"white-text\"} style={{ fontSize: \"30px\" }}>\r\n              <i\r\n                className={`material-icons white-text`}\r\n                style={{ height: `100%` }}\r\n              >\r\n                {clientParams.token}\r\n              </i>\r\n            </div>\r\n          )}\r\n        </Col>\r\n        <Col s={4} m={4}>\r\n          <div>\r\n            <Dropdown\r\n              id=\"Dropdown_6\"\r\n              options={{\r\n                alignment: \"left\",\r\n                autoTrigger: true,\r\n                closeOnClick: true,\r\n                constrainWidth: true,\r\n                container: null,\r\n                coverTrigger: true,\r\n                hover: false,\r\n                inDuration: 150,\r\n                onCloseEnd: null,\r\n                onCloseStart: null,\r\n                onOpenEnd: null,\r\n                onOpenStart: null,\r\n                outDuration: 250,\r\n              }}\r\n              trigger={\r\n                <Button\r\n                  node=\"button\"\r\n                  style={{\r\n                    backgroundColor: getColor(\r\n                      menuTheme,\r\n                      \"button\",\r\n                      isDarkModeOn\r\n                    ),\r\n                  }}\r\n                >\r\n                  Change\r\n                </Button>\r\n              }\r\n            >\r\n              {tokens.map((token) => {\r\n                return (\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      color: \"white\",\r\n                      backgroundColor: getColor(\r\n                        menuTheme,\r\n                        \"button\",\r\n                        isDarkModeOn\r\n                      ),\r\n                    }}\r\n                    key={token}\r\n                    node=\"button\"\r\n                    onClick={() => handleToken(token)}\r\n                  >\r\n                    <div\r\n                      className=\"center\"\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"center\",\r\n                        padding: \"4px 0\",\r\n                      }}\r\n                    >\r\n                      {token === \"default\" ? (\r\n                        defaultToken\r\n                      ) : (\r\n                        <i\r\n                          className={`material-icons white-text`}\r\n                          style={{ height: `100%` }}\r\n                        >\r\n                          {token}\r\n                        </i>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </Dropdown>\r\n          </div>\r\n        </Col>\r\n        <Col s={1} m={2}></Col>\r\n      </Row>\r\n      <Row className=\"valign-wrapper\">\r\n        <Col className=\"center\" s={5} m={4}>\r\n          <TextButton\r\n            text=\"Create Game\"\r\n            onClick={handleCreateGame}\r\n            menuTheme={menuTheme}\r\n            isDarkModeOn={isDarkModeOn}\r\n          />\r\n        </Col>\r\n        <Col s={2} m={2} style={{ paddingRight: \"0\" }}>\r\n          <TextInput\r\n            id=\"durationInput\"\r\n            label=\"Duration\"\r\n            value={`${clientParams.timeControl.duration}`}\r\n            onChange={(props) => {\r\n              handleDuration(props.target.value);\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col s={1} m={1} style={{ paddingLeft: \"0\" }}>\r\n          m\r\n        </Col>\r\n        <Col s={2} m={2} style={{ paddingRight: \"0\" }}>\r\n          <TextInput\r\n            id=\"incrementInput\"\r\n            label=\"Increment\"\r\n            value={`${clientParams.timeControl.increment}`}\r\n            onChange={(props) => {\r\n              handleIncrement(props.target.value);\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col s={1} m={1} style={{ paddingLeft: \"0\" }}>\r\n          s\r\n        </Col>\r\n        <Col s={1} m={2}></Col>\r\n      </Row>\r\n      <Row className=\"valign-wrapper\">\r\n        <Col className=\"center\" s={5} m={4}>\r\n          {\" \"}\r\n          <Checkbox\r\n            id=\"isPublicCheckbox\"\r\n            filledIn\r\n            label=\"PUBLIC\"\r\n            value=\"PUBLIC\"\r\n            checked={clientParams.isPublic}\r\n            onChange={() => {\r\n              handleIsPublic(!clientParams.isPublic);\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col s={2} m={2} style={{ paddingRight: \"0\" }}>\r\n          <BoardSizeSlider\r\n            label=\"Rows:\"\r\n            min={3}\r\n            max={maxBoardDims[0]}\r\n            value={BS.dims[0]}\r\n            onChange={handleNumRows}\r\n          />\r\n        </Col>\r\n        <Col s={1} m={1} style={{ paddingLeft: \"0\" }}></Col>\r\n        <Col s={2} m={2} style={{ paddingRight: \"0\" }}>\r\n          <BoardSizeSlider\r\n            label=\"Columns:\"\r\n            min={3}\r\n            max={maxBoardDims[1]}\r\n            value={BS.dims[1]}\r\n            onChange={handleNumCols}\r\n          />\r\n        </Col>\r\n        <Col s={1} m={1} style={{ paddingLeft: \"0\" }}></Col>\r\n        <Col s={1} m={2}></Col>\r\n      </Row>\r\n      <Row className=\"valign-wrapper\">\r\n        <Col className=\"center\" s={5} m={4}>\r\n          <span style={{ fontSize: \"15px\" }}>{\"More options:\"}</span>\r\n          <Switch\r\n            id=\"MoreSwitch\"\r\n            offLabel=\"Off\"\r\n            onChange={handleShowMoreOptions}\r\n            onLabel=\"On\"\r\n          />\r\n        </Col>\r\n        <Col\r\n          s={2}\r\n          m={2}\r\n          style={{ paddingRight: \"0\" }}\r\n          title=\"The row where Player 1 starts\"\r\n        >\r\n          {showMoreOptions && (\r\n            <CoordinateSlider\r\n              label=\"P1 row:\"\r\n              min={0}\r\n              max={BS.dims[0] - 1}\r\n              value={BS.startPos[0][0]}\r\n              onChange={(val) => {\r\n                handleStartPos(0, 0, val);\r\n              }}\r\n            />\r\n          )}\r\n        </Col>\r\n        <Col s={1} m={1} style={{ paddingLeft: \"0\" }}></Col>\r\n        <Col\r\n          s={2}\r\n          m={2}\r\n          style={{ paddingRight: \"0\" }}\r\n          title=\"The column where Player 1 starts\"\r\n        >\r\n          {showMoreOptions && (\r\n            <CoordinateSlider\r\n              label=\"P1 col:\"\r\n              min={0}\r\n              max={BS.dims[1] - 1}\r\n              value={BS.startPos[0][1]}\r\n              onChange={(val) => {\r\n                handleStartPos(0, 1, val);\r\n              }}\r\n            />\r\n          )}\r\n        </Col>\r\n        <Col s={1} m={1} style={{ paddingLeft: \"0\" }}></Col>\r\n        <Col s={1} m={2}></Col>\r\n      </Row>\r\n      {showMoreOptions && (\r\n        <Row className=\"valign-wrapper\">\r\n          <Col className=\"center\" s={5} m={4}></Col>\r\n          <Col\r\n            s={2}\r\n            m={2}\r\n            style={{ paddingRight: \"0\" }}\r\n            title=\"The row where Player 2 starts\"\r\n          >\r\n            <CoordinateSlider\r\n              label=\"P2 row:\"\r\n              min={0}\r\n              max={BS.dims[0] - 1}\r\n              value={BS.startPos[1][0]}\r\n              onChange={(val) => {\r\n                handleStartPos(1, 0, val);\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col s={1} m={1} style={{ paddingLeft: \"0\" }}></Col>\r\n          <Col\r\n            s={2}\r\n            m={2}\r\n            style={{ paddingRight: \"0\" }}\r\n            title=\"The column where Player 2 starts\"\r\n          >\r\n            <CoordinateSlider\r\n              label=\"P2 col:\"\r\n              min={0}\r\n              max={BS.dims[1] - 1}\r\n              value={BS.startPos[1][1]}\r\n              onChange={(val) => {\r\n                handleStartPos(1, 1, val);\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col s={1} m={1} style={{ paddingLeft: \"0\" }}></Col>\r\n          <Col s={1} m={2}></Col>\r\n        </Row>\r\n      )}\r\n      {showMoreOptions && (\r\n        <Row className=\"valign-wrapper\">\r\n          <Col className=\"center\" s={5} m={4}></Col>\r\n          <Col\r\n            s={2}\r\n            m={2}\r\n            style={{ paddingRight: \"0\" }}\r\n            title=\"The row of the goal of Player 1\"\r\n          >\r\n            <CoordinateSlider\r\n              label=\"G1 row:\"\r\n              min={0}\r\n              max={BS.dims[0] - 1}\r\n              value={BS.goalPos[0][0]}\r\n              onChange={(val) => {\r\n                handleGoalPos(0, 0, val);\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col s={1} m={1} style={{ paddingLeft: \"0\" }}></Col>\r\n          <Col\r\n            s={2}\r\n            m={2}\r\n            style={{ paddingRight: \"0\" }}\r\n            title=\"The column of the goal of Player 1\"\r\n          >\r\n            <CoordinateSlider\r\n              label=\"G1 col:\"\r\n              min={0}\r\n              max={BS.dims[1] - 1}\r\n              value={BS.goalPos[0][1]}\r\n              onChange={(val) => {\r\n                handleGoalPos(0, 1, val);\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col s={1} m={1} style={{ paddingLeft: \"0\" }}></Col>\r\n          <Col s={1} m={2}></Col>\r\n        </Row>\r\n      )}\r\n      {showMoreOptions && (\r\n        <Row className=\"valign-wrapper\">\r\n          <Col className=\"center\" s={5} m={4}></Col>\r\n          <Col\r\n            s={2}\r\n            m={2}\r\n            style={{ paddingRight: \"0\" }}\r\n            title=\"The row of the goal of Player 2\"\r\n          >\r\n            <CoordinateSlider\r\n              label=\"G2 row:\"\r\n              min={0}\r\n              max={BS.dims[0] - 1}\r\n              value={BS.goalPos[1][0]}\r\n              onChange={(val) => {\r\n                handleGoalPos(1, 0, val);\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col s={1} m={1} style={{ paddingLeft: \"0\" }}></Col>\r\n          <Col\r\n            s={2}\r\n            m={2}\r\n            style={{ paddingRight: \"0\" }}\r\n            title=\"The column of the goal of Player 2\"\r\n          >\r\n            <CoordinateSlider\r\n              label=\"G2 Col:\"\r\n              min={0}\r\n              max={BS.dims[1] - 1}\r\n              value={BS.goalPos[1][1]}\r\n              onChange={(val) => {\r\n                handleGoalPos(1, 1, val);\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col s={1} m={1} style={{ paddingLeft: \"0\" }}></Col>\r\n          <Col s={1} m={2}></Col>\r\n        </Row>\r\n      )}\r\n      <Row className=\"valign-wrapper\">\r\n        <Col className=\"center\" s={5} m={4}>\r\n          <TextButton\r\n            text=\"Join Game\"\r\n            onClick={handleJoinGame}\r\n            menuTheme={menuTheme}\r\n            isDarkModeOn={isDarkModeOn}\r\n          />\r\n        </Col>\r\n        <Col s={6} m={5}>\r\n          <TextInput\r\n            id=\"joinInput\"\r\n            placeholder=\"Write game code here...\"\r\n            value={`${clientParams.joinCode}`}\r\n            onChange={(props) => {\r\n              console.log(props);\r\n              handleJoinCode(props.target.value);\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col s={1} m={3}></Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LobbyForm;\r\n","import React from \"react\";\r\nimport { Table } from \"react-materialize\";\r\n\r\nimport { prettyDate } from \"../shared/utils\";\r\nimport {\r\n  timeControlToString,\r\n  internalToClassicBoardSize,\r\n  emptyBoardDistances,\r\n} from \"../shared/gameLogicUtils\";\r\nimport { getColor } from \"../shared/colorThemes\";\r\nimport hoverHighlight from \"../shared/hoverHighlight.module.css\";\r\n\r\nconst boardDimsToString = (dims) => {\r\n  return (\r\n    internalToClassicBoardSize(dims[0]) +\r\n    \":\" +\r\n    internalToClassicBoardSize(dims[1])\r\n  );\r\n};\r\nconst boardDistsToString = (dists) => {\r\n  return dists[0] + \" - \" + dists[1];\r\n};\r\n\r\nconst ChallengeList = ({\r\n  challenges,\r\n  isLargeScreen,\r\n  menuTheme,\r\n  isDarkModeOn,\r\n  handleAcceptChallenge,\r\n}) => {\r\n  const [col1, col2, colBg] = [\r\n    getColor(menuTheme, \"recentGamesBackground\", isDarkModeOn),\r\n    getColor(menuTheme, \"recentGamesAlternate\", isDarkModeOn),\r\n    getColor(menuTheme, \"container\", isDarkModeOn),\r\n  ];\r\n  const headEntryStyle = {\r\n    position: \"sticky\",\r\n    top: \"0px\",\r\n    paddingTop: \"0.15rem\",\r\n    paddingBottom: \"0.15rem\",\r\n    borderRadius: \"0\",\r\n    backgroundColor: colBg,\r\n  };\r\n  const entryStyle = {\r\n    paddingTop: \"0.15rem\",\r\n    paddingBottom: \"0.15rem\",\r\n    borderRadius: \"0\",\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\"center\"}\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        display: \"block\",\r\n        height: \"100%\",\r\n        backgroundColor: col1,\r\n      }}\r\n    >\r\n      <Table centered style={{ width: \"100%\" }}>\r\n        <thead>\r\n          <tr>\r\n            <th style={headEntryStyle}>Time</th>\r\n            <th style={headEntryStyle}>Player</th>\r\n            <th style={headEntryStyle}>Board</th>\r\n            {isLargeScreen && <th style={headEntryStyle}>Distance</th>}\r\n            <th style={headEntryStyle}>Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {challenges.map((game, i) => {\r\n            return (\r\n              <tr\r\n                onClick={() => handleAcceptChallenge(game.joinCode)}\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  backgroundColor: i % 2 ? col1 : col2,\r\n                }}\r\n                className={hoverHighlight.hoveredGame}\r\n                key={i}\r\n              >\r\n                <td style={entryStyle}>\r\n                  {timeControlToString(game.timeControl)}\r\n                </td>\r\n                <td style={entryStyle}>{game.playerNames[0]}</td>\r\n                <td style={entryStyle}>\r\n                  {boardDimsToString(game.boardSettings.dims)}\r\n                </td>\r\n                {isLargeScreen && (\r\n                  <td style={entryStyle}>\r\n                    {boardDistsToString(\r\n                      emptyBoardDistances(game.boardSettings)\r\n                    )}\r\n                  </td>\r\n                )}\r\n                <td style={entryStyle}>\r\n                  {prettyDate(game.creationDate, isLargeScreen)}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChallengeList;\r\n","import React from \"react\";\r\nimport { Table } from \"react-materialize\";\r\nimport cloneDeep from \"lodash.clonedeep\";\r\n\r\nimport {\r\n  cellTypeByPos,\r\n  emptyGrid,\r\n  distance,\r\n  timeControlToString,\r\n  cellEnum,\r\n} from \"../shared/gameLogicUtils\";\r\nimport { prettyDate } from \"../shared/utils\";\r\nimport { getColor } from \"../shared/colorThemes\";\r\nimport hoverHighlight from \"../shared/hoverHighlight.module.css\";\r\n\r\nconst winnerToString = (serverGame) => {\r\n  if (serverGame.winner === \"creator\") return \"<\";\r\n  else if (serverGame.winner === \"draw\") return \"=\";\r\n  else return \">\";\r\n};\r\n\r\nconst cachedFinalDists = new Map();\r\nconst finalDists = (serverGame) => {\r\n  //limit the size so old games don't accrue indefinitely\r\n  if (cachedFinalDists.size > 1000) cachedFinalDists.clear();\r\n  if (cachedFinalDists.has(serverGame._id))\r\n    return cachedFinalDists.get(serverGame._id);\r\n\r\n  const grid = emptyGrid(serverGame.boardSettings.dims);\r\n  const playerPos = cloneDeep(serverGame.boardSettings.startPos);\r\n  let idxToMove = serverGame.creatorStarts ? 0 : 1;\r\n  for (let k = 0; k < serverGame.moveHistory.length; k++) {\r\n    const actions = serverGame.moveHistory[k].actions;\r\n    for (let k2 = 0; k2 < actions.length; k2++) {\r\n      const pos = actions[k2];\r\n      if (cellTypeByPos(pos) === cellEnum.ground) {\r\n        playerPos[idxToMove] = pos;\r\n      } else {\r\n        grid[pos[0]][pos[1]] = idxToMove + 1;\r\n      }\r\n    }\r\n    idxToMove = (idxToMove + 1) % 2;\r\n  }\r\n  const [g1, g2] = serverGame.boardSettings.goalPos;\r\n  const [d1, d2] = [\r\n    distance(grid, playerPos[0], g1),\r\n    distance(grid, playerPos[1], g2),\r\n  ];\r\n  cachedFinalDists.set(serverGame._id, [d1, d2]);\r\n  return [d1, d2];\r\n};\r\n\r\nconst RecentGameList = ({\r\n  recentGames,\r\n  isLargeScreen,\r\n  menuTheme,\r\n  isDarkModeOn,\r\n  handleViewGame,\r\n}) => {\r\n  const [col1, col2, colBg] = [\r\n    getColor(menuTheme, \"recentGamesBackground\", isDarkModeOn),\r\n    getColor(menuTheme, \"recentGamesAlternate\", isDarkModeOn),\r\n    getColor(menuTheme, \"container\", isDarkModeOn),\r\n  ];\r\n  const headEntryStyle = {\r\n    position: \"sticky\",\r\n    top: \"0px\",\r\n    paddingTop: \"0.15rem\",\r\n    paddingBottom: \"0.15rem\",\r\n    borderRadius: \"0\",\r\n    backgroundColor: colBg,\r\n  };\r\n  const entryStyle = {\r\n    paddingTop: \"0.15rem\",\r\n    paddingBottom: \"0.15rem\",\r\n    borderRadius: \"0\",\r\n  };\r\n  if (isLargeScreen) {\r\n    return (\r\n      <div\r\n        className={\"center\"}\r\n        style={{\r\n          overflowY: \"scroll\",\r\n          display: \"block\",\r\n          height: \"100%\",\r\n          backgroundColor: getColor(\r\n            menuTheme,\r\n            \"recentGamesBackground\",\r\n            isDarkModeOn\r\n          ),\r\n        }}\r\n      >\r\n        <Table centered style={{ width: \"100%\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th style={headEntryStyle}>Time</th>\r\n              <th style={headEntryStyle}>Player 1</th>\r\n              <th style={headEntryStyle}></th>\r\n              <th style={headEntryStyle}>Player 2</th>\r\n              <th style={headEntryStyle}>Distance</th>\r\n              <th style={headEntryStyle}>Turns</th>\r\n              <th style={headEntryStyle}>Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {recentGames &&\r\n              recentGames.map((game, i) => {\r\n                const [d1, d2] = finalDists(game);\r\n                return (\r\n                  <tr\r\n                    onClick={() => handleViewGame(game._id)}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      backgroundColor: i % 2 ? col1 : col2,\r\n                    }}\r\n                    className={hoverHighlight.hoveredGame}\r\n                    key={i}\r\n                  >\r\n                    <td style={entryStyle}>\r\n                      {timeControlToString(game.timeControl)}\r\n                    </td>\r\n                    <td style={entryStyle}>{game.playerNames[0]}</td>\r\n                    <td style={entryStyle}>{winnerToString(game)}</td>\r\n                    <td style={entryStyle}>{game.playerNames[1]}</td>\r\n                    <td style={entryStyle}>{d1 + \" - \" + d2}</td>\r\n                    <td style={entryStyle}>{game.moveHistory.length}</td>\r\n                    <td style={entryStyle}>\r\n                      {prettyDate(game.startDate, true)}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div\r\n        className={\"center\"}\r\n        style={{\r\n          overflowY: \"scroll\",\r\n          display: \"block\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        <Table centered style={{ width: \"100%\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th style={headEntryStyle}>Time</th>\r\n              <th style={headEntryStyle}>Player 1</th>\r\n              <th style={headEntryStyle}>Win</th>\r\n              <th style={headEntryStyle}>Player 2</th>\r\n              <th style={headEntryStyle}>Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {recentGames &&\r\n              recentGames.map((game, i) => {\r\n                return (\r\n                  <tr\r\n                    onClick={() => handleViewGame(game._id)}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      backgroundColor: i % 2 ? col1 : col2,\r\n                    }}\r\n                    className={hoverHighlight.hoveredGame}\r\n                    key={i}\r\n                  >\r\n                    <td style={entryStyle}>\r\n                      {timeControlToString(game.timeControl)}\r\n                    </td>\r\n                    <td style={entryStyle}>{game.playerNames[0]}</td>\r\n                    <td style={entryStyle}>{winnerToString(game)}</td>\r\n                    <td style={entryStyle}>{game.playerNames[1]}</td>\r\n                    <td style={entryStyle}>\r\n                      {prettyDate(game.startDate, false)}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default RecentGameList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useImmer } from \"use-immer\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport cloneDeep from \"lodash.clonedeep\";\r\n\r\nimport ChallengeList from \"./ChallengeList\";\r\nimport RecentGameList from \"./RecentGameList\";\r\nimport { getColor } from \"../shared/colorThemes\";\r\n\r\nconst LobbyTabs = ({\r\n  socket,\r\n  isLargeScreen,\r\n  menuTheme,\r\n  isDarkModeOn,\r\n  recentGames,\r\n  handleViewGame,\r\n  handleAcceptChallenge,\r\n}) => {\r\n  //logic for getting challenges. It needs to be here as opposed to in ChallengeList itself\r\n  //because we switch to the challenges tab automatically when there is a new challenge\r\n  const [state, updateState] = useImmer({\r\n    needToRequestChallenges: true,\r\n    challenges: [],\r\n    showChallenges: false,\r\n  });\r\n  useEffect(() => {\r\n    if (state.needToRequestChallenges) {\r\n      updateState((draftState) => {\r\n        draftState.needToRequestChallenges = false;\r\n      });\r\n      socket.emit(\"requestCurrentChallenges\");\r\n    }\r\n  }, [socket, updateState, state.needToRequestChallenges]);\r\n  useEffect(() => {\r\n    socket.once(\"requestedCurrentChallenges\", ({ challenges }) => {\r\n      updateState((draftState) => {\r\n        draftState.challenges = challenges;\r\n        if (draftState.challenges.length > 0) {\r\n          draftState.showChallenges = true;\r\n        }\r\n      });\r\n    });\r\n    socket.on(\"newChallenge\", ({ challenge }) => {\r\n      updateState((draftState) => {\r\n        draftState.challenges.push(challenge);\r\n        if (draftState.challenges.length === 1) {\r\n          draftState.showChallenges = true;\r\n        }\r\n      });\r\n    });\r\n    socket.on(\"deadChallenge\", ({ joinCode }) => {\r\n      updateState((draftState) => {\r\n        for (let i = 0; i < draftState.challenges.length; i += 1) {\r\n          const game = draftState.challenges[i];\r\n          if (game.joinCode === joinCode) {\r\n            draftState.challenges.splice(i, 1);\r\n            return;\r\n          }\r\n        }\r\n      });\r\n    });\r\n    return () => {\r\n      socket.off(\"newChallenge\");\r\n      socket.off(\"deadChallenge\");\r\n    };\r\n  }, [socket, updateState]);\r\n\r\n  const canHover = !useMediaQuery({ query: \"(hover: none)\" });\r\n  const [hoveredTab, setHoveredTab] = useState(null);\r\n  const handleMouseEnter = (tab) => {\r\n    setHoveredTab(tab);\r\n  };\r\n  const handleMouseLeave = () => {\r\n    setHoveredTab(null);\r\n  };\r\n\r\n  const tabStyle = {\r\n    alignSelf: \"stretch\",\r\n    justifySelf: \"stretch\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    fontSize: isLargeScreen ? \"16px\" : \"12px\",\r\n    cursor: \"pointer\",\r\n    borderBottom: `2px solid ${getColor(\r\n      menuTheme,\r\n      \"selectedTab\",\r\n      isDarkModeOn\r\n    )}`,\r\n    backgroundColor: getColor(menuTheme, \"tab\", isDarkModeOn),\r\n    fontWeight: \"bold\",\r\n  };\r\n  let recentGamesStyle = cloneDeep(tabStyle);\r\n  let challengesStyle = cloneDeep(tabStyle);\r\n  let liveGamesStyle = cloneDeep(tabStyle);\r\n  const selectedTabColor = getColor(menuTheme, \"selectedTab\", isDarkModeOn);\r\n  if (!state.showChallenges || (canHover && hoveredTab === \"recent\")) {\r\n    recentGamesStyle.backgroundColor = selectedTabColor;\r\n  }\r\n  if (state.showChallenges || (canHover && hoveredTab === \"open\")) {\r\n    challengesStyle.backgroundColor = selectedTabColor;\r\n  }\r\n  liveGamesStyle.backgroundColor = getColor(\r\n    menuTheme,\r\n    \"disabledTab\",\r\n    isDarkModeOn\r\n  );\r\n  liveGamesStyle.color = getColor(menuTheme, \"disabledTabText\", isDarkModeOn);\r\n  liveGamesStyle.cursor = null;\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: \"0px\",\r\n        margin: \"0px\",\r\n        display: \"block\",\r\n        height: \"100%\",\r\n        overflowY: \"hidden\",\r\n        border: `1px solid ${getColor(menuTheme, \"container\", isDarkModeOn)}`,\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          height: \"50px\",\r\n          width: \"100%\",\r\n          display: \"grid\",\r\n          gridTemplateRows: \"1fr\",\r\n          gridTemplateColumns: \"1fr 1fr 1fr\",\r\n          justifyContent: \"center\",\r\n          alignContent: \"center\",\r\n        }}\r\n      >\r\n        <div\r\n          style={challengesStyle}\r\n          onClick={() => {\r\n            updateState((draftState) => {\r\n              draftState.showChallenges = true;\r\n            });\r\n          }}\r\n          onMouseEnter={() => handleMouseEnter(\"open\")}\r\n          onMouseLeave={handleMouseLeave}\r\n          title={\"Players looking for an opponent\"}\r\n        >\r\n          {`Challenges (${state.challenges.length})`}\r\n        </div>\r\n        <div\r\n          style={recentGamesStyle}\r\n          onClick={() => {\r\n            updateState((draftState) => {\r\n              draftState.showChallenges = false;\r\n            });\r\n          }}\r\n          onMouseEnter={() => handleMouseEnter(\"recent\")}\r\n          onMouseLeave={handleMouseLeave}\r\n          title={\"Games played recently\"}\r\n        >\r\n          Recent Games\r\n        </div>\r\n        <div\r\n          style={liveGamesStyle}\r\n          title={\"Games being played right now (coming soon)\"}\r\n        >\r\n          {\"Live Games\"}\r\n        </div>\r\n      </div>\r\n      {state.showChallenges && (\r\n        <ChallengeList\r\n          challenges={state.challenges}\r\n          isLargeScreen={isLargeScreen}\r\n          menuTheme={menuTheme}\r\n          isDarkModeOn={isDarkModeOn}\r\n          handleAcceptChallenge={handleAcceptChallenge}\r\n        />\r\n      )}\r\n      {!state.showChallenges && (\r\n        <RecentGameList\r\n          recentGames={recentGames}\r\n          isLargeScreen={isLargeScreen}\r\n          menuTheme={menuTheme}\r\n          isDarkModeOn={isDarkModeOn}\r\n          handleViewGame={handleViewGame}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LobbyTabs;\r\n","import cloneDeep from \"lodash.clonedeep\";\r\n\r\nimport {\r\n  cellTypeByPos,\r\n  posEq,\r\n  emptyGrid,\r\n  distance,\r\n  isDistanceAtMost,\r\n  canBuildWall,\r\n  emptyBoardDistances,\r\n  cellEnum,\r\n} from \"../shared/gameLogicUtils\";\r\nimport { defaultBoardSettings } from \"../shared/globalSettings\";\r\n\r\n/* this file contains functions that modify a copy of the state of GamePage\r\nthe state itself is immutable, as per the react philosophy, but we can\r\nmake changes to a copy of it (called 'draftState' below)\r\nthe 'Immer' state manager takes care of updating the actual state */\r\n\r\nexport const roleEnum = {\r\n  creator: \"creator\",\r\n  joiner: \"joiner\",\r\n  spectator: \"spectator\",\r\n  returner: \"returner\",\r\n};\r\n\r\n//pure utility functions\r\nexport const turnCount = (state) => state.moveHistory.length - 1;\r\n\r\nexport const creatorToMove = (state) =>\r\n  turnCount(state) % 2 === (state.creatorStarts ? 0 : 1);\r\n\r\nexport const creatorToMoveAtIndex = (state) =>\r\n  state.viewIndex % 2 === (state.creatorStarts ? 0 : 1);\r\n\r\nexport const indexToMove = (state) => (creatorToMove(state) ? 0 : 1);\r\n\r\n//one of 'None', 'Ground', 'Wall'\r\nexport const ghostType = (pos) => (pos === null ? \"None\" : cellTypeByPos(pos));\r\n\r\nexport const isOpponentPresent = (state) => {\r\n  return state.arePlayersPresent[state.clientRole === roleEnum.creator ? 1 : 0];\r\n};\r\n\r\n//the previous position of the player, if they moved in the last turn\r\n//(based on the current move index, not the last move played)\r\nexport const getTracePos = (state) => {\r\n  if (state.viewIndex === 0) return null;\r\n  const playerIndex = creatorToMoveAtIndex(state) ? 1 : 0;\r\n  const curPos = state.moveHistory[state.viewIndex].playerPos[playerIndex];\r\n  let prevPos;\r\n  if (state.viewIndex <= 2) {\r\n    prevPos = state.boardSettings.startPos[playerIndex];\r\n  } else {\r\n    prevPos = state.moveHistory[state.viewIndex - 2].playerPos[playerIndex];\r\n  }\r\n  return posEq(prevPos, curPos) ? null : prevPos;\r\n};\r\n\r\n//when the player selects a cell, it can trigger a different\r\n//number of actions (1 action: build 1 wall or move 1 step)\r\n//this function counts the number of actions for a selected position\r\nconst countActions = (\r\n  grid,\r\n  selectedPos,\r\n  posActor,\r\n  posOther,\r\n  goalActor,\r\n  goalOther,\r\n  extraWalls\r\n) => {\r\n  const gridCopy = cloneDeep(grid);\r\n  for (let k = 0; k < extraWalls.length; k++) {\r\n    const W = extraWalls[k];\r\n    gridCopy[W[0]][W[1]] = 1;\r\n  }\r\n  if (cellTypeByPos(selectedPos) === cellEnum.ground) {\r\n    return distance(gridCopy, posActor, selectedPos);\r\n  }\r\n  return canBuildWall(\r\n    gridCopy,\r\n    [posActor, posOther],\r\n    [goalActor, goalOther],\r\n    selectedPos\r\n  )\r\n    ? 1\r\n    : 0;\r\n};\r\n\r\n//analogous to the constructor for a class\r\nexport const createInitialState = (cookies) => {\r\n  const draftState = {\r\n    //===================================================\r\n    //state about the session (sequence of games played by rematching)\r\n    //===================================================\r\n    //game code used by the joiner to join the game\r\n    joinCode: null,\r\n    //json object with duration in minutes and increment in seconds\r\n    timeControl: null,\r\n    names: [null, null],\r\n    //the icon used for the player. The default icon is special in that it is\r\n    //different for the creator and joiner\r\n    tokens: [\"default\", \"default\"],\r\n\r\n    //how many games each player has won in this session\r\n    matchScore: [0, 0],\r\n\r\n    //players can return to a game even if they close the browser\r\n    //(as long as it is the same browser, since it is cookie-based)\r\n    //but if they create/join another game, this counts as abandonment\r\n    //and they cannot join anymore\r\n    opponentAbandoned: false,\r\n\r\n    //indicates if the players have the game page open\r\n    //the game goes on even if both leave, but actions that require both\r\n    //players to agree are disabled if one of the players is not present\r\n    //eg., agreeing to a draw, starting a rematch, or doing a takeback\r\n    arePlayersPresent: [false, false],\r\n\r\n    //===================================================\r\n    //shared state of the current game\r\n    //===================================================\r\n    creatorStarts: null, //who starts is decided by the server\r\n    winner: \"\", //'' if game is ongoing, else 'creator', 'joiner', or 'draw'\r\n    //'' if game is ongoing, 'goal' or agreement' if drawn,\r\n    //'time', 'goal', 'resign', or 'abandon' if someone won\r\n    finishReason: \"\",\r\n\r\n    //life cycle of the game\r\n    //-2. Before sending 'createGame'/'joinGame' (for creator/joiner) to the server\r\n    //-1. Before receiving 'gameCreated'/'gameJoined' (for creator/joiner) from the server\r\n    //0. game created on server, but joiner not joined yet (only creator goes into this stage).\r\n    //1. joiner joined, but no moves made yet. Clocks not ticking.\r\n    //2. One player moved. Clocks still not ticking.\r\n    //3. Both players made at least 1 move and game has not ended. Clocks are ticking.\r\n    //4. Game ended because a win/draw condition is reached.\r\n    lifeCycleStage: -2,\r\n\r\n    moveHistory: [\r\n      {\r\n        index: 0,\r\n        actions: [],\r\n        //grid contains the locations of all the built walls, labeled by who built them\r\n        //0: empty wall, 1: player built by creator, 2: player built by joiner\r\n        grid: emptyGrid(defaultBoardSettings.dims),\r\n        playerPos: defaultBoardSettings.startPos,\r\n        timeLeft: [null, null],\r\n        distances: emptyBoardDistances(defaultBoardSettings),\r\n        wallCounts: [0, 0],\r\n      },\r\n    ],\r\n\r\n    //===================================================\r\n    //state unique to this client\r\n    //===================================================\r\n    clientRole: null, //creator, joiner, or spectator\r\n    moveToSend: null, //moves to be sent to the other client are stored here temporarily\r\n\r\n    //the ghost action is a single action done and shown only to this client\r\n    //when it is this client's turn to move. it can be combined with another\r\n    //action to make a full move, or undone in order to choose a different action\r\n    ghostAction: null,\r\n\r\n    //premove actions are one or two actions done by this client when it is not\r\n    //this client's turn to move. once the opponent moves, the game behaves as if\r\n    //the client inputted the premove actions during their turn\r\n    premoveActions: [],\r\n\r\n    isVolumeOn: false,\r\n    shouldPlaySound: false, //actions that trigger a sound set this to true\r\n\r\n    isKeyPressed: false,\r\n    //index of the move that the client is looking at, which may not be the last one\r\n    viewIndex: 0,\r\n    zoomLevel: 5, //number from 0 to 10\r\n\r\n    //the client pings the server periodically to make sure the server is alive\r\n    //'waitingForPing' is increased every 'pingInterval' seconds.\r\n    //It is reset to 0 at every server message. A ping message is sent if waitingForPing\r\n    //reaches 2 (meaning, it has gone at least 'pingInterval' seconds without hearing\r\n    //from server). A warning is displayed to the user if it reaches 3 saying the server\r\n    //is probably unreachable.\r\n    waitingForPing: 0,\r\n\r\n    //various dialogs where the player needs to make a decision\r\n    showDrawDialog: false,\r\n    showTakebackDialog: false,\r\n    showRematchDialog: false,\r\n\r\n    boardSettings: defaultBoardSettings, //by default, startPos and goalPos are at the corners\r\n  };\r\n  applyCookieSettings(draftState, cookies);\r\n  return draftState;\r\n};\r\n\r\nconst applyCookieSettings = (draftState, cookies) => {\r\n  if (!cookies) return;\r\n  if (cookies.isVolumeOn && cookies.isVolumeOn === \"true\")\r\n    draftState.isVolumeOn = true;\r\n  if (cookies.zoomLevel) {\r\n    const zoomVal = parseInt(cookies.zoomLevel);\r\n    if (zoomVal >= 0 && zoomVal <= 10) draftState.zoomLevel = zoomVal;\r\n  }\r\n};\r\n\r\nexport const applyAddCreator = (\r\n  draftState,\r\n  timeControl,\r\n  boardSettings,\r\n  name,\r\n  token\r\n) => {\r\n  draftState.clientRole = roleEnum.creator;\r\n  draftState.lifeCycleStage = -1;\r\n  draftState.timeControl = timeControl;\r\n  draftState.boardSettings = boardSettings;\r\n  draftState.names[0] = name;\r\n  draftState.tokens[0] = token;\r\n  const totalTimeInSeconds = timeControl.duration * 60;\r\n  draftState.moveHistory[0].timeLeft = [totalTimeInSeconds, totalTimeInSeconds];\r\n  draftState.moveHistory[0].grid = emptyGrid(boardSettings.dims);\r\n  draftState.moveHistory[0].playerPos = boardSettings.startPos;\r\n  draftState.moveHistory[0].distances = emptyBoardDistances(boardSettings);\r\n};\r\n\r\nexport const applyAddJoiner = (draftState, joinCode, name, token) => {\r\n  draftState.clientRole = roleEnum.joiner;\r\n  draftState.lifeCycleStage = -1;\r\n  draftState.joinCode = joinCode;\r\n  draftState.names[1] = name;\r\n  draftState.tokens[1] = token;\r\n};\r\n\r\n//data sent by the server to the creator\r\nexport const applyCreatedOnServer = (draftState, joinCode, creatorStarts) => {\r\n  //if life cycle stage is already 0, it means we already processed the response\r\n  if (draftState.lifeCycleStage === 0) return;\r\n  draftState.joinCode = joinCode;\r\n  draftState.creatorStarts = creatorStarts;\r\n  draftState.lifeCycleStage = 0;\r\n};\r\n\r\n//data sent by the server to the joiner\r\nexport const applyJoinedOnServer = (\r\n  draftState,\r\n  creatorName,\r\n  creatorToken,\r\n  timeControl,\r\n  boardSettings,\r\n  creatorStarts,\r\n  creatorPresent\r\n) => {\r\n  //if life cycle stage is already 1, it means we already joined\r\n  if (draftState.lifeCycleStage === 1) return;\r\n  draftState.creatorStarts = creatorStarts;\r\n  draftState.names[0] = creatorName;\r\n  draftState.tokens[0] = creatorToken;\r\n  draftState.timeControl = timeControl;\r\n  draftState.boardSettings = boardSettings;\r\n  draftState.arePlayersPresent[0] = creatorPresent;\r\n  const startSeconds = timeControl.duration * 60;\r\n  draftState.moveHistory[0].timeLeft = [startSeconds, startSeconds];\r\n  draftState.moveHistory[0].grid = emptyGrid(boardSettings.dims);\r\n  draftState.moveHistory[0].playerPos = boardSettings.startPos;\r\n  draftState.moveHistory[0].distances = emptyBoardDistances(boardSettings);\r\n  draftState.lifeCycleStage = 1;\r\n};\r\n\r\nexport const applyJoinerJoined = (draftState, joinerName, joinerToken) => {\r\n  //if life cycle stage is already 1, it means the joiner already joined\r\n  if (draftState.lifeCycleStage === 1) return;\r\n  draftState.names[1] = joinerName;\r\n  draftState.tokens[1] = joinerToken;\r\n  draftState.lifeCycleStage = 1;\r\n};\r\n\r\nexport const applyReturnToGame = (\r\n  draftState,\r\n  cookieId,\r\n  serverGame,\r\n  timeLeft\r\n) => {\r\n  //if game is already initialized, don't return to game again\r\n  if (draftState.timeControl) return;\r\n  const clientRole =\r\n    cookieId === serverGame.cookieIds[0] ? roleEnum.creator : roleEnum.joiner;\r\n  if (clientRole === roleEnum.creator) {\r\n    applyAddCreator(\r\n      draftState,\r\n      serverGame.timeControl,\r\n      serverGame.boardSettings,\r\n      serverGame.playerNames[0],\r\n      serverGame.playerTokens[0]\r\n    );\r\n    applyCreatedOnServer(\r\n      draftState,\r\n      serverGame.joinCode,\r\n      serverGame.creatorStarts\r\n    );\r\n    applyJoinerJoined(\r\n      draftState,\r\n      serverGame.playerNames[1],\r\n      serverGame.playerTokens[1]\r\n    );\r\n  } else {\r\n    applyAddJoiner(\r\n      draftState,\r\n      serverGame.joinCode,\r\n      serverGame.playerNames[1],\r\n      serverGame.playerTokens[1]\r\n    );\r\n    applyJoinedOnServer(\r\n      draftState,\r\n      serverGame.playerNames[0],\r\n      serverGame.playerTokens[0],\r\n      serverGame.timeControl,\r\n      serverGame.boardSettings,\r\n      serverGame.creatorStarts,\r\n      true\r\n    );\r\n  }\r\n  draftState.arePlayersPresent = serverGame.arePlayersPresent;\r\n  for (let k = 0; k < serverGame.moveHistory.length; k++) {\r\n    const actions = serverGame.moveHistory[k].actions;\r\n    const tLeft = serverGame.moveHistory[k].remainingTime;\r\n    applyMove(draftState, actions, tLeft, k + 1);\r\n  }\r\n  draftState.matchScore = serverGame.matchScore;\r\n  draftState.winner = serverGame.winner;\r\n  draftState.finishReason = serverGame.finishReason;\r\n  const tc = turnCount(draftState);\r\n  draftState.moveHistory[tc].timeLeft = timeLeft;\r\n  if (serverGame.winner !== \"\") {\r\n    draftState.lifeCycleStage = 4;\r\n  } else {\r\n    if (timeLeft[0] === 0) applyWonOnTime(draftState, 1);\r\n    else if (timeLeft[1] === 0) applyWonOnTime(draftState, 0);\r\n  }\r\n};\r\n\r\nexport const applyReceivedGame = (draftState, serverGame) => {\r\n  applyAddCreator(\r\n    draftState,\r\n    serverGame.timeControl,\r\n    serverGame.boardSettings,\r\n    serverGame.playerNames[0],\r\n    serverGame.playerTokens[0]\r\n  );\r\n  applyCreatedOnServer(\r\n    draftState,\r\n    serverGame.joinCode,\r\n    serverGame.creatorStarts\r\n  );\r\n  applyJoinerJoined(\r\n    draftState,\r\n    serverGame.playerNames[1],\r\n    serverGame.playerTokens[1]\r\n  );\r\n  for (let k = 0; k < serverGame.moveHistory.length; k++) {\r\n    const actions = serverGame.moveHistory[k].actions;\r\n    const tLeft = serverGame.moveHistory[k].remainingTime;\r\n    applyMove(draftState, actions, tLeft, k + 1);\r\n  }\r\n  draftState.clientRole = roleEnum.spectator;\r\n  draftState.matchScore = serverGame.matchScore;\r\n  draftState.winner = serverGame.winner;\r\n  draftState.finishReason = serverGame.finishReason;\r\n  draftState.lifeCycleStage = 4;\r\n};\r\n\r\n//applies the move number 'moveIndex', consisting of the action(s) in 'actions',\r\n//'timeLeftAfterMove' is the time left by the player who made the move\r\nexport const applyMove = (\r\n  draftState,\r\n  actions,\r\n  timeLeftAfterMove,\r\n  moveIndex\r\n) => {\r\n  //only in life cycle stages 1,2,3 players can make move\r\n  if (draftState.lifeCycleStage < 1 || draftState.lifeCycleStage > 3) return;\r\n  //make the move only if it is the next one (safety measure against desync issues)\r\n  const tc = turnCount(draftState);\r\n  if (tc !== moveIndex - 1) return;\r\n\r\n  const idxToMove = indexToMove(draftState);\r\n  const otherIdx = idxToMove === 0 ? 1 : 0;\r\n  const newPlayerPos = cloneDeep(draftState.moveHistory[tc].playerPos);\r\n  const newGrid = cloneDeep(draftState.moveHistory[tc].grid);\r\n  const newTimeLeft = cloneDeep(draftState.moveHistory[tc].timeLeft);\r\n  const wallCounts = cloneDeep(draftState.moveHistory[tc].wallCounts);\r\n  newTimeLeft[idxToMove] = timeLeftAfterMove;\r\n  for (let k = 0; k < actions.length; k++) {\r\n    const aPos = actions[k];\r\n    const aType = cellTypeByPos(aPos);\r\n    if (aType === cellEnum.ground) {\r\n      newPlayerPos[idxToMove] = aPos;\r\n      if (posEq(aPos, draftState.boardSettings.goalPos[idxToMove])) {\r\n        const pToMoveStarted = tc % 2 === 0;\r\n        const otherIsWithinOneMove = isDistanceAtMost(\r\n          newGrid,\r\n          newPlayerPos[otherIdx],\r\n          draftState.boardSettings.goalPos[otherIdx],\r\n          2\r\n        );\r\n        if (pToMoveStarted && otherIsWithinOneMove) {\r\n          draftState.winner = \"draw\";\r\n          draftState.matchScore[0] += 0.5;\r\n          draftState.matchScore[1] += 0.5;\r\n        } else {\r\n          draftState.winner =\r\n            idxToMove === 0 ? roleEnum.creator : roleEnum.joiner;\r\n          draftState.matchScore[idxToMove] += 1;\r\n        }\r\n        draftState.finishReason = \"goal\";\r\n        draftState.lifeCycleStage = 4;\r\n      }\r\n    } else if (aType === cellEnum.wall) {\r\n      newGrid[aPos[0]][aPos[1]] = idxToMove + 1;\r\n      wallCounts[idxToMove] += 1;\r\n    } else console.error(\"unexpected action type\", aType);\r\n  }\r\n  draftState.moveHistory.push({\r\n    index: tc + 1,\r\n    actions: actions,\r\n    grid: newGrid,\r\n    playerPos: newPlayerPos,\r\n    timeLeft: newTimeLeft,\r\n    distances: [\r\n      distance(newGrid, newPlayerPos[0], draftState.boardSettings.goalPos[0]),\r\n      distance(newGrid, newPlayerPos[1], draftState.boardSettings.goalPos[1]),\r\n    ],\r\n    wallCounts: wallCounts,\r\n  });\r\n\r\n  if (draftState.lifeCycleStage === 1 && tc === 0)\r\n    draftState.lifeCycleStage = 2;\r\n  else if (draftState.lifeCycleStage === 2 && tc === 1)\r\n    draftState.lifeCycleStage = 3;\r\n\r\n  //ghost actions are cleared when a move actually happens\r\n  draftState.ghostAction = null;\r\n\r\n  //if the player is looking at a previous move, when a move happens\r\n  //they are automatically switched to viewing the new move\r\n  draftState.viewIndex = tc + 1;\r\n\r\n  //apply premoves, if any\r\n  if (draftState.premoveActions.length > 0) {\r\n    const acts = draftState.premoveActions;\r\n    draftState.premoveActions = [];\r\n    for (let k = 0; k < acts.length; k++)\r\n      applySelectedCell(draftState, acts[k], true);\r\n  }\r\n};\r\n\r\n//manage the state change on click or keyboard press. this may\r\n//change the ghost action (which is only shown to this client), or\r\n//make a full move, in which case it is also sent to the other client\r\nexport const applySelectedCell = (draftState, pos, clientToMove) => {\r\n  if (!clientToMove) {\r\n    applySelectedCellPremove(draftState, pos);\r\n    return;\r\n  }\r\n  if (draftState.lifeCycleStage < 1) return; //cannot move til player 2 joins\r\n  if (draftState.lifeCycleStage > 3) return; //cannot move if game finished\r\n  //can only move if looking at current position\r\n  if (draftState.viewIndex !== turnCount(draftState)) return;\r\n  //out of bounds position, can happen when using the keyboard keys\r\n  const dims = draftState.boardSettings.dims;\r\n  if (pos[0] < 0 || pos[0] >= dims[0] || pos[1] < 0 || pos[1] >= dims[1])\r\n    return;\r\n\r\n  const selectedType = cellTypeByPos(pos);\r\n  const idx = indexToMove(draftState);\r\n  const otherIdx = idx === 0 ? 1 : 0;\r\n  const gType = ghostType(draftState.ghostAction);\r\n  const extraWalls = gType === cellEnum.wall ? [draftState.ghostAction] : [];\r\n  const tc = turnCount(draftState);\r\n  let curPos = draftState.moveHistory[tc].playerPos[idx];\r\n  if (selectedType === cellEnum.wall && gType === cellEnum.ground)\r\n    curPos = draftState.ghostAction;\r\n  const actCount = countActions(\r\n    draftState.moveHistory[tc].grid,\r\n    pos,\r\n    curPos,\r\n    draftState.moveHistory[tc].playerPos[otherIdx],\r\n    draftState.boardSettings.goalPos[idx],\r\n    draftState.boardSettings.goalPos[otherIdx],\r\n    extraWalls\r\n  );\r\n  if (actCount > 2) return; //clicked a ground cell at distance >2\r\n\r\n  //variables to store the outcome of the click, if any.\r\n  //in the case analysis below, if we detect that the click does\r\n  //not trigger any change, we simply return\r\n  //see docs/moveLogic.md for the description of the case analysis\r\n  let [fullMoveActions, newGhostAction] = [null, null];\r\n  if (gType === \"None\") {\r\n    if (selectedType === cellEnum.wall) {\r\n      if (actCount === 1) newGhostAction = pos;\r\n      else return;\r\n    } else if (selectedType === cellEnum.ground) {\r\n      if (actCount === 1) newGhostAction = pos;\r\n      else if (actCount === 2) fullMoveActions = [pos];\r\n      else return;\r\n    }\r\n  } else if (gType === cellEnum.wall) {\r\n    if (selectedType === cellEnum.wall) {\r\n      if (posEq(draftState.ghostAction, pos)) newGhostAction = null;\r\n      else if (actCount === 1) fullMoveActions = [pos, draftState.ghostAction];\r\n      else return;\r\n    } else if (selectedType === cellEnum.ground) {\r\n      if (actCount === 0) newGhostAction = null;\r\n      else if (actCount === 1) fullMoveActions = [pos, draftState.ghostAction];\r\n      else return;\r\n    }\r\n  } else if (gType === cellEnum.ground) {\r\n    if (selectedType === cellEnum.wall) {\r\n      if (actCount === 1) fullMoveActions = [pos, draftState.ghostAction];\r\n      else return;\r\n    } else if (selectedType === cellEnum.ground) {\r\n      if (actCount === 0) newGhostAction = null;\r\n      else if (actCount === 1) {\r\n        if (posEq(pos, draftState.ghostAction)) newGhostAction = null;\r\n        else newGhostAction = pos;\r\n      } else if (actCount === 2) fullMoveActions = [pos];\r\n      else return;\r\n    }\r\n  } else {\r\n    console.error(\"unexpected ghost type\", gType);\r\n  }\r\n\r\n  if (fullMoveActions) {\r\n    const idx = indexToMove(draftState);\r\n    const tc = turnCount(draftState);\r\n    let tLeft = draftState.moveHistory[tc].timeLeft[idx];\r\n    //we don't add the increment until the clocks start running (stage 3)\r\n    if (draftState.lifeCycleStage === 3)\r\n      tLeft += draftState.timeControl.increment;\r\n    draftState.shouldPlaySound = true;\r\n    applyMove(draftState, fullMoveActions, tLeft, turnCount(draftState) + 1);\r\n    draftState.moveToSend = {\r\n      actions: fullMoveActions,\r\n      remainingTime: tLeft,\r\n      distances:\r\n        draftState.moveHistory[draftState.moveHistory.length - 1].distances,\r\n    };\r\n  } else {\r\n    draftState.ghostAction = newGhostAction;\r\n  }\r\n};\r\n\r\n//manage the state change on click or keyboard press.\r\n//dual function of applySelectedCell for when it's not your turn\r\nconst applySelectedCellPremove = (draftState, pos) => {\r\n  if (draftState.lifeCycleStage > 3) return; //cannot premove if game finished\r\n  //can only premove if looking at current position\r\n  if (draftState.viewIndex !== turnCount(draftState)) return;\r\n  //out of bounds position, can happen when using the keyboard keys\r\n\r\n  const dims = draftState.boardSettings.dims;\r\n  if (pos[0] < 0 || pos[0] >= dims[0] || pos[1] < 0 || pos[1] >= dims[1])\r\n    return;\r\n\r\n  const selectedType = cellTypeByPos(pos);\r\n  const idx = indexToMove(draftState) === 0 ? 1 : 0;\r\n  const otherIdx = idx === 0 ? 1 : 0;\r\n  const tc = turnCount(draftState);\r\n  const premoveWalls = [];\r\n  let premoveGround = null;\r\n  for (let k = 0; k < draftState.premoveActions.length; k++) {\r\n    const act = draftState.premoveActions[k];\r\n    if (cellTypeByPos(act) === cellEnum.wall) premoveWalls.push(act);\r\n    else premoveGround = act;\r\n  }\r\n  let curPos = draftState.moveHistory[tc].playerPos[idx];\r\n  if (selectedType === cellEnum.wall && premoveGround) curPos = premoveGround;\r\n  const actCount = countActions(\r\n    draftState.moveHistory[tc].grid,\r\n    pos,\r\n    curPos,\r\n    draftState.moveHistory[tc].playerPos[otherIdx],\r\n    draftState.boardSettings.goalPos[idx],\r\n    draftState.boardSettings.goalPos[otherIdx],\r\n    premoveWalls\r\n  );\r\n  let premoveGroundDist = null;\r\n  if (premoveGround)\r\n    premoveGroundDist = countActions(\r\n      draftState.moveHistory[tc].grid,\r\n      premoveGround,\r\n      draftState.moveHistory[tc].playerPos[idx],\r\n      draftState.moveHistory[tc].playerPos[otherIdx],\r\n      draftState.boardSettings.goalPos[idx],\r\n      draftState.boardSettings.goalPos[otherIdx],\r\n      premoveWalls\r\n    );\r\n\r\n  if (actCount > 2) return;\r\n\r\n  //see docs/moveLogic.md for the description of the case analysis below\r\n  const premoveEnum = {\r\n    empty: \"empty\",\r\n    wall: \"wall\",\r\n    wallWall: \"wallWall\",\r\n    groundWall: \"groundWall\",\r\n    groundDist1: \"groundDist1\",\r\n    groundDist2: \"groundDist2\",\r\n  };\r\n  let premoveState;\r\n  if (draftState.premoveActions.length === 0) premoveState = premoveEnum.empty;\r\n  else if (!premoveGround && premoveWalls.length === 1)\r\n    premoveState = premoveEnum.wall;\r\n  else if (!premoveGround && premoveWalls.length === 2)\r\n    premoveState = premoveEnum.wallWall;\r\n  else if (premoveGround && premoveWalls.length === 1)\r\n    premoveState = premoveEnum.groundWall;\r\n  else if (premoveGround && premoveGroundDist === 1)\r\n    premoveState = premoveEnum.groundDist1;\r\n  else if (premoveGround && premoveGroundDist === 2)\r\n    premoveState = premoveEnum.groundDist2;\r\n  else {\r\n    console.error(\r\n      \"Unknown premove state\",\r\n      premoveGround,\r\n      premoveWalls,\r\n      actCount,\r\n      premoveGroundDist\r\n    );\r\n    return;\r\n  }\r\n\r\n  let newPremoveActions = [];\r\n  if (posEq(pos, curPos)) {\r\n    if (draftState.premoveActions.length === 0) return;\r\n    else {\r\n      //selecting the current position undoes any premoves\r\n      draftState.premoveActions = [];\r\n      return;\r\n    }\r\n  }\r\n\r\n  let [W, W2] = [null, null];\r\n  if (premoveWalls.length === 1) [W, W2] = [premoveWalls[0], null];\r\n  else if (premoveWalls.length === 2)\r\n    [W, W2] = [premoveWalls[0], premoveWalls[1]];\r\n  if (premoveState === premoveEnum.empty) {\r\n    if (selectedType === cellEnum.wall) {\r\n      if (actCount === 1) newPremoveActions = [pos];\r\n      else return;\r\n    } else if (selectedType === cellEnum.ground) {\r\n      if (actCount === 1 || actCount === 2) newPremoveActions = [pos];\r\n      else console.error(\"unreachable case\");\r\n    }\r\n  } else if (premoveState === premoveEnum.wall) {\r\n    if (selectedType === cellEnum.wall) {\r\n      if (posEq(W, pos)) newPremoveActions = [];\r\n      else if (actCount === 1) newPremoveActions = [W, pos];\r\n      else return;\r\n    } else if (selectedType === cellEnum.ground) {\r\n      if (actCount === 1) newPremoveActions = [W, pos];\r\n      else return;\r\n    }\r\n  } else if (premoveState === premoveEnum.wallWall) {\r\n    if (selectedType === cellEnum.wall) {\r\n      if (posEq(W, pos)) newPremoveActions = [W2];\r\n      else if (posEq(W2, pos)) newPremoveActions = [W];\r\n      else return;\r\n    } else if (selectedType === cellEnum.ground) {\r\n      return;\r\n    }\r\n  } else if (premoveState === premoveEnum.groundDist1) {\r\n    if (selectedType === cellEnum.wall) {\r\n      if (actCount === 1) newPremoveActions = [premoveGround, pos];\r\n      else return;\r\n    } else if (selectedType === cellEnum.ground) {\r\n      if (posEq(pos, premoveGround)) newPremoveActions = [];\r\n      else newPremoveActions = [pos];\r\n    }\r\n  } else if (premoveState === premoveEnum.groundDist2) {\r\n    if (selectedType === cellEnum.wall) return;\r\n    else if (selectedType === cellEnum.ground) {\r\n      if (posEq(pos, premoveGround)) newPremoveActions = [];\r\n      else newPremoveActions = [pos];\r\n    }\r\n  } else if (premoveState === premoveEnum.groundWall) {\r\n    if (selectedType === cellEnum.wall) {\r\n      if (posEq(pos, W)) newPremoveActions = [premoveGround];\r\n      else return;\r\n    } else if (selectedType === cellEnum.ground) {\r\n      if (posEq(pos, premoveGround)) newPremoveActions = [W];\r\n      else if (actCount === 1) newPremoveActions = [W, pos];\r\n      else return;\r\n    }\r\n  } else {\r\n    console.error(\"unexpected premove state case\", premoveState);\r\n  }\r\n  if (newPremoveActions) draftState.premoveActions = newPremoveActions;\r\n};\r\n\r\nconst closeDialogs = (draftState) => {\r\n  draftState.showRematchDialog = false;\r\n  draftState.showDrawDialog = false;\r\n  draftState.showTakebackDialog = false;\r\n  draftState.ghostAction = null;\r\n  draftState.premoveActions = [];\r\n};\r\n\r\nexport const applyDrawGame = (draftState, finishReason) => {\r\n  if (draftState.lifeCycleStage !== 3) return;\r\n  draftState.shouldPlaySound = true;\r\n  draftState.lifeCycleStage = 4;\r\n  draftState.winner = \"draw\";\r\n  draftState.matchScore[0] += 0.5;\r\n  draftState.matchScore[1] += 0.5;\r\n  draftState.finishReason = finishReason;\r\n  closeDialogs(draftState);\r\n};\r\n\r\nexport const applyResignGame = (draftState, resignerIsCreator) => {\r\n  if (draftState.lifeCycleStage !== 3) return;\r\n  draftState.lifeCycleStage = 4;\r\n  draftState.winner = resignerIsCreator ? roleEnum.joiner : roleEnum.creator;\r\n  draftState.matchScore[resignerIsCreator ? 1 : 0] += 1;\r\n  draftState.finishReason = \"resign\";\r\n  closeDialogs(draftState);\r\n};\r\n\r\nexport const applyAbandonGame = (draftState, abandonerIsCreator) => {\r\n  if (draftState.lifeCycleStage === 4) return;\r\n  draftState.lifeCycleStage = 4;\r\n  draftState.winner = abandonerIsCreator ? roleEnum.joiner : roleEnum.creator;\r\n  draftState.matchScore[abandonerIsCreator ? 1 : 0] += 1;\r\n  draftState.finishReason = \"abandon\";\r\n  closeDialogs(draftState);\r\n};\r\nexport const applyTakeback = (draftState, requesterIsCreator) => {\r\n  draftState.showTakebackDialog = false;\r\n  if (draftState.lifeCycleStage !== 2 && draftState.lifeCycleStage !== 3)\r\n    return;\r\n  const requesterToMove = requesterIsCreator === creatorToMove(draftState);\r\n  const numMovesToUndo = requesterToMove ? 2 : 1;\r\n  for (let k = 0; k < numMovesToUndo; k++) draftState.moveHistory.pop();\r\n  const tc = turnCount(draftState);\r\n  draftState.viewIndex = tc;\r\n  if (tc === 0) draftState.lifeCycleStage = 1;\r\n  else if (tc === 1) draftState.lifeCycleStage = 2;\r\n  closeDialogs(draftState);\r\n};\r\n\r\nexport const applySetupRematch = (draftState) => {\r\n  if (draftState.lifeCycleStage !== 4) return;\r\n  draftState.creatorStarts = !draftState.creatorStarts;\r\n\r\n  const newGrid = emptyGrid(draftState.boardSettings.dims);\r\n  draftState.moveHistory = [\r\n    {\r\n      index: 0,\r\n      actions: [],\r\n      grid: newGrid,\r\n      playerPos: draftState.boardSettings.startPos,\r\n      timeLeft: [\r\n        draftState.timeControl.duration * 60,\r\n        draftState.timeControl.duration * 60,\r\n      ],\r\n      distances: [\r\n        distance(\r\n          newGrid,\r\n          draftState.boardSettings.startPos[0],\r\n          draftState.boardSettings.goalPos[0]\r\n        ),\r\n        distance(\r\n          newGrid,\r\n          draftState.boardSettings.startPos[1],\r\n          draftState.boardSettings.goalPos[1]\r\n        ),\r\n      ],\r\n      wallCounts: [0, 0],\r\n    },\r\n  ];\r\n  draftState.winner = \"\";\r\n  draftState.finishReason = \"\";\r\n  draftState.lifeCycleStage = 1;\r\n  draftState.viewIndex = 0;\r\n  closeDialogs(draftState);\r\n};\r\n\r\nexport const applyAddExtraTime = (draftState, playerIndex) => {\r\n  if (draftState.lifeCycleStage !== 3) return;\r\n  const tc = turnCount(draftState);\r\n  draftState.moveHistory[tc].timeLeft[playerIndex] += 60;\r\n};\r\n\r\nconst applyWonOnTime = (draftState, winnerIndex) => {\r\n  draftState.winner = winnerIndex === 0 ? roleEnum.creator : roleEnum.joiner;\r\n  draftState.matchScore[winnerIndex] += 1;\r\n  draftState.finishReason = \"time\";\r\n  draftState.lifeCycleStage = 4;\r\n  closeDialogs(draftState);\r\n};\r\n\r\nexport const applyClockTick = (draftState) => {\r\n  //clocks only run after each player have made the first move,\r\n  //and the game has not ended\r\n  if (draftState.lifeCycleStage !== 3) return;\r\n  const idx = indexToMove(draftState);\r\n  const tc = turnCount(draftState);\r\n  draftState.moveHistory[tc].timeLeft[idx] -= 1;\r\n  if (draftState.moveHistory[tc].timeLeft[idx] === 0) {\r\n    draftState.shouldPlaySound = true;\r\n    applyWonOnTime(draftState, idx === 0 ? 1 : 0);\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nimport {\r\n  cellEnum,\r\n  cellTypeByPos,\r\n  posEq,\r\n  rowNotation,\r\n  columnNotation,\r\n} from \"../shared/gameLogicUtils\";\r\nimport { getColor } from \"../shared/colorThemes\";\r\n\r\n//stateless component to display the board. all the state is at GamePage\r\nconst Board = ({\r\n  grid,\r\n  ghostAction,\r\n  premoveActions,\r\n  lastActions,\r\n  tracePos,\r\n  playerPos: [p1, p2],\r\n  goals: [g1, g2],\r\n  handleClick,\r\n  creatorToMove,\r\n  groundSize,\r\n  wallWidth,\r\n  menuTheme,\r\n  boardTheme,\r\n  isDarkModeOn,\r\n  tokens,\r\n}) => {\r\n  const canHover = !useMediaQuery({ query: \"(hover: none)\" });\r\n  const [hoveredCell, setHoveredCell] = useState(null);\r\n  const handleMouseEnter = (pos) => {\r\n    setHoveredCell(pos);\r\n  };\r\n  const handleMouseLeave = () => {\r\n    setHoveredCell(null);\r\n  };\r\n\r\n  //short-hand for getColor\r\n  const getCol = (elem) => getColor(boardTheme, elem, isDarkModeOn);\r\n\r\n  const borderStyle = `1px solid ${getColor(\r\n    menuTheme,\r\n    \"container\",\r\n    isDarkModeOn\r\n  )}`;\r\n  const [color1, color2] = [getCol(\"player1\"), getCol(\"player2\")];\r\n\r\n  const defaultTokens = [\"face\", \"outlet\"];\r\n  let [token1, token2] = tokens;\r\n  if (token1 === \"default\") token1 = defaultTokens[0];\r\n  if (token2 === \"default\") token2 = defaultTokens[1];\r\n\r\n  const dims = [grid.length, grid[0].length];\r\n  const allPos = [];\r\n  for (let r = 0; r < dims[0]; r++)\r\n    for (let c = 0; c < dims[1]; c++) allPos[r * dims[1] + c] = [r, c];\r\n\r\n  const [repRows, repCols] = [(dims[0] - 1) / 2, (dims[1] - 1) / 2];\r\n\r\n  const tokenSize = 0.8 * groundSize;\r\n  const coordColor = getCol(\"coord\");\r\n\r\n  const isOneOf = (pos, actions) => {\r\n    // if (!actions) return false;\r\n    if (actions.length > 0 && actions[0] && posEq(pos, actions[0])) return true;\r\n    if (actions.length > 1 && actions[1] && posEq(pos, actions[1])) return true;\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"grid\",\r\n        gridTemplateColumns: `repeat(${repCols}, ${groundSize}px ${wallWidth}px) ${groundSize}px`,\r\n        gridTemplateRows: `repeat(${repRows}, ${groundSize}px ${wallWidth}px) ${groundSize}px`,\r\n        justifyContent: \"center\",\r\n        gridArea: \"board\",\r\n        MozUserSelect: \"none\",\r\n        WebkitUserSelect: \"none\",\r\n        msUserSelect: \"none\",\r\n        userSelect: \"none\",\r\n        alignSelf: \"center\",\r\n      }}\r\n    >\r\n      {allPos.map((pos) => {\r\n        const [player1Here, player2Here] = [posEq(pos, p1), posEq(pos, p2)];\r\n        const [goal1Here, goal2Here] = [posEq(pos, g1), posEq(pos, g2)];\r\n        const playerHere = player1Here || player2Here;\r\n        const goalHere = goal1Here || goal2Here;\r\n        const ghostHere = isOneOf(pos, [ghostAction]);\r\n        const premoveHere = isOneOf(pos, premoveActions);\r\n        const traceHere = tracePos && posEq(pos, tracePos);\r\n        const lastMoveHere = isOneOf(pos, lastActions);\r\n        const shadowHere = ghostHere || premoveHere;\r\n        const anyIconHere = playerHere || goalHere || shadowHere;\r\n\r\n        //premoves and ghost moves are displayed the same. We call\r\n        //the combination of both \"shadow\"\r\n        const [shadow1Here, shadow2Here] = [\r\n          (ghostHere && creatorToMove) || (premoveHere && !creatorToMove),\r\n          (ghostHere && !creatorToMove) || (premoveHere && creatorToMove),\r\n        ];\r\n        const [lastMove1Here, lastMove2Here] = [\r\n          lastMoveHere && !creatorToMove,\r\n          lastMoveHere && creatorToMove,\r\n        ];\r\n\r\n        const coordFits = groundSize > 27 && !anyIconHere;\r\n        const letterCoordHere =\r\n          coordFits && pos[0] === dims[0] - 1 && pos[1] % 2 === 0;\r\n        const numberCoordHere =\r\n          coordFits && pos[1] === dims[1] - 1 && pos[0] % 2 === 0;\r\n        const coordHere = letterCoordHere || numberCoordHere;\r\n\r\n        const hoveredHere = canHover && hoveredCell && posEq(pos, hoveredCell);\r\n\r\n        //add waves cosmetic effect when clicking a cell\r\n        const cellType = cellTypeByPos(pos);\r\n        let className = \"\";\r\n        if (cellType === cellEnum.ground) className += \"waves-effect waves-light\";\r\n        if (cellType === cellEnum.wall) className += \"waves-effect waves-dark\";\r\n\r\n        let color;\r\n        if (cellType === cellEnum.ground) {\r\n          if (hoveredHere) {\r\n            color = getCol(\"hoveredGround\");\r\n          } else if (traceHere) {\r\n            color = getCol(\"traceGround\");\r\n          } else if (goalHere) {\r\n            if (goal1Here && goal2Here)\r\n              color = getCol(\"combinedGoalBackground\");\r\n            else color = getCol(`goalBackground${goal1Here ? \"1\" : \"2\"}`);\r\n          } else {\r\n            color = getCol(\"ground\");\r\n          }\r\n        } else if (cellType === cellEnum.wall) {\r\n          const solidWallHere = grid[pos[0]][pos[1]] !== 0;\r\n          if (solidWallHere) {\r\n            color = getCol(`wall${grid[pos[0]][pos[1]]}`);\r\n          } else if (ghostHere) {\r\n            color = getCol(`ghostWall${creatorToMove ? \"1\" : \"2\"}`);\r\n          } else if (premoveHere) {\r\n            color = getCol(`ghostWall${creatorToMove ? \"2\" : \"1\"}`);\r\n          } else if (hoveredHere) {\r\n            color = getCol(\"hoveredWall\");\r\n          } else {\r\n            color = getCol(\"emptyWall\");\r\n          }\r\n        } else color = getCol(\"pillar\");\r\n\r\n        let [justifyContent, alignItems] = [\"center\", \"center\"];\r\n        if (coordHere) {\r\n          justifyContent = letterCoordHere ? \"flex-start\" : \"flex-end\";\r\n          alignItems = letterCoordHere ? \"flex-end\" : \"flex-start\";\r\n        }\r\n        const style = {\r\n          backgroundColor: color,\r\n          display: \"flex\",\r\n          justifyContent: justifyContent,\r\n          alignItems: alignItems,\r\n          position: \"relative\",\r\n        };\r\n        if (cellType !== cellEnum.pillar) style.cursor = \"pointer\";\r\n        if (cellType === cellEnum.wall && lastMoveHere) {\r\n          style.border = `${isDarkModeOn ? \"1\" : \"2\"}px solid ${getCol(\r\n            \"lastMoveWallBorder\"\r\n          )}`;\r\n        } else {\r\n          if (pos[0] === 0) style.borderTop = borderStyle;\r\n          if (pos[0] === dims[0] - 1) style.borderBottom = borderStyle;\r\n          if (pos[1] === 0) style.borderLeft = borderStyle;\r\n          if (pos[1] === dims[1] - 1) style.borderRight = borderStyle;\r\n        }\r\n\r\n        const lastMoveTextShadow = `0 0 4px ${getCol(\"lastMoveTokenBorder\")}`;\r\n\r\n        //To mitigate misclicks, we make it so that if you click a ground\r\n        //cell very close to a wall (within the closest 5%), nothing happens.\r\n        //we don't do the same for walls because walls are already narrow,\r\n        //so we don't want to make them harder to click\r\n        const clickableGroundStyle = {\r\n          position: \"absolute\",\r\n          height: \"90%\",\r\n          width: \"90%\",\r\n          top: \"5%\",\r\n          left: \"5%\",\r\n          cursor: \"pointer\",\r\n        };\r\n        if (pos[0] === 0 || pos[0] === dims[0] - 1) {\r\n          clickableGroundStyle.height = \"95%\";\r\n          if (pos[0] === 0) clickableGroundStyle.top = \"0\";\r\n          else clickableGroundStyle.top = \"5%\";\r\n        }\r\n        if (pos[1] === 0 || pos[1] === dims[1] - 1) {\r\n          clickableGroundStyle.width = \"95%\";\r\n          if (pos[1] === 0) clickableGroundStyle.left = \"0\";\r\n          else clickableGroundStyle.left = \"5%\";\r\n        }\r\n\r\n        return (\r\n          <div\r\n            className={className}\r\n            key={`${pos[0]}_${pos[1]}`}\r\n            onMouseEnter={() => handleMouseEnter(pos)}\r\n            onMouseLeave={handleMouseLeave}\r\n            style={style}\r\n            onClick={\r\n              cellType === cellEnum.wall && handleClick !== null\r\n                ? () => {\r\n                    handleClick(pos);\r\n                  }\r\n                : undefined\r\n            }\r\n          >\r\n            {cellType === cellEnum.ground && (\r\n              <div\r\n                style={clickableGroundStyle}\r\n                onClick={\r\n                  handleClick !== null\r\n                    ? () => {\r\n                        handleClick(pos);\r\n                      }\r\n                    : undefined\r\n                }\r\n              ></div>\r\n            )}\r\n            {player1Here && (\r\n              <i\r\n                className={`material-icons`}\r\n                style={{\r\n                  fontSize: `${tokenSize}px`,\r\n                  color: color1,\r\n                  textShadow: lastMove1Here ? lastMoveTextShadow : \"none\",\r\n                }}\r\n              >\r\n                {token1}\r\n              </i>\r\n            )}\r\n            {player2Here && (\r\n              <i\r\n                className={`material-icons`}\r\n                style={{\r\n                  fontSize: `${tokenSize}px`,\r\n                  color: color2,\r\n                  textShadow: lastMove2Here ? lastMoveTextShadow : \"none\",\r\n                }}\r\n              >\r\n                {token2}\r\n              </i>\r\n            )}\r\n            {cellType === cellEnum.ground && (shadow1Here || shadow2Here) && (\r\n              <i\r\n                className={`material-icons ${color1}-text text-lighten-4`}\r\n                style={{\r\n                  fontSize: `${tokenSize}px`,\r\n                  color: getCol(`ghost${shadow1Here ? \"1\" : \"2\"}`),\r\n                }}\r\n              >\r\n                {shadow1Here ? token1 : token2}\r\n              </i>\r\n            )}\r\n            {(goal1Here || goal2Here) && !playerHere && !shadowHere && (\r\n              <i\r\n                className={`material-icons`}\r\n                style={{\r\n                  fontSize: `${tokenSize}px`,\r\n                  color: getCol(\"goalToken\"),\r\n                }}\r\n              >\r\n                {goal1Here && token1}\r\n                {goal2Here && token2}\r\n              </i>\r\n            )}\r\n            {letterCoordHere && (\r\n              <div\r\n                style={{ color: coordColor, padding: \"0\", marginLeft: \"4px\" }}\r\n              >\r\n                {columnNotation(pos)}\r\n              </div>\r\n            )}\r\n            {numberCoordHere && !letterCoordHere && (\r\n              <div\r\n                style={{ color: coordColor, padding: \"0\", marginRight: \"4px\" }}\r\n              >\r\n                {rowNotation(pos)}\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport { Button, Icon, Modal } from \"react-materialize\";\r\n\r\nimport { getColor } from \"./colorThemes\";\r\n\r\nconst IconButton = ({\r\n  icon,\r\n  tooltip,\r\n  onClick,\r\n  modalTitle,\r\n  modalBody,\r\n  modalConfirmButtonText,\r\n  bgColor,\r\n  padding,\r\n  disabled,\r\n  menuTheme,\r\n  isDarkModeOn,\r\n}) => {\r\n  if (!bgColor) bgColor = getColor(menuTheme, \"button\", isDarkModeOn);\r\n\r\n  if (!modalBody) {\r\n    return (\r\n      <Button\r\n        style={{ backgroundColor: bgColor }}\r\n        node=\"button\"\r\n        waves=\"light\"\r\n        icon={<Icon className=\"large\">{icon}</Icon>}\r\n        onClick={onClick}\r\n        tooltip={tooltip}\r\n        disabled={disabled}\r\n      />\r\n    );\r\n  }\r\n\r\n  let actions;\r\n  if (modalConfirmButtonText && modalConfirmButtonText !== \"\") {\r\n    actions = [\r\n      <Button\r\n        style={{\r\n          backgroundColor: bgColor,\r\n          color: \"white\",\r\n          marginRight: \"1rem\",\r\n        }}\r\n        flat\r\n        modal=\"close\"\r\n        node=\"button\"\r\n        waves=\"green\"\r\n        onClick={onClick}\r\n      >\r\n        {modalConfirmButtonText}\r\n      </Button>,\r\n      <Button\r\n        style={{\r\n          backgroundColor: bgColor,\r\n          color: \"white\",\r\n        }}\r\n        flat\r\n        modal=\"close\"\r\n        node=\"button\"\r\n        waves=\"green\"\r\n      >\r\n        Cancel\r\n      </Button>,\r\n    ];\r\n  } else {\r\n    actions = (\r\n      <Button\r\n        style={{\r\n          backgroundColor: bgColor,\r\n          color: \"white\",\r\n        }}\r\n        flat\r\n        modal=\"close\"\r\n        node=\"button\"\r\n        waves=\"green\"\r\n      >\r\n        Close\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  const trigger = (\r\n    <Button\r\n      style={{ padding: `0px ${padding}px`, backgroundColor: bgColor }}\r\n      node=\"button\"\r\n      waves=\"light\"\r\n      icon={<Icon className=\"large\">{icon}</Icon>}\r\n      tooltip={tooltip}\r\n      disabled={disabled}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      style={{ color: \"black\", backgroundColor: \"white\" }}\r\n      bottomSheet={false}\r\n      fixedFooter={false}\r\n      header={modalTitle}\r\n      open={false}\r\n      options={{\r\n        dismissible: true,\r\n        endingTop: \"10%\",\r\n        inDuration: 250,\r\n        opacity: 0.4,\r\n        outDuration: 250,\r\n        preventScrolling: true,\r\n        startingTop: \"4%\",\r\n      }}\r\n      trigger={trigger}\r\n      actions={actions}\r\n    >\r\n      {<div>{modalBody}</div>}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default IconButton;\r\n","import React from \"react\";\r\nimport \"materialize-css\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport IconButton from \"./IconButton\";\r\nimport showToastNotification from \"./showToastNotification\";\r\nimport { getColor } from \"./colorThemes\";\r\n\r\nconst contextEnum = {\r\n  player: \"player\",\r\n  spectator: \"spectator\",\r\n  lobby: \"lobby\"\r\n};\r\n\r\nfunction Header({\r\n  context,\r\n  helpText,\r\n  aboutText,\r\n  joinCode,\r\n  handleLeaveGame,\r\n  isLargeScreen,\r\n  menuTheme,\r\n  isDarkModeOn,\r\n  handleToggleDarkMode,\r\n  handleToggleTheme,\r\n}) {\r\n  let mainText;\r\n  if (context === contextEnum.lobby) {\r\n    mainText = <span>WallWars</span>;\r\n  } else if (context === contextEnum.spectator) {\r\n    mainText = (\r\n      <span style={{ cursor: \"pointer\" }} onClick={handleLeaveGame}>\r\n        WallWars\r\n      </span>\r\n    );\r\n  } else {\r\n    mainText = (\r\n      <span>\r\n        {isLargeScreen && (\r\n          <span style={{ cursor: \"pointer\" }} onClick={handleLeaveGame}>\r\n            WallWars\r\n          </span>\r\n        )}\r\n        {isLargeScreen && <span>&nbsp;</span>}\r\n        <CopyToClipboard\r\n          style={{ cursor: \"pointer\" }}\r\n          text={joinCode}\r\n          onCopy={() => showToastNotification(\"Join code copied to clipboard!\")}\r\n        >\r\n          <span>Code {joinCode}</span>\r\n        </CopyToClipboard>\r\n      </span>\r\n    );\r\n  }\r\n  const padding = isLargeScreen ? 20 : 11;\r\n  const buttonCol = getColor(menuTheme, \"headerButton\", isDarkModeOn);\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          height: \"50px\",\r\n          display: \"grid\",\r\n          gridTemplateRows: \"1fr\",\r\n          gridTemplateColumns: \"auto auto\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          backgroundColor: getColor(menuTheme, \"header\", isDarkModeOn),\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            fontSize: isLargeScreen ? \"30px\" : \"25px\",\r\n            marginLeft: isLargeScreen ? \"15px\" : \"5px\",\r\n          }}\r\n        >\r\n          {mainText}\r\n        </div>\r\n        <div\r\n          style={{\r\n            height: \"auto\",\r\n            display: \"grid\",\r\n            padding: \"5px\",\r\n            gridTemplateColumns: `repeat(${isLargeScreen ? 4 : 3}, 1fr)`,\r\n            gridTemplateRows: `auto`,\r\n            columnGap: \"5px\",\r\n            rowGap: \"5px\",\r\n            marginRight: isLargeScreen ? \"15px\" : \"5px\",\r\n          }}\r\n        >\r\n          {isLargeScreen && (\r\n            <IconButton\r\n              icon={\"color_lens\"}\r\n              tooltip={\"Change theme\"}\r\n              onClick={handleToggleTheme}\r\n              bgColor={buttonCol}\r\n              padding={padding}\r\n              menuTheme={menuTheme}\r\n              isDarkModeOn={isDarkModeOn}\r\n            />\r\n          )}\r\n          <IconButton\r\n            icon={isDarkModeOn ? \"wb_sunny\" : \"brightness_2\"}\r\n            tooltip={\r\n              isDarkModeOn ? \"Turn off night mode\" : \"Turn on night mode\"\r\n            }\r\n            onClick={handleToggleDarkMode}\r\n            bgColor={buttonCol}\r\n            padding={padding}\r\n            menuTheme={menuTheme}\r\n            isDarkModeOn={isDarkModeOn}\r\n          />\r\n          <IconButton\r\n            icon=\"help\"\r\n            tooltip=\"Help\"\r\n            modalTitle=\"Help\"\r\n            modalBody={helpText}\r\n            bgColor={buttonCol}\r\n            padding={padding}\r\n            menuTheme={menuTheme}\r\n            isDarkModeOn={isDarkModeOn}\r\n          />\r\n          {context === contextEnum.lobby && (\r\n            <IconButton\r\n              icon=\"info\"\r\n              tooltip=\"About\"\r\n              modalTitle=\"About\"\r\n              modalBody={aboutText}\r\n              bgColor={buttonCol}\r\n              padding={padding}\r\n              menuTheme={menuTheme}\r\n              isDarkModeOn={isDarkModeOn}\r\n            />\r\n          )}\r\n          {context !== contextEnum.lobby && (\r\n            <IconButton\r\n              icon=\"home\"\r\n              tooltip=\"Leave game\"\r\n              onClick={handleLeaveGame}\r\n              bgColor={buttonCol}\r\n              padding={padding}\r\n              menuTheme={menuTheme}\r\n              isDarkModeOn={isDarkModeOn}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Button, Modal } from \"react-materialize\";\r\n\r\nimport { getColor } from \"./colorThemes\";\r\n\r\nconst Dialog = ({\r\n  title,\r\n  body,\r\n  acceptButtonText, //defaults to Accept\r\n  rejectButtonText, //defaults to Cancel\r\n  isOpen,\r\n  callback, //callback function will receive true or false\r\n  menuTheme,\r\n  isDarkModeOn,\r\n}) => {\r\n  const buttonCol = getColor(menuTheme, \"button\", isDarkModeOn);\r\n  return (\r\n    <Modal\r\n      style={{ color: \"black\", backgroundColor: \"#e0e0e0\" }}\r\n      header={title}\r\n      open={isOpen}\r\n      options={{\r\n        dismissible: false,\r\n        endingTop: \"10%\",\r\n        inDuration: 250,\r\n        opacity: 0.4,\r\n        outDuration: 250,\r\n        preventScrolling: true,\r\n        startingTop: \"4%\",\r\n      }}\r\n      actions={[\r\n        <Button\r\n          style={{\r\n            backgroundColor: buttonCol,\r\n            color: \"white\",\r\n            marginRight: \"1rem\",\r\n          }}\r\n          flat\r\n          modal=\"close\"\r\n          node=\"button\"\r\n          waves=\"green\"\r\n          onClick={() => {\r\n            callback(true);\r\n          }}\r\n        >\r\n          {acceptButtonText || \"Accept\"}\r\n        </Button>,\r\n        <Button\r\n          style={{\r\n            backgroundColor: buttonCol,\r\n            color: \"white\",\r\n          }}\r\n          flat\r\n          modal=\"close\"\r\n          node=\"button\"\r\n          waves=\"green\"\r\n          onClick={() => {\r\n            callback(false);\r\n          }}\r\n        >\r\n          {rejectButtonText || \"Cancel\"}\r\n        </Button>,\r\n      ]}\r\n    >\r\n      {<div>{body}</div>}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import React from \"react\";\r\n\r\nimport { roundNum } from \"../shared/utils\";\r\nimport { getColor } from \"../shared/colorThemes\";\r\n\r\nconst StatusHeader = ({\r\n  names,\r\n  lifeCycleStage,\r\n  winner,\r\n  finishReason,\r\n  indexToMove,\r\n  timeControl,\r\n  creatorStarts,\r\n  isLargeScreen,\r\n  menuTheme,\r\n  isDarkModeOn,\r\n}) => {\r\n  let msg;\r\n  const nameToMove = names[indexToMove];\r\n  const finishMessage = {\r\n    time: \"on time\",\r\n    goal: \"by reaching the goal\",\r\n    resign: \"by resignation\",\r\n    abandon: \"by abandonment\",\r\n  };\r\n  const drawFinishMessage = {\r\n    goal: \"by the 1-move rule\",\r\n    agreement: \"by agreement\",\r\n  };\r\n  switch (lifeCycleStage) {\r\n    case -2:\r\n      msg = \"Haven't tried to connect to the server yet\";\r\n      break;\r\n    case -1:\r\n      msg = \"Waking the server up...\";\r\n      break;\r\n    case 0:\r\n      msg = \"Waiting for player 2 to join\";\r\n      break;\r\n    case 1:\r\n      msg = `${nameToMove} starts`;\r\n      break;\r\n    case 2:\r\n    case 3:\r\n      msg = `${nameToMove} to move`;\r\n      break;\r\n    case 4:\r\n      if (winner === \"draw\")\r\n        msg = \"The game ended in a draw \" + drawFinishMessage[finishReason];\r\n      else\r\n        msg = `${names[winner === \"creator\" ? 0 : 1]} won ${\r\n          finishMessage[finishReason]\r\n        }`;\r\n      break;\r\n    default:\r\n      console.error(\"stage should be in range [-2..4]\");\r\n  }\r\n\r\n  let firstMoveName = \"\";\r\n  if (lifeCycleStage === 0 && creatorStarts) firstMoveName = names[0];\r\n  else if (lifeCycleStage > 0) firstMoveName = names[creatorStarts ? 0 : 1];\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: getColor(menuTheme, \"container\", isDarkModeOn),\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"auto\",\r\n        gridTemplateRows: \"1fr 1fr 1fr\",\r\n        alignItems: \"center\",\r\n        padding: isLargeScreen ? \"15px 15px\" : \"5px 15px\",\r\n        gridArea: \"status\",\r\n      }}\r\n    >\r\n      <div>\r\n        <p>{msg}</p>\r\n      </div>\r\n      <div>\r\n        {timeControl && (\r\n          <p>\r\n            Time control: {roundNum(timeControl.duration)}+\r\n            {roundNum(timeControl.increment)}\r\n          </p>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <p>{\"First move: \" + firstMoveName}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatusHeader;\r\n","import React from \"react\";\r\nimport { getColor } from \"../shared/colorThemes\";\r\n\r\nconst dot = (color, title) => (\r\n  <span\r\n    style={{\r\n      height: \"10px\",\r\n      width: \"10px\",\r\n      backgroundColor: color,\r\n      borderRadius: \"50%\",\r\n      display: \"inline-block\",\r\n      border: \"solid 1px black\",\r\n    }}\r\n    title={title}\r\n  ></span>\r\n);\r\nconst isPresentDot = (isPresent, name) => {\r\n  if (isPresent) return dot(\"#67ff36\", `${name} has the game open`);\r\n  return dot(\"gray\", `${name} does not have the game page open`);\r\n};\r\n\r\nconst TimerHeader = ({\r\n  lifeCycleStage,\r\n  names,\r\n  timeLeft,\r\n  indexToMove,\r\n  isLargeScreen,\r\n  scores,\r\n  arePlayersPresent,\r\n  menuTheme,\r\n  boardTheme,\r\n  isDarkModeOn,\r\n}) => {\r\n  const [min1, min2] = [\r\n    Math.floor(timeLeft[0] / 60),\r\n    Math.floor(timeLeft[1] / 60),\r\n  ];\r\n  const [sec1, sec2] = [timeLeft[0] % 60, timeLeft[1] % 60];\r\n  const timesAsStrings = [\r\n    `${min1}:${sec1 < 10 ? \"0\" : \"\"}${sec1}`,\r\n    `${min2}:${sec2 < 10 ? \"0\" : \"\"}${sec2}`,\r\n  ];\r\n  if (lifeCycleStage < 0) {\r\n    timesAsStrings[0] = \"_:__\";\r\n    timesAsStrings[1] = \"_:__\";\r\n  }\r\n  let pToMove = [false, false];\r\n  if (lifeCycleStage < 4) pToMove[indexToMove] = true;\r\n\r\n  let isLowOnTime = [false, false];\r\n  const lowTimeLimit = 15;\r\n  if (lifeCycleStage === 3) {\r\n    if (indexToMove === 0) {\r\n      if (timeLeft[0] < lowTimeLimit) isLowOnTime[0] = true;\r\n    } else if (indexToMove === 1) {\r\n      if (timeLeft[1] < lowTimeLimit) isLowOnTime[1] = true;\r\n    }\r\n  }\r\n\r\n  const showScores = scores[0] !== 0 || scores[1] !== 0;\r\n  let sep;\r\n  if (isLargeScreen && !showScores) sep = \"15px\";\r\n  else if (isLargeScreen && showScores) sep = \"12px\";\r\n  else if (!isLargeScreen && !showScores) sep = \"8px\";\r\n  else sep = \"6px\";\r\n  const fontSize = isLargeScreen ? \"18px\" : \"14px\";\r\n  const childStyle = {\r\n    padding: sep,\r\n    fontSize: fontSize,\r\n  };\r\n\r\n  const [timer1, timer2, timerBg, lowTimeCol] = [\r\n    getColor(boardTheme, \"timer1\", isDarkModeOn),\r\n    getColor(boardTheme, \"timer2\", isDarkModeOn),\r\n    getColor(menuTheme, \"container\", isDarkModeOn),\r\n    getColor(boardTheme, \"lowTime\", isDarkModeOn),\r\n  ];\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: getColor(menuTheme, \"container\", isDarkModeOn),\r\n        display: \"grid\",\r\n        gridTemplateColumns: showScores\r\n          ? \"0.5fr 1.7fr 0.2fr 1fr 1fr 0.2fr 1.7fr 0.5fr\"\r\n          : \"1.7fr 0.2fr 1fr 1fr 0.2fr 1.7fr\",\r\n        gridTemplateRows: \"auto\",\r\n        alignContent: \"center\",\r\n        columnGap: sep,\r\n        padding: sep,\r\n        gridArea: \"timer\",\r\n      }}\r\n    >\r\n      {showScores && (\r\n        <div style={childStyle} className={\"center\"}>\r\n          {scores[0]}\r\n        </div>\r\n      )}\r\n      <div\r\n        style={{\r\n          padding: sep,\r\n          fontSize: fontSize,\r\n          backgroundColor: pToMove[0] ? timer1 : timerBg,\r\n        }}\r\n        className={\"center truncate\" + (pToMove[0] ? \" z-depth-2\" : \"\")}\r\n      >\r\n        {names[0]}\r\n      </div>\r\n      <div style={childStyle} className={\"center\"}>\r\n        {isPresentDot(arePlayersPresent[0], names[0])}\r\n      </div>\r\n      <div\r\n        style={{\r\n          padding: sep,\r\n          fontSize: fontSize,\r\n          backgroundColor: isLowOnTime[0] ? lowTimeCol : timerBg,\r\n        }}\r\n        className={\"center\" + (isLowOnTime[0] ? \" z-depth-2\" : \"\")}\r\n      >\r\n        {timesAsStrings[0]}\r\n      </div>\r\n      <div\r\n        style={{\r\n          padding: sep,\r\n          fontSize: fontSize,\r\n          backgroundColor: isLowOnTime[1] ? lowTimeCol : timerBg,\r\n        }}\r\n        className={\"center\" + (isLowOnTime[1] ? \" z-depth-2\" : \"\")}\r\n      >\r\n        {timesAsStrings[1]}\r\n      </div>\r\n      <div style={childStyle} className={\"center\"}>\r\n        {isPresentDot(arePlayersPresent[1], names[1])}\r\n      </div>\r\n      <div\r\n        style={{\r\n          padding: sep,\r\n          fontSize: fontSize,\r\n          backgroundColor: pToMove[1] ? timer2 : timerBg,\r\n        }}\r\n        className={\"center truncate\" + (pToMove[1] ? \" z-depth-2\" : \"\")}\r\n      >\r\n        {names[1] === null ? \"______\" : names[1]}\r\n      </div>\r\n      {showScores && (\r\n        <div style={childStyle} className={\"center\"}>\r\n          {scores[1]}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimerHeader;\r\n","import React from \"react\";\r\n\r\nconst gameHelp = (\r\n  <div>\r\n    <h6>\r\n      To connect with your friend, share the game code in the top header with\r\n      them and tell them to use it when clicking \"Join Game\" from the lobby.\r\n      Click on the code to copy it to the clipboard.\r\n    </h6>\r\n    <h6>Rules of the game:</h6>\r\n    <h6>\r\n      The player who creates the game starts at the top left corner (color red).\r\n      The player who joins the game starts at the top right (color blue). The\r\n      goal of each player is to reach the <em>opposite</em> corner from where\r\n      they start. The player who gets there first wins.\r\n    </h6>\r\n    <h6>\r\n      Players move by clicking cells on the board. There are two types of cells:\r\n      ground cells (the big squares) and walls (the thin rectangles in between\r\n      ground cells). Each move consists of a total of two actions. One action\r\n      can be building one wall or moving to an adjacent cell. A diagonal move\r\n      counts as two actions.\r\n    </h6>\r\n    <h6>\r\n      Players can build walls to obstruct the opponent. Walls can be built\r\n      anywhere as long as there always exists at least one way to get to their\r\n      goal. You cannot go through your own walls either.\r\n    </h6>\r\n    <h6>\r\n      The remaining time for each player is shown next to their name. The clock\r\n      of a player ticks down when it is their turn (after each player has moved\r\n      once). The player who starts is chosen randomly. The name of the player to\r\n      move next is highlighted with their color.\r\n    </h6>\r\n    <h6>\r\n      If it is your turn and you do a single action, like building a wall or\r\n      moving to an adjacent cell, you can undo it by clicking the wall again or\r\n      clicking a different ground cell, respectively. Once you choose 2 actions,\r\n      the move becomes permanent.\r\n    </h6>\r\n    <h6>\r\n      During the opponent's turn, you can <em>premove</em>, meaning choose a\r\n      move that will be applied instantaneously when it is your turn.\r\n    </h6>\r\n    <h6>\r\n      Starter handicap rule: If the player who moved first reaches the goal first but the other\r\n      player is at distance 1 or 2 from their goal, the game ends in a draw.\r\n    </h6>\r\n    <h6>\r\n      If you leave the game, you will be able to reenter this game as long as\r\n      you don't create or join a new game.\r\n    </h6>\r\n  </div>\r\n);\r\n\r\nexport default gameHelp;\r\n","import React from \"react\";\r\nimport { Table } from \"react-materialize\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nimport { moveNotation } from \"../shared/gameLogicUtils\";\r\nimport { getColor } from \"../shared/colorThemes\";\r\nimport hoverHighlight from \"../shared/hoverHighlight.module.css\";\r\n\r\nconst moveToString = (move) => {\r\n  if (move.index === 0) return \"_______\";\r\n  return moveNotation(move.actions);\r\n};\r\n\r\nconst tdStyle = {\r\n  paddingTop: \"0.15rem\",\r\n  paddingBottom: \"0.15rem\",\r\n  borderRadius: \"0\",\r\n};\r\n\r\nconst MoveHistory = ({\r\n  moveHistory,\r\n  creatorStarts,\r\n  handleViewMove,\r\n  viewIndex,\r\n  height,\r\n  menuTheme,\r\n  boardTheme,\r\n  isDarkModeOn,\r\n}) => {\r\n  const canHover = !useMediaQuery({ query: \"(hover: none)\" });\r\n  const [col1, col2, colBg, colSelected] = [\r\n    getColor(boardTheme, \"move1\", isDarkModeOn),\r\n    getColor(boardTheme, \"move2\", isDarkModeOn),\r\n    getColor(menuTheme, \"container\", isDarkModeOn),\r\n    getColor(boardTheme, \"currentMove\", isDarkModeOn),\r\n  ];\r\n  const headEntryStyle = {\r\n    position: \"sticky\",\r\n    top: \"0px\",\r\n    paddingTop: \"0.15rem\",\r\n    paddingBottom: \"0.15rem\",\r\n    borderRadius: \"0\",\r\n    backgroundColor: colBg,\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id={\"movehistory\"}\r\n      className={\"center\"}\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        display: \"block\",\r\n        height: height,\r\n        MozUserSelect: \"none\",\r\n        WebkitUserSelect: \"none\",\r\n        msUserSelect: \"none\",\r\n        userSelect: \"none\",\r\n      }}\r\n    >\r\n      <Table centered style={{ width: \"100%\" }}>\r\n        <thead>\r\n          <tr>\r\n            <th style={headEntryStyle}>#</th>\r\n            <th style={headEntryStyle}>Move</th>\r\n            <th style={headEntryStyle}>Distance</th>\r\n            <th style={headEntryStyle}># Walls</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {moveHistory.map((move, i) => {\r\n            let bgColor;\r\n            if (viewIndex === i && i < moveHistory.length - 1) {\r\n              bgColor = colSelected;\r\n            } else if (i === 0) {\r\n              bgColor = colBg;\r\n            } else {\r\n              const playerIdx = 1 + ((i + (creatorStarts ? 1 : 0)) % 2);\r\n              bgColor = playerIdx === 1 ? col1 : col2;\r\n            }\r\n            return (\r\n              <tr\r\n                onClick={() => handleViewMove(i)}\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  backgroundColor: bgColor,\r\n                }}\r\n                className={canHover ? hoverHighlight.hoveredMode : undefined}\r\n                key={i}\r\n              >\r\n                <td style={tdStyle}>{i}</td>\r\n                <td style={tdStyle}>{moveToString(move)}</td>\r\n                <td style={tdStyle}>\r\n                  {move.distances[0] + \" - \" + move.distances[1]}\r\n                </td>\r\n                <td style={tdStyle}>\r\n                  {move.wallCounts[0] + \" - \" + move.wallCounts[1]}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoveHistory;\r\n","import React from \"react\";\r\n\r\nimport MoveHistory from \"./MoveHistory\";\r\nimport IconButton from \"./../shared/IconButton\";\r\nimport showToastNotification from \"../shared/showToastNotification\";\r\nimport { getColor } from \"../shared/colorThemes\";\r\n\r\nconst GameControlPanel = ({\r\n  lifeCycleStage,\r\n  handleResign,\r\n  handleOfferDraw,\r\n  handleRequestTakeback,\r\n  handleGiveExtraTime,\r\n  moveHistory,\r\n  clientRole,\r\n  creatorStarts,\r\n  handleViewMove,\r\n  viewIndex,\r\n  turnCount,\r\n  handleSeeFirstMove,\r\n  handleSeePreviousMove,\r\n  handleSeeNextMove,\r\n  handleSeeLastMove,\r\n  handleToggleVolume,\r\n  isVolumeOn,\r\n  handleLeaveGame,\r\n  handleIncreaseBoardSize,\r\n  handleDecreaseBoardSize,\r\n  zoomLevel,\r\n  controlPanelHeight,\r\n  isOpponentPresent,\r\n  menuTheme,\r\n  boardTheme,\r\n  isDarkModeOn,\r\n}) => {\r\n  const padding = 5;\r\n  const gapHeight = 5;\r\n  const buttonHeight = 36;\r\n  const moveHistoryHeight =\r\n    controlPanelHeight - buttonHeight * 3 - gapHeight * 3 - padding * 2;\r\n\r\n  const takebackEnabled =\r\n    lifeCycleStage === 3 ||\r\n    (lifeCycleStage === 2 && creatorStarts === (clientRole === \"creator\"));\r\n\r\n  //all game functions are disabled for spectator\r\n  const isSpectator = clientRole === \"spectator\";\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: getColor(menuTheme, \"container\", isDarkModeOn),\r\n        width: \"100%\",\r\n        height: \"auto\",\r\n        display: \"grid\",\r\n        padding: `${padding}px`,\r\n        gridTemplateColumns: \"repeat(4, 1fr)\",\r\n        gridTemplateRows: `${buttonHeight}px 1fr ${buttonHeight}px ${buttonHeight}px`,\r\n        columnGap: `${gapHeight}px`,\r\n        rowGap: `${gapHeight}px`,\r\n        gridArea: \"panel\",\r\n      }}\r\n    >\r\n      <IconButton\r\n        icon={\"flag\"}\r\n        tooltip={\"Resign\"}\r\n        modalTitle={\"Resign\"}\r\n        modalBody={\"Are you sure you want to resign?\"}\r\n        modalConfirmButtonText={\"Resign\"}\r\n        onClick={handleResign}\r\n        disabled={isSpectator || lifeCycleStage !== 3}\r\n        menuTheme={menuTheme}\r\n        isDarkModeOn={isDarkModeOn}\r\n      />\r\n      <IconButton\r\n        icon={\"local_florist\"}\r\n        tooltip={\"Offer Draw\"}\r\n        modalTitle={\"Offer Draw\"}\r\n        modalBody={\"Are you sure you want to offer a draw?\"}\r\n        modalConfirmButtonText={\"Offer draw\"}\r\n        onClick={handleOfferDraw}\r\n        disabled={isSpectator || !isOpponentPresent || lifeCycleStage !== 3}\r\n        menuTheme={menuTheme}\r\n        isDarkModeOn={isDarkModeOn}\r\n      />\r\n      <IconButton\r\n        icon={\"replay\"}\r\n        tooltip={\"Request takeback\"}\r\n        onClick={() => {\r\n          showToastNotification(\r\n            \"A takeback request was sent to the opponent.\",\r\n            5000\r\n          );\r\n          handleRequestTakeback();\r\n        }}\r\n        disabled={isSpectator || !isOpponentPresent || !takebackEnabled}\r\n        menuTheme={menuTheme}\r\n        isDarkModeOn={isDarkModeOn}\r\n      />\r\n      <IconButton\r\n        icon={\"add_alarm\"}\r\n        tooltip={\"Give 60 seconds\"}\r\n        onClick={() => {\r\n          showToastNotification(\"You added 60s to the opponent's clock.\", 5000);\r\n          handleGiveExtraTime();\r\n        }}\r\n        disabled={isSpectator || lifeCycleStage !== 3}\r\n        menuTheme={menuTheme}\r\n        isDarkModeOn={isDarkModeOn}\r\n      />\r\n      <div style={{ gridColumnStart: \"1\", gridColumnEnd: \"5\" }}>\r\n        <MoveHistory\r\n          moveHistory={moveHistory}\r\n          creatorStarts={creatorStarts}\r\n          handleViewMove={handleViewMove}\r\n          viewIndex={viewIndex}\r\n          height={moveHistoryHeight}\r\n          menuTheme={menuTheme}\r\n          boardTheme={boardTheme}\r\n          isDarkModeOn={isDarkModeOn}\r\n        />\r\n      </div>\r\n      <IconButton\r\n        icon={\"fast_rewind\"}\r\n        onClick={handleSeeFirstMove}\r\n        disabled={lifeCycleStage <= 1 || viewIndex === 0}\r\n        menuTheme={menuTheme}\r\n        isDarkModeOn={isDarkModeOn}\r\n      />\r\n      <IconButton\r\n        icon={\"navigate_before\"}\r\n        onClick={handleSeePreviousMove}\r\n        disabled={lifeCycleStage <= 1 || viewIndex === 0}\r\n        menuTheme={menuTheme}\r\n        isDarkModeOn={isDarkModeOn}\r\n      />\r\n      <IconButton\r\n        icon={\"navigate_next\"}\r\n        onClick={handleSeeNextMove}\r\n        disabled={lifeCycleStage <= 1 || viewIndex === turnCount}\r\n        menuTheme={menuTheme}\r\n        isDarkModeOn={isDarkModeOn}\r\n      />\r\n      <IconButton\r\n        icon={\"fast_forward\"}\r\n        onClick={handleSeeLastMove}\r\n        disabled={lifeCycleStage <= 1 || viewIndex === turnCount}\r\n        menuTheme={menuTheme}\r\n        isDarkModeOn={isDarkModeOn}\r\n      />\r\n      <IconButton\r\n        icon={isVolumeOn ? \"volume_up\" : \"volume_off\"}\r\n        tooltip={\r\n          isVolumeOn ? \"Turn off sound effects\" : \"Turn on sound effects\"\r\n        }\r\n        onClick={handleToggleVolume}\r\n        disabled={isSpectator}\r\n        menuTheme={menuTheme}\r\n        isDarkModeOn={isDarkModeOn}\r\n      />\r\n      <IconButton\r\n        icon={\"zoom_out\"}\r\n        tooltip={\"Decrease board size\"}\r\n        onClick={handleDecreaseBoardSize}\r\n        disabled={zoomLevel === 0}\r\n        menuTheme={menuTheme}\r\n        isDarkModeOn={isDarkModeOn}\r\n      />\r\n      <IconButton\r\n        icon={\"zoom_in\"}\r\n        tooltip={\"Increase board size\"}\r\n        onClick={handleIncreaseBoardSize}\r\n        disabled={zoomLevel === 10}\r\n        menuTheme={menuTheme}\r\n        isDarkModeOn={isDarkModeOn}\r\n      />\r\n      <IconButton\r\n        icon=\"home\"\r\n        tooltip=\"Return to lobby\"\r\n        onClick={handleLeaveGame}\r\n        menuTheme={menuTheme}\r\n        isDarkModeOn={isDarkModeOn}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameControlPanel;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Row, Col } from \"react-materialize\";\r\nimport { useImmer } from \"use-immer\";\r\nimport UIfx from \"uifx\";\r\nimport moveSoundAudio from \"./../static/moveSound.mp3\";\r\nimport showToastNotification from \"../shared/showToastNotification\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nimport { cellSizes, maxBoardDims } from \"../shared/globalSettings\";\r\nimport {\r\n  roleEnum,\r\n  turnCount,\r\n  creatorToMove,\r\n  indexToMove,\r\n  ghostType,\r\n  isOpponentPresent,\r\n  createInitialState,\r\n  applyAddCreator,\r\n  applyAddJoiner,\r\n  applyCreatedOnServer,\r\n  applyJoinedOnServer,\r\n  applyJoinerJoined,\r\n  applyReturnToGame,\r\n  applyReceivedGame,\r\n  applyMove,\r\n  applySelectedCell,\r\n  applyDrawGame,\r\n  applyResignGame,\r\n  applyAbandonGame,\r\n  applyTakeback,\r\n  applySetupRematch,\r\n  applyAddExtraTime,\r\n  applyClockTick,\r\n  getTracePos,\r\n  creatorToMoveAtIndex,\r\n} from \"./gameState\";\r\n\r\nimport Board from \"./Board\";\r\nimport Header from \"../shared/Header\";\r\nimport Dialog from \"../shared/Dialog\";\r\nimport StatusHeader from \"./StatusHeader\";\r\nimport TimerHeader from \"./TimerHeader\";\r\nimport gameHelp from \"./gameHelp\";\r\nimport ControlPanel from \"./ControlPanel\";\r\nimport { getColor } from \"../shared/colorThemes\";\r\nimport { cellEnum } from \"../shared/gameLogicUtils\";\r\n\r\nconst moveSound = new UIfx(moveSoundAudio);\r\nconst playMoveSound = () => {\r\n  moveSound.play();\r\n};\r\n\r\nconst GamePage = ({\r\n  socket,\r\n  //clientParams contains 'clientRole' as well as other fields\r\n  //that are needed depending on the client role\r\n  clientParams,\r\n  isLargeScreen,\r\n  boardTheme,\r\n  handleReturnToLobby,\r\n  handleToggleDarkMode,\r\n  handleToggleTheme,\r\n  handleSetCookieId,\r\n}) => {\r\n  const menuTheme = clientParams.menuTheme;\r\n  const isDarkModeOn = clientParams.isDarkModeOn;\r\n\r\n  //cosmetic state stored between sessions\r\n  const [cookies, setCookie] = useCookies([\"isVolumeOn\", \"zoomLevel\"]);\r\n\r\n  //the 'state' object contains every other piece of state\r\n  const [state, updateState] = useImmer(createInitialState(cookies));\r\n\r\n  //===================================================\r\n  //communication FROM the server\r\n  //===================================================\r\n  useEffect(() => {\r\n    socket.once(\"gameCreated\", ({ joinCode, creatorStarts, cookieId }) => {\r\n      handleSetCookieId(cookieId);\r\n      updateState((draftState) => {\r\n        applyCreatedOnServer(draftState, joinCode, creatorStarts);\r\n      });\r\n    });\r\n    socket.once(\r\n      \"gameJoined\",\r\n      ({\r\n        creatorName,\r\n        creatorToken,\r\n        timeControl,\r\n        boardSettings,\r\n        creatorStarts,\r\n        cookieId,\r\n        creatorPresent,\r\n      }) => {\r\n        handleSetCookieId(cookieId);\r\n        updateState((draftState) => {\r\n          applyJoinedOnServer(\r\n            draftState,\r\n            creatorName,\r\n            creatorToken,\r\n            timeControl,\r\n            boardSettings,\r\n            creatorStarts,\r\n            creatorPresent\r\n          );\r\n        });\r\n      }\r\n    );\r\n    socket.once(\"requestedGame\", ({ game }) => {\r\n      updateState((draftState) => {\r\n        applyReceivedGame(draftState, game);\r\n      });\r\n    });\r\n    socket.on(\"returnedToOngoingGame\", ({ ongoingGame, timeLeft }) => {\r\n      updateState((draftState) => {\r\n        applyReturnToGame(\r\n          draftState,\r\n          clientParams.cookieId,\r\n          ongoingGame,\r\n          timeLeft\r\n        );\r\n        draftState.waitingForPing = 0;\r\n      });\r\n    });\r\n    socket.on(\"opponentReturned\", () => {\r\n      updateState((draftState) => {\r\n        draftState.arePlayersPresent[\r\n          draftState.clientRole === roleEnum.creator ? 1 : 0\r\n        ] = true;\r\n        draftState.waitingForPing = 0;\r\n      });\r\n    });\r\n    socket.on(\"ongoingGameNotFound\", () => {\r\n      showToastNotification(\"Couldn't find the game anymore.\", 5000);\r\n      handleReturnToLobby();\r\n    });\r\n    socket.on(\"gameJoinFailed\", () => {\r\n      showToastNotification(\r\n        \"There is no game with this code waiting for someone to join.\",\r\n        5000\r\n      );\r\n      handleReturnToLobby();\r\n    });\r\n    socket.on(\"joinSelfGameFailed\", () => {\r\n      showToastNotification(\r\n        \"You cannot play against yourself. To play as both sides from the same browser, play one of the sides from an Incognito window.\",\r\n        12000\r\n      );\r\n      handleReturnToLobby();\r\n    });\r\n    socket.on(\"gameNotFoundError\", () => {\r\n      showToastNotification(\r\n        \"There was an issue on the server and we couldn't reach the other player.\",\r\n        5000\r\n      );\r\n      updateState((draftState) => {\r\n        draftState.waitingForPing = 0;\r\n      });\r\n    });\r\n    socket.once(\"joinerJoined\", ({ joinerName, joinerToken }) => {\r\n      updateState((draftState) => {\r\n        if (draftState.lifeCycleStage === 1) return;\r\n        draftState.shouldPlaySound = true;\r\n        applyJoinerJoined(draftState, joinerName, joinerToken);\r\n        draftState.arePlayersPresent[1] = true;\r\n        draftState.waitingForPing = 0;\r\n      });\r\n    });\r\n\r\n    socket.on(\"drawOffered\", () => {\r\n      updateState((draftState) => {\r\n        draftState.showDrawDialog = true;\r\n        draftState.waitingForPing = 0;\r\n      });\r\n    });\r\n    socket.on(\"drawRejected\", () => {\r\n      showToastNotification(\"The opponent declined the draw offer.\", 5000);\r\n      updateState((draftState) => {\r\n        draftState.waitingForPing = 0;\r\n      });\r\n    });\r\n    socket.on(\"drawAccepted\", () => {\r\n      showToastNotification(\"The opponent accepted the draw offer.\", 5000);\r\n      updateState((draftState) => {\r\n        applyDrawGame(draftState, \"agreement\");\r\n        draftState.waitingForPing = 0;\r\n      });\r\n    });\r\n    socket.on(\"takebackRequested\", () => {\r\n      updateState((draftState) => {\r\n        draftState.showTakebackDialog = true;\r\n        draftState.waitingForPing = 0;\r\n      });\r\n    });\r\n    socket.on(\"takebackRejected\", () => {\r\n      showToastNotification(\r\n        \"The opponent declined the takeback request.\",\r\n        5000\r\n      );\r\n      updateState((draftState) => {\r\n        draftState.waitingForPing = 0;\r\n      });\r\n    });\r\n    socket.on(\"takebackAccepted\", () => {\r\n      showToastNotification(\"The opponent agreed to the takeback.\", 5000);\r\n      updateState((draftState) => {\r\n        const requesterIsCreator = draftState.clientRole === roleEnum.creator;\r\n        applyTakeback(draftState, requesterIsCreator);\r\n        draftState.waitingForPing = 0;\r\n      });\r\n    });\r\n    socket.on(\"rematchOffered\", () => {\r\n      updateState((draftState) => {\r\n        draftState.showRematchDialog = true;\r\n        draftState.waitingForPing = 0;\r\n      });\r\n    });\r\n    socket.on(\"rematchRejected\", () => {\r\n      showToastNotification(\"The opponent declined the rematch offer.\", 5000);\r\n      updateState((draftState) => {\r\n        draftState.waitingForPing = 0;\r\n      });\r\n    });\r\n    socket.on(\"rematchAccepted\", () => {\r\n      showToastNotification(\"The opponent accepted the rematch offer.\", 5000);\r\n      updateState((draftState) => {\r\n        draftState.shouldPlaySound = true;\r\n        applySetupRematch(draftState);\r\n        draftState.waitingForPing = 0;\r\n      });\r\n    });\r\n    socket.on(\"extraTimeReceived\", () => {\r\n      showToastNotification(\"The opponent added 60s to your clock.\", 5000);\r\n      updateState((draftState) => {\r\n        const playerIndex = draftState.clientRole === roleEnum.creator ? 0 : 1;\r\n        applyAddExtraTime(draftState, playerIndex);\r\n        draftState.waitingForPing = 0;\r\n      });\r\n    });\r\n    socket.on(\"resigned\", () => {\r\n      showToastNotification(\"The opponent resigned.\", 5000);\r\n      updateState((draftState) => {\r\n        draftState.shouldPlaySound = true;\r\n        const resignerIsCreator = draftState.clientRole !== roleEnum.creator;\r\n        applyResignGame(draftState, resignerIsCreator);\r\n        draftState.waitingForPing = 0;\r\n      });\r\n    });\r\n    socket.on(\"moved\", ({ actions, moveIndex, remainingTime }) => {\r\n      updateState((draftState) => {\r\n        draftState.shouldPlaySound = true;\r\n        applyMove(draftState, actions, remainingTime, moveIndex);\r\n        draftState.waitingForPing = 0;\r\n      });\r\n    });\r\n    socket.on(\"leftGame\", () => {\r\n      updateState((draftState) => {\r\n        draftState.arePlayersPresent[\r\n          draftState.clientRole === roleEnum.creator ? 1 : 0\r\n        ] = false;\r\n        draftState.waitingForPing = 0;\r\n      });\r\n    });\r\n    socket.on(\"abandonedGame\", () => {\r\n      showToastNotification(\"The opponent abandoned the game.\", 5000);\r\n      updateState((draftState) => {\r\n        const abandonerIsCreator =\r\n          draftState.clientRole === roleEnum.creator ? false : true;\r\n        applyAbandonGame(draftState, abandonerIsCreator);\r\n        draftState.waitingForPing = 0;\r\n      });\r\n    });\r\n    socket.on(\"pongFromServer\", () => {\r\n      updateState((draftState) => {\r\n        draftState.waitingForPing = 0;\r\n      });\r\n    });\r\n    return () => {\r\n      socket.removeAllListeners();\r\n    };\r\n  }, [\r\n    socket,\r\n    updateState,\r\n    handleReturnToLobby,\r\n    handleSetCookieId,\r\n    clientParams.cookieId,\r\n  ]);\r\n\r\n  //===================================================\r\n  //communication TO the server\r\n  //===================================================\r\n  //first contact to server\r\n  useEffect(() => {\r\n    //first contact only from lifecycle stage -2\r\n    if (state.lifeCycleStage !== -2) return;\r\n    if (clientParams.clientRole === roleEnum.creator) {\r\n      updateState((draftState) => {\r\n        applyAddCreator(\r\n          draftState,\r\n          clientParams.timeControl,\r\n          clientParams.boardSettings,\r\n          clientParams.playerName,\r\n          clientParams.token\r\n        );\r\n        draftState.arePlayersPresent[0] = true;\r\n      });\r\n      socket.emit(\"createGame\", {\r\n        name: clientParams.playerName,\r\n        token: clientParams.token,\r\n        timeControl: clientParams.timeControl,\r\n        boardSettings: clientParams.boardSettings,\r\n        cookieId: clientParams.cookieId,\r\n        isPublic: clientParams.isPublic,\r\n      });\r\n    } else if (clientParams.clientRole === roleEnum.joiner) {\r\n      updateState((draftState) => {\r\n        applyAddJoiner(\r\n          draftState,\r\n          clientParams.joinCode,\r\n          clientParams.playerName,\r\n          clientParams.token\r\n        );\r\n        draftState.arePlayersPresent[1] = true;\r\n      });\r\n      socket.emit(\"joinGame\", {\r\n        joinCode: clientParams.joinCode,\r\n        name: clientParams.playerName,\r\n        token: clientParams.token,\r\n        cookieId: clientParams.cookieId,\r\n      });\r\n    } else if (clientParams.clientRole === roleEnum.spectator) {\r\n      socket.emit(\"getGame\", { gameId: clientParams.watchGameId });\r\n    } else if (clientParams.clientRole === roleEnum.returner) {\r\n      socket.emit(\"returnToOngoingGame\", { cookieId: clientParams.cookieId });\r\n    } else {\r\n      console.error(\"unknown client role\", clientParams.clientRole);\r\n    }\r\n  });\r\n\r\n  const handleLeaveGame = () => {\r\n    socket.emit(\"leaveGame\");\r\n    handleReturnToLobby();\r\n  };\r\n  const handleSendRematchOffer = () => {\r\n    socket.emit(\"offerRematch\");\r\n  };\r\n  const handleAnswerRematchOffer = (accepted) => {\r\n    if (accepted) {\r\n      socket.emit(\"acceptRematch\");\r\n      updateState((draftState) => {\r\n        applySetupRematch(draftState);\r\n      });\r\n    } else {\r\n      socket.emit(\"rejectRematch\");\r\n      updateState((draftState) => {\r\n        draftState.showRematchDialog = false;\r\n      });\r\n    }\r\n  };\r\n  const handleOfferDraw = () => {\r\n    socket.emit(\"offerDraw\");\r\n  };\r\n  const handleAnswerDrawOffer = (accepted) => {\r\n    if (accepted) {\r\n      socket.emit(\"acceptDraw\");\r\n      updateState((draftState) => {\r\n        applyDrawGame(draftState, \"agreement\");\r\n      });\r\n    } else {\r\n      socket.emit(\"rejectDraw\");\r\n      updateState((draftState) => {\r\n        draftState.showDrawDialog = false;\r\n      });\r\n    }\r\n  };\r\n  const handleRequestTakeback = () => {\r\n    socket.emit(\"requestTakeback\");\r\n  };\r\n  const handleAnswerTakebackRequest = (accepted) => {\r\n    if (accepted) {\r\n      showToastNotification(\r\n        \"The last move played on the board has been undone.\",\r\n        5000\r\n      );\r\n      socket.emit(\"acceptTakeback\");\r\n      updateState((draftState) => {\r\n        const requesterIsCreator = draftState.clientRole === roleEnum.joiner;\r\n        applyTakeback(draftState, requesterIsCreator);\r\n      });\r\n    } else {\r\n      socket.emit(\"rejectTakeback\");\r\n      updateState((draftState) => {\r\n        draftState.showTakebackDialog = false;\r\n      });\r\n    }\r\n  };\r\n  const handleGiveExtraTime = () => {\r\n    socket.emit(\"giveExtraTime\");\r\n    updateState((draftState) => {\r\n      const receiverIndex = draftState.clientRole === roleEnum.creator ? 1 : 0;\r\n      applyAddExtraTime(draftState, receiverIndex);\r\n    });\r\n  };\r\n  const handleResign = () => {\r\n    socket.emit(\"resign\");\r\n    updateState((draftState) => {\r\n      applyResignGame(draftState, draftState.clientRole === roleEnum.creator);\r\n    });\r\n  };\r\n\r\n  //===================================================\r\n  //sound logic\r\n  //===================================================\r\n  useEffect(() => {\r\n    if (state.isVolumeOn && state.shouldPlaySound) {\r\n      playMoveSound();\r\n      updateState((draftState) => {\r\n        draftState.shouldPlaySound = false;\r\n      });\r\n    }\r\n  }, [updateState, state.isVolumeOn, state.shouldPlaySound]);\r\n\r\n  //===================================================\r\n  //timers logic\r\n  //===================================================\r\n  //timer interval to update clocks every second\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      updateState((draftState) => {\r\n        applyClockTick(draftState);\r\n      });\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, [updateState]);\r\n\r\n  //===================================================\r\n  //ping logic\r\n  //===================================================\r\n  useEffect(() => {\r\n    const pingInterval = 5000;\r\n    const interval = setInterval(() => {\r\n      if (state.lifeCycleStage !== 3) return;\r\n      if (state.waitingForPing === 1) {\r\n        socket.emit(\"pingServer\");\r\n      } else if (state.waitingForPing === 2) {\r\n        showToastNotification(\r\n          \"The server is not responding. The game is probably lost. Sorry for the inconvenience.\",\r\n          8000\r\n        );\r\n      }\r\n      updateState((draftState) => {\r\n        draftState.waitingForPing = (draftState.waitingForPing + 1) % 3;\r\n      });\r\n    }, pingInterval);\r\n    return () => clearInterval(interval);\r\n  }, [socket, state.lifeCycleStage, state.waitingForPing, updateState]);\r\n\r\n  //===================================================\r\n  //game logic when a player selects a board cell\r\n  //===================================================\r\n  //manage the state change on click or keyboard press. this may\r\n  //change the ghost action (which is only shown to this client), or\r\n  //make a full move, in which case it is also sent to the other client\r\n  const handleSelectedCell = (pos) => {\r\n    updateState((draftState) => {\r\n      const clientToMove =\r\n        creatorToMove(draftState) ===\r\n        (draftState.clientRole === roleEnum.creator);\r\n      applySelectedCell(draftState, pos, clientToMove);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (state.moveToSend) {\r\n      socket.emit(\"move\", state.moveToSend);\r\n      updateState((draftState) => {\r\n        draftState.moveToSend = null;\r\n      });\r\n    }\r\n  });\r\n\r\n  //notify server if someone has won by reaching the goal or on time\r\n  //this is necessary because the server does not run its own clock\r\n  //and does not understand the rules of the game\r\n  useEffect(() => {\r\n    if (state.clientRole === roleEnum.spectator) return;\r\n    if (state.finishReason === \"goal\") {\r\n      socket.emit(\"playerReachedGoal\", { winner: state.winner });\r\n    }\r\n    if (state.finishReason === \"time\") {\r\n      socket.emit(\"playerWonOnTime\", { winner: state.winner });\r\n    }\r\n  }, [socket, state.clientRole, state.winner, state.finishReason]);\r\n\r\n  const handleBoardClick = (clickedPos) => handleSelectedCell(clickedPos);\r\n\r\n  //===================================================\r\n  //handling keyboard inputs\r\n  //===================================================\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", downHandler);\r\n    window.addEventListener(\"keyup\", upHandler);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", downHandler);\r\n      window.removeEventListener(\"keyup\", upHandler);\r\n    };\r\n  });\r\n  const downHandler = ({ key }) => {\r\n    //mechanism to avoid double-counting\r\n    if (state.isKeyPressed) return;\r\n    updateState((draftState) => {\r\n      draftState.isKeyPressed = true;\r\n    });\r\n    if (key === \"m\") {\r\n      handleToggleVolume();\r\n      return;\r\n    }\r\n\r\n    //if the user is not looking at the latest position,\r\n    //or if the game is over, arrows are used to navigate\r\n    if (state.viewIndex < turnCount(state) || state.lifeCycleStage === 4) {\r\n      if (key === \"ArrowDown\" || key === \"ArrowRight\") {\r\n        if (state.viewIndex < turnCount(state)) {\r\n          updateState((draftState) => {\r\n            draftState.viewIndex += 1;\r\n          });\r\n        }\r\n      } else if (key === \"ArrowUp\" || key === \"ArrowLeft\") {\r\n        if (state.viewIndex > 0) {\r\n          updateState((draftState) => {\r\n            draftState.viewIndex -= 1;\r\n          });\r\n        }\r\n      }\r\n      return;\r\n    }\r\n    //normal case: use arrow keys to move the player token\r\n    let p;\r\n    if (state.ghostAction && ghostType(state.ghostAction) === cellEnum.ground)\r\n      p = state.ghostAction;\r\n    else {\r\n      const tc = turnCount(state);\r\n      p = state.moveHistory[tc].playerPos[indexToMove(state)];\r\n    }\r\n    if (key === \"ArrowDown\") p = [p[0] + 2, p[1]];\r\n    else if (key === \"ArrowUp\") p = [p[0] - 2, p[1]];\r\n    else if (key === \"ArrowLeft\") p = [p[0], p[1] - 2];\r\n    else if (key === \"ArrowRight\") p = [p[0], p[1] + 2];\r\n    else return;\r\n    handleSelectedCell(p);\r\n  };\r\n  const upHandler = () => {\r\n    updateState((draftState) => {\r\n      draftState.isKeyPressed = false;\r\n    });\r\n  };\r\n\r\n  //===================================================\r\n  //logic related to navigating through the move history\r\n  //===================================================\r\n  const handleViewMove = (i) => {\r\n    if (i < 0 || i > turnCount(state)) return;\r\n    updateState((draftState) => {\r\n      if (draftState.viewIndex === i) return;\r\n      if (i > turnCount(draftState)) return;\r\n      draftState.viewIndex = i;\r\n      draftState.ghostAction = null;\r\n      draftState.premoveActions = [];\r\n    });\r\n  };\r\n\r\n  //move the inner scroll bar on move history to the end after each move\r\n  useEffect(() => {\r\n    const moveHistoryDiv = document.getElementById(\"movehistory\");\r\n    moveHistoryDiv.scrollTop = moveHistoryDiv.scrollHeight;\r\n  }, [state.moveHistory.length]);\r\n\r\n  const handleSeePreviousMove = () => handleViewMove(state.viewIndex - 1);\r\n  const handleSeeNextMove = () => handleViewMove(state.viewIndex + 1);\r\n  const handleSeeFirstMove = () => {\r\n    handleViewMove(0);\r\n    //move the inner scroll bar to the beginning\r\n    const moveHistoryDiv = document.getElementById(\"movehistory\");\r\n    moveHistoryDiv.scrollTop = 0;\r\n  };\r\n  const handleSeeLastMove = () => {\r\n    handleViewMove(turnCount(state));\r\n    //move the inner scroll bar to the end\r\n    const moveHistoryDiv = document.getElementById(\"movehistory\");\r\n    moveHistoryDiv.scrollTop = moveHistoryDiv.scrollHeight;\r\n  };\r\n\r\n  //===================================================\r\n  //cosmetics logic\r\n  //===================================================\r\n  const handleToggleVolume = () => {\r\n    setCookie(\"isVolumeOn\", state.isVolumeOn ? \"false\" : \"true\", {\r\n      path: \"/\",\r\n    });\r\n    updateState((draftState) => {\r\n      draftState.isVolumeOn = !draftState.isVolumeOn;\r\n    });\r\n  };\r\n  const handleIncreaseBoardSize = () => {\r\n    if (state.zoomLevel < 10)\r\n      setCookie(\"zoomLevel\", state.zoomLevel + 1, { path: \"/\" });\r\n    updateState((draftState) => {\r\n      if (draftState.zoomLevel < 10) draftState.zoomLevel += 1;\r\n    });\r\n  };\r\n  const handleDecreaseBoardSize = () => {\r\n    if (state.zoomLevel > 0)\r\n      setCookie(\"zoomLevel\", state.zoomLevel - 1, { path: \"/\" });\r\n    updateState((draftState) => {\r\n      if (draftState.zoomLevel > 0) draftState.zoomLevel -= 1;\r\n    });\r\n  };\r\n\r\n  //===================================================\r\n  //browser's back arrow\r\n  //===================================================\r\n  const onBackButtonEvent = (e) => {\r\n    e.preventDefault();\r\n    handleLeaveGame();\r\n  };\r\n  useEffect(() => {\r\n    window.history.pushState(null, null, window.location.pathname);\r\n    window.addEventListener(\"popstate\", onBackButtonEvent);\r\n    return () => window.removeEventListener(\"popstate\", onBackButtonEvent);\r\n  });\r\n\r\n  //===================================================\r\n  //preparing props for rendering\r\n  //===================================================\r\n  //after the game is over, the players can see how much time they\r\n  //had left at each move. During the game, they ALWAYS see the current time\r\n  let displayTime1, displayTime2;\r\n  if (state.lifeCycleStage === 4) {\r\n    [displayTime1, displayTime2] = state.moveHistory[state.viewIndex].timeLeft;\r\n  } else {\r\n    const tc = turnCount(state);\r\n    [displayTime1, displayTime2] = state.moveHistory[tc].timeLeft;\r\n  }\r\n\r\n  let [gSize, wWidth] = isLargeScreen\r\n    ? [cellSizes.groundSize, cellSizes.wallWidth]\r\n    : [cellSizes.smallScreenGroundSize, cellSizes.smallScreenWallWidth];\r\n\r\n  const scalingFactor = Math.pow(1.1, state.zoomLevel - 5);\r\n  const scaledGroundSize = gSize * scalingFactor;\r\n  const scaledWallWidth = wWidth * scalingFactor;\r\n  const groundWallRatio = gSize / wWidth;\r\n\r\n  //scale up for boards with fewer fewer rows/columns than max board dims\r\n  const maxGroundRows = (maxBoardDims[0] + 1) / 2;\r\n  const maxGroundCols = (maxBoardDims[1] + 1) / 2;\r\n  const maxWallRows = (maxBoardDims[0] - 1) / 2;\r\n  const maxWallCols = (maxBoardDims[1] - 1) / 2;\r\n  const groundRows = (state.boardSettings.dims[0] + 1) / 2;\r\n  const groundCols = (state.boardSettings.dims[1] + 1) / 2;\r\n  const wallRows = (state.boardSettings.dims[0] - 1) / 2;\r\n  const wallCols = (state.boardSettings.dims[1] - 1) / 2;\r\n  const boardHeightWithMaxRows =\r\n    scaledWallWidth * maxWallRows + scaledGroundSize * maxGroundRows;\r\n  const boardWidthWithMaxCols =\r\n    scaledWallWidth * maxWallCols + scaledGroundSize * maxGroundCols;\r\n  //using: groundRows * maxGroundSizeWithCurRows + wallRows * maxWallSizeWithCurRows = boardHeightWithMaxRows\r\n  //and: maxGroundSizeWithCurRows/maxWallSizeWithCurRows = groundWallRatio\r\n  //to isolate maxGroundSizeWithCurRows\r\n  const maxGroundSizeWithCurRows =\r\n    boardHeightWithMaxRows / (groundRows + wallRows / groundWallRatio);\r\n  const maxGroundSizeWithCurCols =\r\n    boardWidthWithMaxCols / (groundCols + wallCols / groundWallRatio);\r\n  const newScaledGroundSize = Math.min(\r\n    maxGroundSizeWithCurRows,\r\n    maxGroundSizeWithCurCols\r\n  );\r\n  const newScaledWallWidth = newScaledGroundSize / groundWallRatio;\r\n  const boardHeight =\r\n    newScaledWallWidth * wallRows + newScaledGroundSize * groundRows;\r\n  const boardWidth =\r\n    newScaledWallWidth * wallCols + newScaledGroundSize * groundCols;\r\n  const gapSize = isLargeScreen ? 15 : 6;\r\n  const controlPanelWidth = 360;\r\n  const controlPanelHeight = Math.max(boardHeight, 360);\r\n  let gridTemplateRows, gridTemplateColumns, gridTemplateAreas;\r\n  if (isLargeScreen) {\r\n    const timersHeight = 100;\r\n    const timersWidth = Math.max(boardWidth, 560);\r\n    gridTemplateAreas = \"'timer status' 'board panel'\";\r\n    gridTemplateRows = `${timersHeight}px ${controlPanelHeight}px`;\r\n    gridTemplateColumns = `${timersWidth}px ${controlPanelWidth}px`;\r\n  } else {\r\n    const timersHeight = 50;\r\n    const statusHeaderHeight = 80;\r\n    gridTemplateAreas = \"'timer' 'board' 'status' 'panel'\";\r\n    gridTemplateRows = `${timersHeight}px ${boardHeight}px ${statusHeaderHeight}px ${controlPanelHeight}px`;\r\n    gridTemplateColumns = `${boardWidthWithMaxCols}px`;\r\n  }\r\n\r\n  const playerPos = state.moveHistory[state.viewIndex].playerPos;\r\n  const tracePos = getTracePos(state);\r\n  const lastActions =\r\n    state.viewIndex > 0 ? state.moveHistory[state.viewIndex].actions : [];\r\n\r\n  return (\r\n    <div>\r\n      <Header\r\n        context={\r\n          state.clientRole === roleEnum.spectator ? \"spectator\" : \"player\"\r\n        }\r\n        joinCode={state.joinCode}\r\n        helpText={gameHelp}\r\n        handleLeaveGame={handleLeaveGame}\r\n        isLargeScreen={isLargeScreen}\r\n        menuTheme={menuTheme}\r\n        isDarkModeOn={isDarkModeOn}\r\n        handleToggleDarkMode={handleToggleDarkMode}\r\n        handleToggleTheme={handleToggleTheme}\r\n      />\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateRows: gridTemplateRows,\r\n          gridTemplateColumns: gridTemplateColumns,\r\n          gridTemplateAreas: gridTemplateAreas,\r\n          columnGap: `${gapSize}px`,\r\n          rowGap: `${gapSize}px`,\r\n          margin: `${gapSize}px`,\r\n          justifyContent: \"center\",\r\n          alignContent: \"center\",\r\n        }}\r\n      >\r\n        <TimerHeader\r\n          lifeCycleStage={state.lifeCycleStage}\r\n          names={state.names}\r\n          indexToMove={indexToMove(state)}\r\n          timeLeft={[displayTime1, displayTime2]}\r\n          isLargeScreen={isLargeScreen}\r\n          scores={state.matchScore}\r\n          arePlayersPresent={state.arePlayersPresent}\r\n          menuTheme={menuTheme}\r\n          boardTheme={boardTheme}\r\n          isDarkModeOn={isDarkModeOn}\r\n        />\r\n        <StatusHeader\r\n          lifeCycleStage={state.lifeCycleStage}\r\n          names={state.names}\r\n          indexToMove={indexToMove(state)}\r\n          winner={state.winner}\r\n          finishReason={state.finishReason}\r\n          timeControl={state.timeControl}\r\n          creatorStarts={state.creatorStarts}\r\n          isLargeScreen={isLargeScreen}\r\n          menuTheme={menuTheme}\r\n          isDarkModeOn={isDarkModeOn}\r\n        />\r\n        <Board\r\n          creatorToMove={creatorToMoveAtIndex(state)}\r\n          grid={state.moveHistory[state.viewIndex].grid}\r\n          playerPos={playerPos}\r\n          goals={state.boardSettings.goalPos}\r\n          ghostAction={state.ghostAction}\r\n          premoveActions={state.premoveActions}\r\n          lastActions={lastActions}\r\n          tracePos={tracePos}\r\n          handleClick={handleBoardClick}\r\n          groundSize={newScaledGroundSize}\r\n          wallWidth={newScaledWallWidth}\r\n          menuTheme={menuTheme}\r\n          boardTheme={boardTheme}\r\n          isDarkModeOn={isDarkModeOn}\r\n          tokens={state.tokens}\r\n        />\r\n        <ControlPanel\r\n          lifeCycleStage={state.lifeCycleStage}\r\n          handleResign={handleResign}\r\n          handleOfferDraw={handleOfferDraw}\r\n          handleRequestTakeback={handleRequestTakeback}\r\n          handleGiveExtraTime={handleGiveExtraTime}\r\n          moveHistory={state.moveHistory}\r\n          clientRole={state.clientRole}\r\n          creatorStarts={state.creatorStarts}\r\n          handleViewMove={handleViewMove}\r\n          viewIndex={state.viewIndex}\r\n          turnCount={turnCount(state)}\r\n          handleSeeFirstMove={handleSeeFirstMove}\r\n          handleSeePreviousMove={handleSeePreviousMove}\r\n          handleSeeNextMove={handleSeeNextMove}\r\n          handleSeeLastMove={handleSeeLastMove}\r\n          handleToggleVolume={handleToggleVolume}\r\n          isVolumeOn={state.isVolumeOn}\r\n          handleLeaveGame={handleLeaveGame}\r\n          menuTheme={menuTheme}\r\n          boardTheme={boardTheme}\r\n          isDarkModeOn={isDarkModeOn}\r\n          handleIncreaseBoardSize={handleIncreaseBoardSize}\r\n          handleDecreaseBoardSize={handleDecreaseBoardSize}\r\n          zoomLevel={state.zoomLevel}\r\n          controlPanelHeight={controlPanelHeight}\r\n          isOpponentPresent={isOpponentPresent(state)}\r\n        />\r\n      </div>\r\n      {state.lifeCycleStage === 4 && state.clientRole !== roleEnum.spectator && (\r\n        <Row className=\"valign-wrapper\" style={{ marginTop: \"1rem\" }}>\r\n          <Col className=\"center\" s={12}>\r\n            <Button\r\n              large\r\n              style={{\r\n                backgroundColor: getColor(\r\n                  menuTheme,\r\n                  \"importantButton\",\r\n                  isDarkModeOn\r\n                ),\r\n              }}\r\n              node=\"button\"\r\n              waves=\"light\"\r\n              onClick={() => {\r\n                showToastNotification(\"Rematch offer sent.\", 5000);\r\n                handleSendRematchOffer();\r\n              }}\r\n              disabled={!isOpponentPresent(state)}\r\n            >\r\n              Rematch\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      <div style={{ height: \"100%\" }}></div>\r\n      <Dialog\r\n        isOpen={state.showDrawDialog}\r\n        title=\"Draw offer received\"\r\n        body=\"The opponent offered a draw.\"\r\n        acceptButtonText=\"Accept\"\r\n        rejectButtonText=\"Decline\"\r\n        callback={handleAnswerDrawOffer}\r\n        menuTheme={menuTheme}\r\n        isDarkModeOn={isDarkModeOn}\r\n      />\r\n      <Dialog\r\n        isOpen={state.showRematchDialog}\r\n        title=\"Rematch offer received\"\r\n        body=\"The opponent would like a rematch.\"\r\n        acceptButtonText=\"Accept\"\r\n        rejectButtonText=\"Decline\"\r\n        callback={handleAnswerRematchOffer}\r\n        menuTheme={menuTheme}\r\n        isDarkModeOn={isDarkModeOn}\r\n      />\r\n      <Dialog\r\n        isOpen={state.showTakebackDialog}\r\n        title=\"Takeback request received\"\r\n        body={\r\n          \"The opponent requested a takeback. If you accept, their \" +\r\n          \"last move will be undone.\"\r\n        }\r\n        acceptButtonText=\"Accept\"\r\n        rejectButtonText=\"Decline\"\r\n        callback={handleAnswerTakebackRequest}\r\n        menuTheme={menuTheme}\r\n        isDarkModeOn={isDarkModeOn}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GamePage;\r\n","import React, { useEffect } from \"react\";\r\nimport { useImmer } from \"use-immer\";\r\n\r\nimport Board from \"../game/Board\";\r\nimport { cellSizes, defaultBoardSettings } from \"../shared/globalSettings\";\r\nimport { cellEnum, cellTypeByPos, emptyGrid } from \"../shared/gameLogicUtils\";\r\n\r\n//not the same state as in GamePage. This is based on the server's game representation\r\nconst creatorToMove = (state) =>\r\n  state.nextMove % 2 === (state.game.creatorStarts ? 0 : 1);\r\n\r\nconst GameShowcase = ({\r\n  socket,\r\n  isLargeScreen,\r\n  menuTheme,\r\n  boardTheme,\r\n  isDarkModeOn,\r\n  handleViewGame,\r\n}) => {\r\n  const [state, updateState] = useImmer({\r\n    needToRequestGame: true,\r\n    // when a game stops playing, animation will wait 3 cycles to start a new game\r\n    finishedGameWait: 3,\r\n    game: null, //game from server\r\n    nextMove: 0,\r\n    grid: emptyGrid(defaultBoardSettings.dims),\r\n    playerPos: defaultBoardSettings.startPos,\r\n    prevPos: [null, null],\r\n  });\r\n\r\n  //timer interval to play a move every 2 seconds\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      //ask server for games\r\n      if (state.needToRequestGame) {\r\n        updateState((draftState) => {\r\n          draftState.needToRequestGame = false;\r\n        });\r\n        socket.emit(\"getRandomGame\");\r\n        return;\r\n      }\r\n      if (!state.game) return; //already asked for game, but don't have it yet\r\n      if (!state.game.moveHistory) {\r\n        console.error(\"game does not have a move history\");\r\n        return;\r\n      }\r\n      //finished playing game, request a new one\r\n      if (state.nextMove === state.game.moveHistory.length) {\r\n        updateState((draftState) => {\r\n          if (draftState.finishedGameWait > 0) draftState.finishedGameWait--;\r\n          else {\r\n            draftState.needToRequestGame = true;\r\n            draftState.finishedGameWait = 3;\r\n            draftState.game = null;\r\n            draftState.nextMove = 0;\r\n            draftState.grid = emptyGrid(defaultBoardSettings.dims);\r\n            draftState.playerPos = defaultBoardSettings.startPos;\r\n            draftState.prevPos = [null, null];\r\n          }\r\n        });\r\n        return;\r\n      }\r\n      //play one move\r\n      updateState((draftState) => {\r\n        if (\r\n          !draftState.game ||\r\n          !draftState.game.moveHistory ||\r\n          draftState.nextMove === draftState.game.moveHistory.length\r\n        )\r\n          return;\r\n\r\n        const idxToMove = creatorToMove(draftState) ? 0 : 1;\r\n        const actions =\r\n          draftState.game.moveHistory[draftState.nextMove].actions;\r\n        for (let k = 0; k < actions.length; k++) {\r\n          const pos = actions[k];\r\n          if (cellTypeByPos(pos) === cellEnum.groud) {\r\n            draftState.prevPos[idxToMove] = draftState.playerPos[idxToMove];\r\n            draftState.playerPos[idxToMove] = pos;\r\n          } else {\r\n            draftState.grid[pos[0]][pos[1]] = idxToMove + 1;\r\n          }\r\n        }\r\n        draftState.nextMove++;\r\n      });\r\n    }, 2000);\r\n    return () => clearInterval(interval);\r\n  });\r\n\r\n  //setup game received from server\r\n  useEffect(() => {\r\n    socket.on(\"requestedRandomGame\", ({ game }) => {\r\n      updateState((draftState) => {\r\n        draftState.game = game;\r\n        draftState.grid = emptyGrid(game.boardSettings.dims);\r\n        draftState.playerPos = game.boardSettings.startPos;\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"requestedRandomGame\");\r\n    };\r\n  }, [socket, updateState, state.needToRequestGame]);\r\n\r\n  const groundSize = isLargeScreen\r\n    ? cellSizes.groundSize\r\n    : cellSizes.smallScreenGroundSize;\r\n  const wallWidth = isLargeScreen\r\n    ? cellSizes.wallWidth\r\n    : cellSizes.smallScreenWallWidth;\r\n\r\n  let lastActions = [];\r\n  if (state.nextMove > 0)\r\n    lastActions = state.game.moveHistory[state.nextMove - 1].actions;\r\n\r\n  const cToMove = state.game && creatorToMove(state);\r\n  let tracePos = null;\r\n  if (\r\n    lastActions.length === 1 ||\r\n    (lastActions.length === 2 &&\r\n      (cellTypeByPos(lastActions[0]) === cellEnum.ground ||\r\n        cellTypeByPos(lastActions[1]) === cellEnum.ground))\r\n  )\r\n    tracePos = cToMove ? state.prevPos[1] : state.prevPos[0];\r\n\r\n  return (\r\n    <Board\r\n      grid={state.grid}\r\n      playerPos={state.playerPos}\r\n      goals={\r\n        state.game\r\n          ? state.game.boardSettings.goalPos\r\n          : defaultBoardSettings.goalPos\r\n      }\r\n      ghostAction={null}\r\n      creatorToMove={cToMove}\r\n      premoveActions={[]}\r\n      lastActions={lastActions}\r\n      tracePos={tracePos}\r\n      handleClick={() => {\r\n        if (state.game) handleViewGame(state.game._id);\r\n      }}\r\n      groundSize={groundSize}\r\n      wallWidth={wallWidth}\r\n      menuTheme={menuTheme}\r\n      boardTheme={boardTheme}\r\n      isDarkModeOn={isDarkModeOn}\r\n      tokens={state.game ? state.game.playerTokens : [\"default\", \"default\"]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GameShowcase;\r\n","import React from \"react\";\r\n\r\nexport const lobbyHelpText = (\r\n  <div>\r\n    <h6>\r\n      This is the lobby. From here, you can create games that your friends can\r\n      join, or join a friend's game.\r\n    </h6>\r\n    <h6>\r\n      When you create a game, you can choose the <em>duration</em> (per player)\r\n      and a time <em>increment</em> that is added to each player after they\r\n      move, among other settings. Once you create a game, a <em>join code</em>{\" \"}\r\n      will appear at the top. Share this code with your friend to play with\r\n      them. In addition, if you select the \"Public\" game option, anyone will be\r\n      able to see and join your game.\r\n    </h6>\r\n    <h6>\r\n      You can find public games to join in the <em>Open Challenges</em> tab in\r\n      the lobby. To join a private game from a friend, write the code they give\r\n      you in the box next to the <em>Join Game</em> button and click it.\r\n    </h6>\r\n    <h6>\r\n      To get a feel for the game, you can watch some of the recent games listed\r\n      in the <em>Recente Games</em> tab in the lobby.\r\n    </h6>\r\n    <h6>\r\n      A random <em>player name</em> has been chosen for you, but you can change\r\n      it. You can also choose the look of your token.\r\n    </h6>\r\n  </div>\r\n);\r\n\r\nexport const aboutText = (\r\n  <div>\r\n    <h6>\r\n      Wallwars is an online 2-player strategy board game. The player who gets to\r\n      their goal before first wins. You can place walls to reshape the terrain\r\n      to your advantage.\r\n    </h6>\r\n    <h6>\r\n      WallWars is inspired by board games like Blockade and Quoridor. The main\r\n      difference is that in WallWars there is no limit to how many walls you can\r\n      place, and moves are more flexible (for instance, you can move and place a\r\n      wall in the same turn).\r\n    </h6>\r\n    <h6>The source code is available at https://github.com/nmamano/WallWars</h6>\r\n  </div>\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { Row, Col, Button } from \"react-materialize\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useImmer } from \"use-immer\";\r\n\r\nimport { randPlayerName } from \"../shared/utils\";\r\nimport { getColor } from \"../shared/colorThemes\";\r\nimport blueBgDark from \"./../static/blueBgDark.jfif\";\r\nimport blueBgLight from \"./../static/blueBgLight.jfif\";\r\nimport {\r\n  defaultInitialPlayerPos,\r\n  defaultGoalPos,\r\n  defaultBoardSettings,\r\n  maxBoardDims,\r\n  cellSizes,\r\n} from \"../shared/globalSettings\";\r\nimport LobbyForm from \"./LobbyForm\";\r\nimport GameListsTabs from \"./LobbyTabs\";\r\nimport GamePage from \"../game/GamePage\";\r\nimport GameShowcase from \"./GameShowcase\";\r\nimport Header from \"../shared/Header\";\r\nimport { lobbyHelpText, aboutText } from \"./lobbyHelp\";\r\nimport showToastNotification from \"../shared/showToastNotification\";\r\nimport { emptyBoardDistances, boardPixelDims } from \"../shared/gameLogicUtils\";\r\n\r\nconst boardTheme = \"monochromeBoard\";\r\nconst maxPlayerNameLen = 9;\r\nconst numStartingRecentGames = 16;\r\n\r\nconst initalLobbyState = (cookies) => {\r\n  let nr = parseFloat(cookies.numRows);\r\n  nr = isNaN(nr) ? defaultBoardSettings.dims[0] : nr;\r\n  let nc = parseFloat(cookies.numCols);\r\n  nc = isNaN(nc) ? defaultBoardSettings.dims[1] : nc;\r\n  return {\r\n    playerName: cookies.playerName || randPlayerName(maxPlayerNameLen),\r\n    token: cookies.token || \"default\",\r\n    timeControl: {\r\n      duration: cookies.duration || \"5\",\r\n      increment: cookies.increment || \"5\",\r\n    },\r\n    boardSettings: {\r\n      dims: [nr, nc],\r\n      startPos: defaultInitialPlayerPos([nr, nc]),\r\n      goalPos: defaultGoalPos([nr, nc]),\r\n    },\r\n    joinCode: \"\",\r\n    clientRole: \"\", //creator, joiner, returner, spectator\r\n    watchGameId: null,\r\n    cookieId: cookies.cookieId ? cookies.cookieId : \"undefined\",\r\n    isPublic: cookies.isPublic && cookies.isPublic === \"true\" ? true : false,\r\n    isGamePageOpen: false,\r\n    hasOngoingGame: false,\r\n    isDarkModeOn:\r\n      cookies.isDarkModeOn && cookies.isDarkModeOn === \"true\" ? true : false,\r\n    menuTheme:\r\n      cookies.menuTheme && cookies.menuTheme === \"green\" ? \"green\" : \"blue\",\r\n    recentGames: {\r\n      games: [],\r\n      numGamesToRequest: numStartingRecentGames,\r\n    },\r\n    showMoreOptions: false,\r\n  };\r\n};\r\n\r\nconst LobbyPage = ({ socket }) => {\r\n  const [cookies, setCookie] = useCookies([\r\n    \"isDarkModeOn\",\r\n    \"menuTheme\",\r\n    \"token\",\r\n    \"playerName\",\r\n    \"duration\",\r\n    \"increment\",\r\n    \"numRows\",\r\n    \"numCols\",\r\n    \"cookieId\",\r\n    \"isPublic\",\r\n  ]);\r\n  const [state, updateState] = useImmer(initalLobbyState(cookies));\r\n\r\n  const handleToggleTheme = () => {\r\n    const newTheme = state.menuTheme === \"green\" ? \"blue\" : \"green\";\r\n    updateState((draftState) => {\r\n      draftState.menuTheme = newTheme;\r\n    });\r\n    setCookie(\"menuTheme\", newTheme, { path: \"/\" });\r\n  };\r\n  const handleToggleDarkMode = () => {\r\n    const newSetting = !state.isDarkModeOn;\r\n    updateState((draftState) => {\r\n      draftState.isDarkModeOn = newSetting;\r\n    });\r\n    setCookie(\"isDarkModeOn\", newSetting ? \"true\" : \"false\", {\r\n      path: \"/\",\r\n    });\r\n  };\r\n  const handlePlayerName = (name) => {\r\n    updateState((draftState) => {\r\n      draftState.playerName = name.slice(0, maxPlayerNameLen);\r\n    });\r\n  };\r\n  const handleRefreshName = () => {\r\n    updateState((draftState) => {\r\n      draftState.playerName = randPlayerName(maxPlayerNameLen);\r\n    });\r\n  };\r\n  const handleToken = (icon) => {\r\n    updateState((draftState) => {\r\n      draftState.token = icon;\r\n    });\r\n    setCookie(\"token\", icon, { path: \"/\" });\r\n  };\r\n  const handleDuration = (val) => {\r\n    updateState((draftState) => {\r\n      draftState.timeControl.duration = val;\r\n    });\r\n  };\r\n  const handleIncrement = (val) => {\r\n    updateState((draftState) => {\r\n      draftState.timeControl.increment = val;\r\n    });\r\n  };\r\n  const handleIsPublic = (val) => {\r\n    updateState((draftState) => {\r\n      draftState.isPublic = val;\r\n    });\r\n    setCookie(\"isPublic\", val ? \"true\" : \"false\", {\r\n      path: \"/\",\r\n    });\r\n  };\r\n  const handleNumRows = (nr) => {\r\n    updateState((draftState) => {\r\n      const curNr = draftState.boardSettings.dims[0];\r\n      draftState.boardSettings.dims[0] = nr;\r\n      for (let i = 0; i < 2; i++) {\r\n        let pRow = draftState.boardSettings.startPos[i][0];\r\n        if (pRow >= nr - 1 || pRow === curNr - 1) {\r\n          draftState.boardSettings.startPos[i][0] = nr - 1;\r\n        }\r\n        let gRow = draftState.boardSettings.goalPos[i][0];\r\n        if (gRow >= nr - 1 || gRow === curNr - 1) {\r\n          draftState.boardSettings.goalPos[i][0] = nr - 1;\r\n        }\r\n      }\r\n    });\r\n  };\r\n  const handleNumCols = (nc) => {\r\n    updateState((draftState) => {\r\n      const curNc = draftState.boardSettings.dims[1];\r\n      draftState.boardSettings.dims[1] = nc;\r\n      for (let i = 0; i < 2; i++) {\r\n        let pCol = draftState.boardSettings.startPos[i][1];\r\n        if (pCol >= nc - 1 || pCol === curNc - 1) {\r\n          draftState.boardSettings.startPos[i][1] = nc - 1;\r\n        }\r\n        let gCol = draftState.boardSettings.goalPos[i][1];\r\n        if (gCol >= nc - 1 || gCol === curNc - 1) {\r\n          draftState.boardSettings.goalPos[i][1] = nc - 1;\r\n        }\r\n      }\r\n    });\r\n  };\r\n  const handleShowMoreOptions = () => {\r\n    updateState((draftState) => {\r\n      draftState.showMoreOptions = !draftState.showMoreOptions;\r\n    });\r\n  };\r\n  const handleStartPos = (player, coord, val) => {\r\n    updateState((draftState) => {\r\n      draftState.boardSettings.startPos[player][coord] = val;\r\n    });\r\n  };\r\n  const handleGoalPos = (player, coord, val) => {\r\n    updateState((draftState) => {\r\n      draftState.boardSettings.goalPos[player][coord] = val;\r\n    });\r\n  };\r\n  const handleJoinCode = (code) => {\r\n    updateState((draftState) => {\r\n      draftState.joinCode = code;\r\n    });\r\n  };\r\n  const handleSetCookieId = (cookieId) => {\r\n    updateState((draftState) => {\r\n      draftState.cookieId = cookieId;\r\n    });\r\n    setCookie(\"cookieId\", cookieId, { path: \"/\" });\r\n  };\r\n  const handleCreateGame = () => {\r\n    const dur = validateDuration();\r\n    const inc = validateIncrement();\r\n    const bs = validateBoardSettings();\r\n    const name = validateName();\r\n    updateState((draftState) => {\r\n      draftState.clientRole = \"creator\";\r\n      //note: duration and increment are converted from string to number here\r\n      draftState.timeControl.duration = dur;\r\n      draftState.timeControl.increment = inc;\r\n      draftState.boardSettings = bs;\r\n      draftState.playerName = name;\r\n      draftState.cookieId = cookies.cookieId ? cookies.cookieId : \"undefined\";\r\n      draftState.hasOngoingGame = false;\r\n      draftState.isGamePageOpen = true;\r\n    });\r\n  };\r\n  const handleJoinGame = () => {\r\n    const name = validateName();\r\n    updateState((draftState) => {\r\n      draftState.clientRole = \"joiner\";\r\n      draftState.playerName = name;\r\n      draftState.cookieId = cookies.cookieId ? cookies.cookieId : \"undefined\";\r\n      draftState.hasOngoingGame = false;\r\n      draftState.isGamePageOpen = true;\r\n    });\r\n  };\r\n  const handleAcceptChallenge = (joinCode) => {\r\n    const name = validateName();\r\n    updateState((draftState) => {\r\n      draftState.joinCode = joinCode;\r\n      draftState.clientRole = \"joiner\";\r\n      draftState.playerName = name;\r\n      draftState.cookieId = cookies.cookieId ? cookies.cookieId : \"undefined\";\r\n      draftState.hasOngoingGame = false;\r\n      draftState.isGamePageOpen = true;\r\n    });\r\n  };\r\n  const handleReturnToGame = () => {\r\n    updateState((draftState) => {\r\n      draftState.clientRole = \"returner\";\r\n      draftState.cookieId = cookies.cookieId;\r\n      draftState.hasOngoingGame = false;\r\n      draftState.isGamePageOpen = true;\r\n    });\r\n  };\r\n  const handleViewGame = (watchGameId) => {\r\n    updateState((draftState) => {\r\n      draftState.clientRole = \"spectator\";\r\n      draftState.watchGameId = watchGameId;\r\n      draftState.hasOngoingGame = false;\r\n      draftState.isGamePageOpen = true;\r\n    });\r\n  };\r\n  const handleReturnToLobby = () => {\r\n    updateState((draftState) => {\r\n      draftState.hasOngoingGame = false;\r\n      draftState.isGamePageOpen = false;\r\n      draftState.recentGames.numGamesToRequest = numStartingRecentGames;\r\n      draftState.clientRole = \"\";\r\n      draftState.joinCode = \"\";\r\n    });\r\n  };\r\n\r\n  const validateName = () => {\r\n    let name = state.playerName;\r\n    if (name === \"\") name = \"Anon\";\r\n    else setCookie(\"playerName\", name, { path: \"/\" });\r\n    return name;\r\n  };\r\n  const validateDuration = () => {\r\n    let dur = parseFloat(state.timeControl.duration);\r\n    if (isNaN(dur)) {\r\n      dur = 5;\r\n      showToastNotification(\"Invalid duration, using 5m instead\", 5000);\r\n    } else if (dur < 0.1) {\r\n      dur = 5 / 60;\r\n      showToastNotification(\"Duration too short, using 5s instead\", 5000);\r\n    } else if (dur > 120) {\r\n      dur = 120;\r\n      showToastNotification(\"Duration too long, using 2h instead\", 5000);\r\n    } else {\r\n      setCookie(\"duration\", dur, { path: \"/\" });\r\n    }\r\n    return dur;\r\n  };\r\n  const validateIncrement = () => {\r\n    let inc = parseFloat(state.timeControl.increment);\r\n    if (isNaN(inc) || inc < 0) {\r\n      inc = 0;\r\n      showToastNotification(\"Invalid increment, using 0s instead\", 5000);\r\n    } else if (inc > 300) {\r\n      inc = 300;\r\n      showToastNotification(\"Increment too large, using 5m instead\", 5000);\r\n    } else {\r\n      setCookie(\"increment\", inc, { path: \"/\" });\r\n    }\r\n    return inc;\r\n  };\r\n  const validateBoardSettings = () => {\r\n    const bs = state.boardSettings;\r\n    const dists = emptyBoardDistances(bs);\r\n    if (dists[0] <= 2 || dists[1] <= 2) {\r\n      showToastNotification(\r\n        \"The goal is too close to the player, using default board instead\",\r\n        5000\r\n      );\r\n      return defaultBoardSettings;\r\n    } else {\r\n      setCookie(\"numRows\", state.boardSettings.dims[0], {\r\n        path: \"/\",\r\n      });\r\n      setCookie(\"numCols\", state.boardSettings.dims[1], {\r\n        path: \"/\",\r\n      });\r\n      return bs;\r\n    }\r\n  };\r\n\r\n  //determine if the \"Return To Game\" button needs to be shown\r\n  useEffect(() => {\r\n    if (\r\n      cookies.cookieId &&\r\n      cookies.cookieId !== \"undefined\" &&\r\n      !state.hasOngoingGame &&\r\n      !state.isGamePageOpen\r\n    ) {\r\n      socket.emit(\"checkHasOngoingGame\", { cookieId: cookies.cookieId });\r\n    }\r\n  }, [socket, cookies.cookieId, state.hasOngoingGame, state.isGamePageOpen]);\r\n  useEffect(() => {\r\n    socket.on(\"respondHasOngoingGame\", ({ res }) => {\r\n      updateState((draftState) => {\r\n        if (!draftState.isGamePageOpen) draftState.hasOngoingGame = res;\r\n      });\r\n    });\r\n  });\r\n\r\n  //set the background of the entire site based on theme and dark mode\r\n  useEffect(() => {\r\n    document.body.style.backgroundColor = getColor(\r\n      state.menuTheme,\r\n      \"background\",\r\n      state.isDarkModeOn\r\n    );\r\n    if (state.menuTheme === \"blue\") {\r\n      document.body.style.backgroundImage = `url('${\r\n        state.isDarkModeOn ? blueBgDark : blueBgLight\r\n      }')`;\r\n    } else {\r\n      document.body.style.backgroundImage = \"none\";\r\n    }\r\n  }, [state.isDarkModeOn, state.menuTheme]);\r\n\r\n  //get recent games\r\n  useEffect(() => {\r\n    const count = state.recentGames.numGamesToRequest;\r\n    if (count > 0 && count < 100) {\r\n      socket.emit(\"getRecentGames\", {\r\n        count: count,\r\n      });\r\n    }\r\n  }, [socket, updateState, state.recentGames.numGamesToRequest]);\r\n  useEffect(() => {\r\n    socket.once(\"requestedRecentGames\", ({ games }) => {\r\n      updateState((draftState) => {\r\n        draftState.recentGames.games = games;\r\n        draftState.recentGames.numGamesToRequest = games.length * 2;\r\n      });\r\n    });\r\n  }, [socket, updateState, state.recentGames.games]);\r\n\r\n  const sideBySideLayout = useMediaQuery({ query: \"(min-width: 1300px)\" });\r\n  const isLargeScreen = useMediaQuery({ query: \"(min-width: 990px)\" });\r\n  let [groundSize, wallWidth] = isLargeScreen\r\n    ? [cellSizes.groundSize, cellSizes.wallWidth]\r\n    : [cellSizes.smallScreenGroundSize, cellSizes.smallScreenWallWidth];\r\n  const [bHeight, bWidth] = boardPixelDims(maxBoardDims, groundSize, wallWidth);\r\n  const gapSize = isLargeScreen ? 15 : 6;\r\n  const headerHeight = 40;\r\n  const comboHeight = bHeight + headerHeight;\r\n  let gridTemplAreas, gridTemplRows, gridTemplCols;\r\n  if (sideBySideLayout) {\r\n    gridTemplAreas = \"'showcaseArea tabsArea'\";\r\n    gridTemplRows = `${comboHeight}px`;\r\n    gridTemplCols = `${bWidth}px ${bWidth}px`;\r\n  } else {\r\n    gridTemplAreas = \"'showcaseArea' 'tabsArea'\";\r\n    gridTemplRows = `${comboHeight}px ${comboHeight}px`;\r\n    gridTemplCols = `${bWidth}px`;\r\n  }\r\n  const gridStyle = {\r\n    display: \"grid\",\r\n    gridTemplateRows: gridTemplRows,\r\n    gridTemplateColumns: gridTemplCols,\r\n    gridTemplateAreas: gridTemplAreas,\r\n    columnGap: `${2 * gapSize}px`,\r\n    rowGap: `${gapSize}px`,\r\n    margin: `${gapSize}px`,\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n  };\r\n  const gameShowcaseHeader = (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        alignSelf: \"center\",\r\n        justifySelf: \"center\",\r\n        fontSize: \"20px\",\r\n        paddingBottom: gapSize,\r\n        height: headerHeight,\r\n      }}\r\n      title={\"Random games already played\"}\r\n    >\r\n      Game Showcase\r\n    </div>\r\n  );\r\n  const returnToGameButton = (\r\n    <Button\r\n      large\r\n      style={{\r\n        backgroundColor: getColor(\r\n          state.menuTheme,\r\n          \"importantButton\",\r\n          state.isDarkModeOn\r\n        ),\r\n      }}\r\n      node=\"button\"\r\n      waves=\"light\"\r\n      onClick={() => {\r\n        handleReturnToGame();\r\n      }}\r\n    >\r\n      Return to game\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        paddingBottom: \"2rem\",\r\n      }}\r\n    >\r\n      <ToastContainer />\r\n      {state.isGamePageOpen && (\r\n        <GamePage\r\n          socket={socket}\r\n          clientParams={state}\r\n          isLargeScreen={isLargeScreen}\r\n          boardTheme={boardTheme}\r\n          handleReturnToLobby={handleReturnToLobby}\r\n          handleToggleDarkMode={handleToggleDarkMode}\r\n          handleToggleTheme={handleToggleTheme}\r\n          handleSetCookieId={handleSetCookieId}\r\n        />\r\n      )}\r\n      {!state.isGamePageOpen && (\r\n        <div>\r\n          <Header\r\n            context={\"lobby\"}\r\n            isLargeScreen={isLargeScreen}\r\n            menuTheme={state.menuTheme}\r\n            isDarkModeOn={state.isDarkModeOn}\r\n            helpText={lobbyHelpText}\r\n            aboutText={aboutText}\r\n            handleToggleDarkMode={handleToggleDarkMode}\r\n            handleToggleTheme={handleToggleTheme}\r\n          />\r\n          <LobbyForm\r\n            clientParams={state}\r\n            isLargeScreen={isLargeScreen}\r\n            handlePlayerName={handlePlayerName}\r\n            handleDuration={handleDuration}\r\n            handleIncrement={handleIncrement}\r\n            handleIsPublic={handleIsPublic}\r\n            handleNumRows={handleNumRows}\r\n            handleNumCols={handleNumCols}\r\n            handleShowMoreOptions={handleShowMoreOptions}\r\n            handleStartPos={handleStartPos}\r\n            handleGoalPos={handleGoalPos}\r\n            handleJoinCode={handleJoinCode}\r\n            handleCreateGame={handleCreateGame}\r\n            handleJoinGame={handleJoinGame}\r\n            handleRefreshName={handleRefreshName}\r\n            handleToken={handleToken}\r\n          />\r\n          {state.hasOngoingGame &&\r\n            cookies.cookieId &&\r\n            cookies.cookieId !== \"undefined\" && (\r\n              <Row className=\"valign-wrapper\" style={{ marginTop: \"1rem\" }}>\r\n                <Col className=\"center\" s={12}>\r\n                  {returnToGameButton}\r\n                </Col>\r\n              </Row>\r\n            )}\r\n          <div style={gridStyle}>\r\n            <div style={{ gridArea: \"showcaseArea\" }}>\r\n              {gameShowcaseHeader}\r\n              <GameShowcase\r\n                socket={socket}\r\n                isLargeScreen={isLargeScreen}\r\n                menuTheme={state.menuTheme}\r\n                boardTheme={boardTheme}\r\n                isDarkModeOn={state.isDarkModeOn}\r\n                handleViewGame={handleViewGame}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                gridArea: \"tabsArea\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              <GameListsTabs\r\n                socket={socket}\r\n                isLargeScreen={isLargeScreen}\r\n                menuTheme={state.menuTheme}\r\n                isDarkModeOn={state.isDarkModeOn}\r\n                recentGames={state.recentGames.games}\r\n                handleViewGame={handleViewGame}\r\n                handleAcceptChallenge={handleAcceptChallenge}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LobbyPage;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport socketIoClient from \"socket.io-client\";\r\nimport { CookiesProvider } from \"react-cookie\";\r\n\r\nimport LobbyPage from \"./lobby/LobbyPage\";\r\n\r\nconst App = () => {\r\n  const BACKEND_ENDPOINT =\r\n    process.env.REACT_APP_BACKEND_URL || \"localhost:4001\";\r\n  console.log(`connecting to backend at ${BACKEND_ENDPOINT}`);\r\n  const [socket] = useState(socketIoClient(BACKEND_ENDPOINT));\r\n\r\n  //every route redirects back to '/wallwars/index.html',\r\n  //where the entire app exists as a single-page application\r\n  return (\r\n    <React.StrictMode>\r\n      <CookiesProvider>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route path=\"/wallwars/index.html\" exact>\r\n              <LobbyPage socket={socket} />\r\n            </Route>\r\n            <Redirect to=\"/wallwars/index.html\" />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </CookiesProvider>\r\n    </React.StrictMode>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoveredMode\":\"hoverHighlight_hoveredMode__1R18t\",\"hoveredGame\":\"hoverHighlight_hoveredGame__3lWju\"};","module.exports = __webpack_public_path__ + \"static/media/blueBgDark.b39b76f7.jfif\";","module.exports = __webpack_public_path__ + \"static/media/blueBgLight.6108cc32.jfif\";","module.exports = __webpack_public_path__ + \"static/media/moveSound.6df49e4b.mp3\";"],"sourceRoot":""}