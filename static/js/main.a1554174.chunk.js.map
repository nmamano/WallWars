{"version":3,"sources":["gameLogic/mainLogic.js","game/Board.js","shared/Header.js","game/StatusHeader.js","game/TimerHeader.js","game/GamePage.js","lobby/LobbyForm.js","lobby/LobbyPage.js","App.js","index.js"],"names":["cellTypeByPos","pos","r","c","posEq","pos1","pos2","inBounds","dims","h","w","isWallBuilt","grid","accessibleNeighbors","length","dimensions","dirs","res","pr","pc","k","dr","dc","adjWall","adjGround","push","distance","start","target","C","posToKey","queue","dist","Map","set","shift","nbrs","nbr","has","get","canReach","canBuildWall","playerPos","goals","isValidBoard","displayParams","Board","ghostAction","playerColors","color1","color2","p1","p2","g1","g2","handleClick","p1ToMove","allPos","cellpx","wallpx","icon1","icon2","repRows","repCols","style","display","gridTemplateColumns","gridTemplateRows","justifyContent","map","color","p1Here","p2Here","goal1Here","goal2Here","ghostHere","p1GhostHere","p2GhostHere","cellType","solidWallHere","isPillar","anyPHere","className","key","onClick","alignItems","Header","gameName","showLobby","endGame","showHelp","headerText","alignLinks","brand","centerLogo","id","menuIcon","options","draggable","edge","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","preventScrolling","console","log","StatusHeader","msg","playerNames","lifeCycleStage","winner","finishReason","numMoves","name1","name2","error","marginTop","marginBottom","s","TimerHeader","timeLeft1","timeLeft2","actor","Math","floor","min1","min2","sec1","sec2","highlightName1","highlightName2","margin","emptyGrid","GamePage","socket","creatorParams","joinerParams","lobbyReturnFromGame","corners","tl","tr","bl","br","initialPlayerPos","isPlayer1","useImmer","timeControl","gameId","p1Name","p2Name","p1Starts","duration","S","updateState","useEffect","draftS","emit","once","on","actions","receivedTime","pToMove","aPos","aType","otherP","pToMoveStarted","remainingDist","toString","removeAllListeners","interval","setInterval","clearInterval","ghostType","clickPos","clickType","clickActCount","cloneDeep","playerToMove","actorPos","gridCopy","clickActionCount","newGhostAction","incrementedTime","increment","LobbyForm","playerName","handlePlayerName","handleDuration","handleIncrement","joinGameId","handleJoinGameId","handleCreateGame","handleJoinGame","value","onChange","node","waves","paddingRight","label","paddingLeft","placeholder","LobbyPage","useState","uniqueNamesGenerator","dictionaries","names","slice","setPlayerName","setDuration","setIncrement","setJoinGameId","isOngoingGame","setIsOngoingGame","setCreatorParams","setJoinerParams","props","App","socketIoClient","process","StrictMode","path","exact","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1554174.chunk.js","sourcesContent":["/* In-game coordinate system:\r\nWalls and junctions between four cells (called pillars) also count for the coordinate\r\nsystem, so the number of rows/columns with \"walkable\" cells (called ground cells) is\r\nactually half of the board's size (rounding up). Both dimensions of the board should\r\nbe odd, as they start and end with a row / column of walkable cells.\r\nThe first coordinate is the row (y-axis / height), denoted with variable r by convention.\r\nThe second coordinate is the column (x-axis / width), denoted with variable c by convention.\r\n*/\r\n\r\nexport function cellTypeByPos(pos) {\r\n  if (pos.r % 2 === 0 && pos.c % 2 === 0) return \"Ground\";\r\n  if (pos.r % 2 === 0 && pos.c % 2 === 1) return \"Wall\";\r\n  if (pos.r % 2 === 1 && pos.c % 2 === 0) return \"Wall\";\r\n  return \"Pillar\"; //case i%2 === 1 && j%2 === 1\r\n}\r\n\r\nexport function posEq(pos1, pos2) {\r\n  return pos1.r === pos2.r && pos1.c === pos2.c;\r\n}\r\n\r\nfunction dimensions(grid) {\r\n  return { h: grid.length, w: grid[0].length };\r\n}\r\n\r\nfunction inBounds(pos, dims) {\r\n  return pos.r >= 0 && pos.r < dims.h && pos.c >= 0 && pos.c < dims.w;\r\n}\r\n\r\nfunction isWallBuilt(grid, pos) {\r\n  const cellType = cellTypeByPos(pos);\r\n  if (cellType !== \"Wall\") return false; //cannot check for wall here\r\n  return grid[pos.r][pos.c] !== 0;\r\n}\r\n\r\nfunction accessibleNeighbors(grid, pos) {\r\n  const dims = dimensions(grid);\r\n  if (cellTypeByPos(pos) !== \"Ground\") {\r\n    return []; //only ground coords can access neighbors\r\n  }\r\n  const dirs = [\r\n    { r: 0, c: 1 },\r\n    { r: 0, c: -1 },\r\n    { r: 1, c: 0 },\r\n    { r: -1, c: 0 },\r\n  ];\r\n  const res = [];\r\n  const [pr, pc] = [pos.r, pos.c];\r\n  for (let k = 0; k < dirs.length; k++) {\r\n    const [dr, dc] = [dirs[k].r, dirs[k].c];\r\n    const adjWall = { r: pr + dr, c: pc + dc };\r\n    const adjGround = { r: pr + 2 * dr, c: pc + 2 * dc };\r\n    if (inBounds(adjGround, dims) && !isWallBuilt(grid, adjWall)) {\r\n      res.push(adjGround);\r\n    }\r\n  }\r\n  return res;\r\n}\r\n\r\nexport function distance(grid, start, target) {\r\n  //implements bfs algorithm\r\n  if (posEq(start, target)) return 0;\r\n  const C = grid[0].length;\r\n  const posToKey = (pos) => pos.r * C + pos.c;\r\n\r\n  const queue = [];\r\n  queue.push(start);\r\n  const dist = new Map();\r\n  dist.set(posToKey(start), 0);\r\n  while (queue.length > 0) {\r\n    const pos = queue.shift(); //todo: inefficient, change for real queue\r\n    const nbrs = accessibleNeighbors(grid, pos);\r\n    for (let k = 0; k < nbrs.length; k++) {\r\n      let nbr = nbrs[k];\r\n      if (!dist.has(posToKey(nbr))) {\r\n        dist.set(posToKey(nbr), dist.get(posToKey(pos)) + 1);\r\n        if (posEq(nbr, target)) return dist.get(posToKey(nbr));\r\n        queue.push(nbr);\r\n      }\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nfunction canReach(grid, start, target) {\r\n  return distance(grid, start, target) !== -1;\r\n}\r\n\r\n//can handle more than 2 players, which is not used for now\r\nfunction isValidBoard(grid, playerPos, goals) {\r\n  for (let k = 0; k < playerPos.length; k++) {\r\n    if (!canReach(grid, playerPos[k], goals[k])) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function canBuildWall(grid, playerPos, goals, pos) {\r\n  if (isWallBuilt(grid, pos)) return false;\r\n  grid[pos.r][pos.c] = 1; //grid parameter is only modified in this scope\r\n  var res = isValidBoard(grid, playerPos, goals);\r\n  grid[pos.r][pos.c] = 0;\r\n  return res;\r\n}\r\n","import React from \"react\";\r\nimport { Icon } from \"react-materialize\";\r\n\r\nimport { cellTypeByPos, posEq } from \"../gameLogic/mainLogic\";\r\n\r\n//cosmetic parameters of the board\r\nconst displayParams = {\r\n  cellSize: 37,\r\n  wallWidth: 12,\r\n  cellColor: \"cyan lighten-4\",\r\n  pillarColor: \"cyan lighten-3\",\r\n  emptyWallColor: \"cyan lighten-5\",\r\n  playerIcons: [\"face\", \"outlet\"],\r\n};\r\n\r\n//stateless component to display the board. all the state is at GamePage\r\nconst Board = ({\r\n  grid,\r\n  ghostAction,\r\n  playerColors: [color1, color2],\r\n  playerPos: [p1, p2],\r\n  goals: [g1, g2],\r\n  handleClick,\r\n  p1ToMove,\r\n}) => {\r\n  const dims = { h: grid.length, w: grid[0].length };\r\n  const allPos = [];\r\n  for (let r = 0; r < dims.h; r++)\r\n    for (let c = 0; c < dims.w; c++) allPos[r * dims.w + c] = { r: r, c: c };\r\n\r\n  const [cellpx, wallpx] = [displayParams.cellSize, displayParams.wallWidth];\r\n  const [icon1, icon2] = displayParams.playerIcons;\r\n  const [repRows, repCols] = [(dims.h - 1) / 2, (dims.w - 1) / 2];\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"grid\",\r\n        gridTemplateColumns: `repeat(${repCols}, ${cellpx}px ${wallpx}px) ${cellpx}px`,\r\n        gridTemplateRows: `repeat(${repRows}, ${cellpx}px ${wallpx}px) ${cellpx}px`,\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      {allPos.map((pos) => {\r\n        const [p1Here, p2Here] = [posEq(pos, p1), posEq(pos, p2)];\r\n        const [goal1Here, goal2Here] = [posEq(pos, g1), posEq(pos, g2)];\r\n        //ghosts are the partial moves that are only displayed locally\r\n        const ghostHere = ghostAction !== null && posEq(ghostAction, pos);\r\n        const [p1GhostHere, p2GhostHere] = [\r\n          ghostHere && p1ToMove,\r\n          ghostHere && !p1ToMove,\r\n        ];\r\n        const cellType = cellTypeByPos(pos);\r\n\r\n        let color;\r\n        if (cellType === \"Ground\") color = displayParams.cellColor;\r\n        else if (cellType === \"Wall\") color = displayParams.emptyWallColor;\r\n        else color = displayParams.pillarColor;\r\n\r\n        //special coloring for Ground cells containing the goals goals\r\n        if (goal1Here) color = color1 + \" lighten-4\";\r\n        if (goal2Here) color = color2 + \" lighten-4\";\r\n\r\n        //wall coloring for built walls (depending on builder)\r\n        if (cellType === \"Wall\") {\r\n          const solidWallHere = grid[pos.r][pos.c] !== 0;\r\n          if (solidWallHere || ghostHere) {\r\n            if (solidWallHere) {\r\n              color = grid[pos.r][pos.c] === 1 ? color1 : color2;\r\n              color += \" darken-3\";\r\n            } else {\r\n              color = p1ToMove ? color1 : color2;\r\n              color += \" lighten-3\";\r\n            }\r\n          }\r\n        }\r\n\r\n        //add waves cosmetic effect when clicking a cell\r\n        if (cellType === \"Ground\") color += \" waves-effect waves-light\";\r\n        if (cellType === \"Wall\") color += \" waves-effect waves-dark\";\r\n        const isPillar = pos.r % 2 === 1 && pos.c % 2 === 1;\r\n        const anyPHere = p1Here || p2Here || p1GhostHere || p2GhostHere;\r\n        return (\r\n          <div\r\n            className={color}\r\n            key={`cell_${pos.r}_${pos.c}`}\r\n            onClick={() => {\r\n              if (!isPillar) handleClick(pos);\r\n            }}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            {p1Here && <Icon className={`${color1}-text small`}>{icon1}</Icon>}\r\n            {p2Here && <Icon className={`${color2}-text small`}>{icon2}</Icon>}\r\n            {goal1Here && !anyPHere && (\r\n              <Icon className=\"white-text small\">{icon1}</Icon>\r\n            )}\r\n            {goal2Here && !anyPHere && (\r\n              <Icon className=\"white-text small\">{icon2}</Icon>\r\n            )}\r\n            {p1GhostHere && cellType === \"Ground\" && (\r\n              <Icon className={`${color1}-text small text-lighten-4`}>\r\n                {icon1}\r\n              </Icon>\r\n            )}\r\n            {p2GhostHere && cellType === \"Ground\" && (\r\n              <Icon className={`${color2}-text small text-lighten-4`}>\r\n                {icon2}\r\n              </Icon>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport \"materialize-css\";\r\nimport { Navbar, Icon, NavItem } from \"react-materialize\";\r\n\r\nfunction Header({ gameName, showLobby, endGame, showHelp }) {\r\n  let headerText = \"WallWars\";\r\n  if (gameName !== \"\") headerText += ` Game ${gameName}`;\r\n\r\n  const showAbout = () => {\r\n    console.log(\"todo: show about in modal window\");\r\n  };\r\n\r\n  return (\r\n    <Navbar\r\n      alignLinks=\"right\"\r\n      brand={<span className=\"brand-logo\">{headerText}</span>}\r\n      centerLogo\r\n      id=\"mobile-nav\"\r\n      menuIcon={<Icon>menu</Icon>}\r\n      options={{\r\n        draggable: true,\r\n        edge: \"left\",\r\n        inDuration: 250,\r\n        onCloseEnd: null,\r\n        onCloseStart: null,\r\n        onOpenEnd: null,\r\n        onOpenStart: null,\r\n        outDuration: 200,\r\n        preventScrolling: true,\r\n      }}\r\n    >\r\n      {showLobby && <NavItem onClick={endGame}>Lobby</NavItem>}\r\n      <NavItem onClick={showHelp}>Help</NavItem>\r\n      <NavItem onClick={showAbout}>About</NavItem>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-materialize\";\r\n\r\nconst StatusHeader = ({\r\n  playerNames,\r\n  lifeCycleStage,\r\n  winner,\r\n  finishReason,\r\n  numMoves,\r\n  p1ToMove,\r\n}) => {\r\n  let msg;\r\n  const [name1, name2] = playerNames;\r\n  switch (lifeCycleStage) {\r\n    case -2:\r\n      msg = \"Haven't sent a message to the server yet\";\r\n      break;\r\n    case -1:\r\n      msg = \"Waiting for server response\";\r\n      break;\r\n    case 0:\r\n      msg = \"Waiting for player 2 to join\";\r\n      break;\r\n    case 1:\r\n      msg = `${p1ToMove ? name1 : name2} starts`;\r\n      break;\r\n    case 2:\r\n    case 3:\r\n      msg = `${p1ToMove ? name1 : name2} to move`;\r\n      break;\r\n    case 4:\r\n      if (winner === \"draw\") msg = \"The game ended in a draw\";\r\n      else\r\n        msg = `${winner === \"1\" ? name1 : name2} won on ${\r\n          finishReason === \"time\" ? \"on time\" : \"by reaching the goal\"\r\n        }`;\r\n      break;\r\n    default:\r\n      console.error(\"stage should be in range 0..4\");\r\n  }\r\n\r\n  return (\r\n    <Row\r\n      className=\"container valign-wrapper\"\r\n      style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\r\n    >\r\n      <Col s={8}>\r\n        <h6>{msg}</h6>\r\n      </Col>\r\n      <Col s={3}></Col>\r\n      <Col s={1}>\r\n        <h6>{numMoves}</h6>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default StatusHeader;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-materialize\";\r\n\r\nconst TimerHeader = ({\r\n  lifeCycleStage,\r\n  playerNames,\r\n  playerColors,\r\n  timeLeft1,\r\n  timeLeft2,\r\n  p1ToMove,\r\n}) => {\r\n  const actor = p1ToMove ? 1 : 2;\r\n  const name1 = playerNames[0];\r\n  const name2 = playerNames[1] === null ? \"......\" : playerNames[1];\r\n  const [color1, color2] = playerColors;\r\n  const turnHighlight = \"lighten-1 z-depth-2\";\r\n  const lowTimeColor = \"orange lighten-2 z-depth-3\";\r\n  const lowTime = 15;\r\n\r\n  const [min1, min2] = [Math.floor(timeLeft1 / 60), Math.floor(timeLeft2 / 60)];\r\n  const [sec1, sec2] = [timeLeft1 % 60, timeLeft2 % 60];\r\n\r\n  const highlightName1 =\r\n    lifeCycleStage < 4 && actor === 1 ? ` ${color1} ${turnHighlight}` : \"\";\r\n  const highlightName2 =\r\n    lifeCycleStage < 4 && actor === 2 ? ` ${color2} ${turnHighlight}` : \"\";\r\n  return (\r\n    <Row className=\"valign-wrapper container\">\r\n      <Col className={\"center\" + highlightName1} s={2}>\r\n        <h5>{name1}</h5>\r\n      </Col>\r\n      <Col\r\n        className={\r\n          \"center\" +\r\n          (actor === 1 && timeLeft1 < lowTime ? ` ${lowTimeColor}` : \"\")\r\n        }\r\n        s={2}\r\n        style={{ margin: \"0rem 1rem\" }}\r\n      >\r\n        <h5>\r\n          {min1}:{sec1 < 10 && \"0\"}\r\n          {sec1}\r\n        </h5>\r\n      </Col>\r\n      <Col s={4}></Col>\r\n      <Col\r\n        className={\r\n          \"center\" +\r\n          (actor === 2 && timeLeft2 < lowTime ? ` ${lowTimeColor}` : \"\")\r\n        }\r\n        s={2}\r\n        style={{ margin: \"0rem 1rem\" }}\r\n      >\r\n        <h5>\r\n          {min2}:{sec2 < 10 && \"0\"}\r\n          {sec2}\r\n        </h5>\r\n      </Col>\r\n      <Col className={\"center\" + highlightName2} s={2}>\r\n        <h5>{name2}</h5>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default TimerHeader;\r\n","import React, { useEffect } from \"react\";\r\nimport cloneDeep from \"lodash.clonedeep\"; //probably not needed\r\nimport { useImmer } from \"use-immer\";\r\n\r\nimport {\r\n  cellTypeByPos,\r\n  posEq,\r\n  distance,\r\n  canBuildWall,\r\n} from \"../gameLogic/mainLogic\";\r\nimport Board from \"./Board\";\r\nimport Header from \"../shared/Header\";\r\nimport StatusHeader from \"./StatusHeader\";\r\nimport TimerHeader from \"./TimerHeader\";\r\n\r\nconst emptyGrid = (dims) => {\r\n  let grid = [];\r\n  for (let r = 0; r < dims.h; r++) {\r\n    grid[r] = [];\r\n    for (let c = 0; c < dims.w; c++) grid[r][c] = 0;\r\n  }\r\n  return grid;\r\n};\r\n\r\nconst GamePage = ({\r\n  socket,\r\n  creatorParams,\r\n  joinerParams,\r\n  lobbyReturnFromGame,\r\n}) => {\r\n  const dims = { w: 23, h: 19 }; //traditional board size\r\n  const corners = {\r\n    tl: { r: 0, c: 0 },\r\n    tr: { r: 0, c: dims.w - 1 },\r\n    bl: { r: dims.h - 1, c: 0 },\r\n    br: { r: dims.h - 1, c: dims.w - 1 },\r\n  };\r\n  const initialPlayerPos = [corners.tl, corners.tr];\r\n  const goals = [corners.br, corners.bl]; //where the players have to reach to win\r\n  const isPlayer1 = creatorParams !== null;\r\n\r\n  const [S, updateState] = useImmer({\r\n    timeControl: isPlayer1 ? creatorParams.timeControl : null,\r\n    gameId: isPlayer1 ? null : joinerParams.gameId,\r\n    p1Name: isPlayer1 ? creatorParams.p1Name : null,\r\n    p2Name: isPlayer1 ? null : joinerParams.p2Name,\r\n    p1Starts: null,\r\n    lifeCycleStage: -2,\r\n    numMoves: 0,\r\n    playerPos: initialPlayerPos,\r\n    grid: emptyGrid(dims),\r\n    timeLeft1: isPlayer1 ? creatorParams.timeControl.duration * 60 : null,\r\n    timeLeft2: isPlayer1 ? creatorParams.timeControl.duration * 60 : null,\r\n    winner: \"\", //'' for an ongoing game, '1', '2', or 'draw' for a finished game\r\n    finishReason: \"\", //'' for an on-going game, 'time' or 'goal' for a finished game\r\n    ghostAction: null,\r\n  });\r\n\r\n  const p1ToMove = () => S.numMoves % 2 === (S.p1Starts ? 0 : 1);\r\n\r\n  useEffect(() => {\r\n    if (isPlayer1 && S.lifeCycleStage === -2) {\r\n      updateState((draftS) => {\r\n        draftS.lifeCycleStage = -1;\r\n      });\r\n      socket.emit(\"createGame\", S.timeControl, S.p1Name);\r\n    }\r\n    if (!isPlayer1 && S.lifeCycleStage === -2) {\r\n      updateState((draftS) => {\r\n        draftS.lifeCycleStage = -1;\r\n      });\r\n      socket.emit(\"joinGame\", S.gameId, S.p2Name);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    socket.once(\"gameCreated\", ({ gameId, p1Starts }) => {\r\n      updateState((draftS) => {\r\n        if (draftS.lifeCycleStage === 0) return;\r\n        draftS.gameId = gameId;\r\n        draftS.p1Starts = p1Starts;\r\n        draftS.lifeCycleStage = 0;\r\n      });\r\n    });\r\n    socket.once(\"gameJoined\", ({ p1Starts, p1Name, timeControl }) => {\r\n      updateState((draftS) => {\r\n        console.log(`game joined ${draftS.lifeCycleStage}`);\r\n        if (draftS.lifeCycleStage === 1) return;\r\n        draftS.p1Starts = p1Starts;\r\n        draftS.p1Name = p1Name;\r\n        draftS.timeControl = timeControl;\r\n        draftS.timeLeft1 = timeControl.duration * 60;\r\n        draftS.timeLeft2 = timeControl.duration * 60;\r\n        draftS.lifeCycleStage = 1;\r\n      });\r\n    });\r\n    socket.once(\"p2Joined\", (p2Name) => {\r\n      updateState((draftS) => {\r\n        if (draftS.lifeCycleStage === 1) return;\r\n        draftS.p2Name = p2Name;\r\n        draftS.lifeCycleStage = 1;\r\n      });\r\n    });\r\n    socket.on(\"move\", (actions, numMoves, receivedTime) => {\r\n      updateState((draftS) => {\r\n        console.log(\r\n          `move received ${numMoves} ${receivedTime} ${\r\n            draftS.numMoves === numMoves\r\n          }`\r\n        );\r\n        if (draftS.lifeCycleStage < 1 || draftS.lifeCycleStage > 3) return;\r\n        if (draftS.numMoves !== numMoves) return;\r\n        const pToMove =\r\n          draftS.numMoves % 2 === (draftS.p1Starts ? 0 : 1) ? 1 : 2;\r\n        for (let k = 0; k < actions.length; k++) {\r\n          const aPos = actions[k];\r\n          const aType = cellTypeByPos(aPos);\r\n          if (aType === \"Ground\") {\r\n            draftS.playerPos[pToMove - 1] = aPos;\r\n            if (posEq(aPos, goals[pToMove - 1])) {\r\n              const otherP = pToMove === 1 ? 2 : 1;\r\n              const pToMoveStarted = pToMove === (draftS.p1Starts ? 1 : 2);\r\n              const remainingDist = distance(\r\n                draftS.grid,\r\n                draftS.playerPos[otherP - 1],\r\n                goals[otherP - 1]\r\n              );\r\n              if (pToMoveStarted && remainingDist <= 2) {\r\n                draftS.winner = \"draw\";\r\n                draftS.finishReason = \"goal\";\r\n                draftS.lifeCycleStage = 4;\r\n              } else {\r\n                draftS.winner = pToMove.toString();\r\n                draftS.finishReason = \"goal\";\r\n                draftS.lifeCycleStage = 4;\r\n              }\r\n            }\r\n          } else if (aType === \"Wall\") {\r\n            draftS.grid[aPos.r][aPos.c] = pToMove;\r\n          } else console.error(\"unexpected action type\", aType);\r\n        }\r\n        if (isPlayer1) draftS.timeLeft2 = receivedTime;\r\n        else draftS.timeLeft1 = receivedTime;\r\n        draftS.ghostAction = null;\r\n        draftS.numMoves = numMoves + 1;\r\n        if (draftS.lifeCycleStage === 1 && numMoves === 0)\r\n          draftS.lifeCycleStage = 2;\r\n        else if (draftS.lifeCycleStage === 2 && numMoves === 1)\r\n          draftS.lifeCycleStage = 3;\r\n      });\r\n    });\r\n    return () => {\r\n      socket.removeAllListeners();\r\n    };\r\n  }, [socket, updateState, isPlayer1, S.gameId, goals]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      updateState((draftS) => {\r\n        if (draftS.lifeCycleStage !== 3) return;\r\n        const p1ToM = draftS.numMoves % 2 === (draftS.p1Starts ? 0 : 1);\r\n        if (p1ToM) {\r\n          draftS.timeLeft1 -= 1;\r\n          if (draftS.timeLeft1 === 0) {\r\n            draftS.winner = \"2\";\r\n            draftS.finishReason = \"time\";\r\n            draftS.lifeCycleStage = 4;\r\n          }\r\n        } else {\r\n          draftS.timeLeft2 -= 1;\r\n          if (draftS.timeLeft2 === 0) {\r\n            draftS.winner = \"1\";\r\n            draftS.finishReason = \"time\";\r\n            draftS.lifeCycleStage = 4;\r\n          }\r\n        }\r\n      });\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, [updateState]);\r\n\r\n  //one of 'None', 'Ground', 'Wall'\r\n  const ghostType = () =>\r\n    S.ghostAction === null ? \"None\" : cellTypeByPos(S.ghostAction);\r\n\r\n  //when player selects / clicks a cell, it can trigger a different number of actions\r\n  //1 action: build 1 wall or 1 step\r\n  const clickActionCount = (clickPos) => {\r\n    let [pos1, pos2] = cloneDeep(S.playerPos);\r\n    const playerToMove = p1ToMove() ? 1 : 2;\r\n\r\n    const clickType = cellTypeByPos(clickPos);\r\n    if (clickType === \"Ground\") {\r\n      const actorPos = playerToMove === 1 ? pos1 : pos2;\r\n      return distance(S.grid, actorPos, clickPos);\r\n    } else if (clickType === \"Wall\") {\r\n      const gridCopy = cloneDeep(S.grid); //copy to preserve immutability of state\r\n      if (ghostType() === \"Wall\") {\r\n        //block ghost wall for the check\r\n        gridCopy[S.ghostAction.r][S.ghostAction.c] = 1;\r\n      } else if (ghostType() === \"Ground\") {\r\n        //use ghost position for the check\r\n        [pos1, pos2] =\r\n          playerToMove === 1 ? [S.ghostAction, pos2] : [pos1, S.ghostAction];\r\n      }\r\n      return canBuildWall(gridCopy, [pos1, pos2], goals, clickPos) ? 1 : 0;\r\n    } else {\r\n      console.error(\"unexpected action type\", clickType);\r\n    }\r\n  };\r\n\r\n  //handles the logic of ghost moves and sending complete moves to the server\r\n  const handleClick = (clickPos) => {\r\n    const thisClientToMove = isPlayer1 === p1ToMove();\r\n    if (!thisClientToMove) return; //can only move if it's your turn\r\n    if (S.lifeCycleStage <= 0) return; //cannot move til player 2 joins\r\n    if (S.lifeCycleStage > 3) return; //cannot move if game finished\r\n    const clickType = cellTypeByPos(clickPos);\r\n    //first move by each player cannot be a wall\r\n    if (S.lifeCycleStage < 3 && clickType === \"Wall\") return;\r\n    const clickActCount = clickActionCount(clickPos);\r\n\r\n    let [actions, newGhostAction] = [null, null];\r\n    if (ghostType() === \"None\") {\r\n      if (clickType === \"Wall\") {\r\n        if (clickActCount === 1) newGhostAction = clickPos;\r\n        else return;\r\n      } else if (clickType === \"Ground\") {\r\n        if (clickActCount === 1) newGhostAction = clickPos;\r\n        else if (clickActCount === 2) actions = [clickPos];\r\n        else return;\r\n      } else {\r\n        console.error(\"unexpected action type\", clickType);\r\n      }\r\n    } else if (ghostType() === \"Wall\") {\r\n      if (clickType === \"Wall\") {\r\n        if (posEq(S.ghostAction, clickPos)) newGhostAction = null;\r\n        else if (clickActCount === 1) actions = [clickPos, S.ghostAction];\r\n        else return;\r\n      } else if (clickType === \"Ground\") {\r\n        if (clickActCount === 1) actions = [clickPos, S.ghostAction];\r\n        else return;\r\n      } else {\r\n        console.error(\"unexpected action type\", clickType);\r\n      }\r\n    } else if (ghostType() === \"Ground\") {\r\n      if (clickType === \"Wall\") {\r\n        if (clickActCount === 1) actions = [clickPos, S.ghostAction];\r\n        else return;\r\n      } else if (clickType === \"Ground\") {\r\n        if (clickActCount === 0) newGhostAction = null;\r\n        else if (clickActCount === 1) newGhostAction = clickPos;\r\n        else if (clickActCount === 2) actions = [clickPos];\r\n        else return;\r\n      } else {\r\n        console.error(\"unexpected action type\", clickType);\r\n      }\r\n    } else {\r\n      console.error(\"unexpected ghost type\", ghostType());\r\n    }\r\n\r\n    if (actions) {\r\n      let incrementedTime = isPlayer1 ? S.timeLeft1 : S.timeLeft2;\r\n      if (S.lifeCycleStage === 3) incrementedTime += S.timeControl.increment;\r\n      socket.emit(\"move\", actions, incrementedTime);\r\n      updateState((draftS) => {\r\n        if (draftS.numMoves !== S.numMoves) return;\r\n        const pToMove =\r\n          draftS.numMoves % 2 === (draftS.p1Starts ? 0 : 1) ? 1 : 2;\r\n        for (let k = 0; k < actions.length; k++) {\r\n          const aPos = actions[k];\r\n          const aType = cellTypeByPos(aPos);\r\n          if (aType === \"Ground\") {\r\n            draftS.playerPos[pToMove - 1] = aPos;\r\n            if (posEq(aPos, goals[pToMove - 1])) {\r\n              //special draw rule\r\n              const otherP = pToMove === 1 ? 2 : 1;\r\n              const pToMoveStarted = pToMove === (draftS.p1Starts ? 1 : 2);\r\n              const remainingDist = distance(\r\n                draftS.grid,\r\n                draftS.playerPos[otherP - 1],\r\n                goals[otherP - 1]\r\n              );\r\n              if (pToMoveStarted && remainingDist <= 2) {\r\n                draftS.winner = \"draw\";\r\n                draftS.finishReason = \"goal\";\r\n                draftS.lifeCycleStage = 4;\r\n              } else {\r\n                draftS.winner = pToMove.toString();\r\n                draftS.finishReason = \"goal\";\r\n                draftS.lifeCycleStage = 4;\r\n              }\r\n            }\r\n          } else if (aType === \"Wall\") {\r\n            draftS.grid[aPos.r][aPos.c] = pToMove;\r\n          } else console.error(\"unexpected action type\", aType);\r\n        }\r\n        if (isPlayer1) draftS.timeLeft1 = incrementedTime;\r\n        else draftS.timeLeft2 = incrementedTime;\r\n        draftS.ghostAction = null;\r\n        draftS.numMoves = S.numMoves + 1;\r\n        if (draftS.lifeCycleStage === 1 && S.numMoves === 0)\r\n          draftS.lifeCycleStage = 2;\r\n        else if (draftS.lifeCycleStage === 2 && S.numMoves === 1)\r\n          draftS.lifeCycleStage = 3;\r\n      });\r\n    } else {\r\n      updateState((draftS) => {\r\n        draftS.ghostAction = newGhostAction;\r\n      });\r\n    }\r\n  };\r\n\r\n  const playerColors = [\"red\", \"indigo\"];\r\n  const showGameHelp = () =>\r\n    console.log(\"todo: show game help in modal window\");\r\n\r\n  const handleEndGame = () => {\r\n    socket.emit(\"endGame\", S.gameId);\r\n    lobbyReturnFromGame();\r\n  };\r\n  return (\r\n    <div>\r\n      <Header\r\n        gameName={S.gameId}\r\n        showLobby\r\n        endGame={() => handleEndGame()}\r\n        showHelp={showGameHelp}\r\n      />\r\n      <StatusHeader\r\n        playerNames={[S.p1Name, S.p2Name]}\r\n        lifeCycleStage={S.lifeCycleStage}\r\n        winner={S.winner}\r\n        finishReason={S.finishReason}\r\n        numMoves={S.numMoves}\r\n        p1ToMove={p1ToMove()}\r\n      />\r\n      <TimerHeader\r\n        lifeCycleStage={S.lifeCycleStage}\r\n        playerNames={[S.p1Name, S.p2Name]}\r\n        playerColors={playerColors}\r\n        timeLeft1={S.timeLeft1}\r\n        timeLeft2={S.timeLeft2}\r\n        p1ToMove={p1ToMove()}\r\n      />\r\n      <Board\r\n        goals={goals}\r\n        playerPos={S.playerPos}\r\n        grid={S.grid}\r\n        ghostAction={S.ghostAction}\r\n        playerColors={playerColors}\r\n        handleClick={handleClick}\r\n        p1ToMove={p1ToMove()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GamePage;\r\n","import React from \"react\";\r\nimport { Row, Col, TextInput, Button } from \"react-materialize\";\r\n\r\nconst LobbyForm = ({\r\n  playerName,\r\n  handlePlayerName,\r\n  duration,\r\n  handleDuration,\r\n  increment,\r\n  handleIncrement,\r\n  joinGameId,\r\n  handleJoinGameId,\r\n  handleCreateGame,\r\n  handleJoinGame,\r\n}) => {\r\n  return (\r\n    <div className=\"container teal darken-2\" style={{ marginTop: \"2rem\" }}>\r\n      <Row className=\"valign-wrapper\">\r\n        <Col className=\"center\" s={3}>\r\n          <h5>Your name:</h5>\r\n        </Col>\r\n        <Col s={3}>\r\n          <TextInput\r\n            id=\"nameInput\"\r\n            value={playerName}\r\n            onChange={handlePlayerName}\r\n          />\r\n        </Col>\r\n        <Col s={6}></Col>\r\n      </Row>\r\n      <Row className=\"valign-wrapper\">\r\n        <Col className=\"center\" s={3}>\r\n          <Button node=\"button\" waves=\"light\" onClick={handleCreateGame}>\r\n            Create game\r\n          </Button>\r\n        </Col>\r\n        <Col s={1} style={{ paddingRight: \"0\" }}>\r\n          <TextInput\r\n            id=\"durationInput\"\r\n            label=\"Duration\"\r\n            value={`${duration}`}\r\n            onChange={handleDuration}\r\n          />\r\n        </Col>\r\n        <Col s={1} style={{ paddingLeft: \"0\" }}>\r\n          m\r\n        </Col>\r\n        <Col s={1} style={{ paddingRight: \"0\" }}>\r\n          <TextInput\r\n            id=\"incrementInput\"\r\n            label=\"Increment\"\r\n            value={`${increment}`}\r\n            onChange={handleIncrement}\r\n          />\r\n        </Col>\r\n        <Col s={1} style={{ paddingLeft: \"0\" }}>\r\n          s\r\n        </Col>\r\n        <Col s={5}></Col>\r\n      </Row>\r\n      <Row className=\"valign-wrapper\">\r\n        <Col className=\"center\" s={3}>\r\n          <Button node=\"button\" waves=\"light\" onClick={handleJoinGame}>\r\n            Join game\r\n          </Button>\r\n        </Col>\r\n        <Col s={5}>\r\n          <TextInput\r\n            id=\"joinInput\"\r\n            placeholder=\"Write game code here...\"\r\n            value={`${joinGameId}`}\r\n            onChange={handleJoinGameId}\r\n          />\r\n        </Col>\r\n        <Col s={4}></Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LobbyForm;\r\n","import React, { useState } from \"react\";\r\nimport { uniqueNamesGenerator, names } from \"unique-names-generator\";\r\n\r\nimport GamePage from \"../game/GamePage\";\r\nimport Header from \"../shared/Header\";\r\nimport LobbyForm from \"./LobbyForm\";\r\n\r\nconst randPlayerName = () =>\r\n  uniqueNamesGenerator({\r\n    dictionaries: [names],\r\n    length: 1,\r\n  }).slice(0, 6);\r\n\r\nconst LobbyPage = ({ socket }) => {\r\n  const [playerName, setPlayerName] = useState(randPlayerName());\r\n  const [duration, setDuration] = useState(5);\r\n  const [increment, setIncrement] = useState(2);\r\n  const [joinGameId, setJoinGameId] = useState(\"\");\r\n  const [isOngoingGame, setIsOngoingGame] = useState(false);\r\n  const [creatorParams, setCreatorParams] = useState(null);\r\n  const [joinerParams, setJoinerParams] = useState(null);\r\n\r\n  const handlePlayerName = (props) => setPlayerName(props.target.value);\r\n  const handleDuration = (props) => setDuration(props.target.value);\r\n  const handleIncrement = (props) => setIncrement(props.target.value);\r\n  const handleJoinGameId = (props) => setJoinGameId(props.target.value);\r\n\r\n  const handleCreateGame = () => {\r\n    setCreatorParams({\r\n      timeControl: { duration: duration, increment: increment },\r\n      p1Name: playerName,\r\n    });\r\n    setIsOngoingGame(true);\r\n  };\r\n  const handleJoinGame = () => {\r\n    setJoinerParams({ gameId: joinGameId, p2Name: playerName });\r\n    setIsOngoingGame(true);\r\n  };\r\n\r\n  const showLobbyHelp = () =>\r\n    console.log(\"todo: show lobby help in modal window\");\r\n\r\n  const lobbyReturnFromGame = () => {\r\n    setIsOngoingGame(false);\r\n    setCreatorParams(null);\r\n    setJoinerParams(null);\r\n    setJoinGameId(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isOngoingGame && (\r\n        <GamePage\r\n          socket={socket}\r\n          creatorParams={creatorParams}\r\n          joinerParams={joinerParams}\r\n          lobbyReturnFromGame={lobbyReturnFromGame}\r\n        />\r\n      )}\r\n      {!isOngoingGame && (\r\n        <div>\r\n          <Header gameName={\"\"} showHelp={showLobbyHelp} />\r\n          <LobbyForm\r\n            playerName={playerName}\r\n            handlePlayerName={handlePlayerName}\r\n            duration={duration}\r\n            handleDuration={handleDuration}\r\n            increment={increment}\r\n            handleIncrement={handleIncrement}\r\n            joinGameId={joinGameId}\r\n            handleJoinGameId={handleJoinGameId}\r\n            handleCreateGame={handleCreateGame}\r\n            handleJoinGame={handleJoinGame}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LobbyPage;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport socketIoClient from \"socket.io-client\";\r\n\r\nimport LobbyPage from \"./lobby/LobbyPage\";\r\n\r\nconst App = () => {\r\n  const BACKEND_ENDPOINT =\r\n    process.env.REACT_APP_BACKEND_URL || \"localhost:4001\";\r\n  const [socket] = useState(socketIoClient(BACKEND_ENDPOINT));\r\n\r\n  //every route redirects back to '/', which is both the lobby and the game page\r\n  return (\r\n    <React.StrictMode>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <LobbyPage socket={socket} />\r\n          </Route>\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </React.StrictMode>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}